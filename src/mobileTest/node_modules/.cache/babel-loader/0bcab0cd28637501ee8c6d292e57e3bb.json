{"ast":null,"code":"/*!\nFullCalendar Scheduler v5.3.1\nDocs & License: https://fullcalendar.io/scheduler\n(c) 2020 Adam Shaw\n*/\nimport { memoize, filterHash, rangesIntersect, isPropsEqual, mapHash, combineEventUis, refineProps, guid, identity, rangesEqual, parseBusinessHours, createEventUi, parseClassNames, EventApi, CalendarApi, Splitter, mergeEventStores, isPropsValid, parseFieldSpecs, unpromisify, requestJson, createElement, ViewContextType, formatDayString, RenderHook, NowTimer, Fragment, TableDateCell, TableDowCell, BaseComponent, computeFallbackHeaderFormat, flexibleCompare, compareByFieldSpecs, createPlugin } from '@fullcalendar/common';\nimport premiumCommonPlugin from '@fullcalendar/premium-common';\nimport { __assign, __extends, __spreadArrays } from 'tslib';\n\nfunction massageEventDragMutation(eventMutation, hit0, hit1) {\n  var resource0 = hit0.dateSpan.resourceId;\n  var resource1 = hit1.dateSpan.resourceId;\n\n  if (resource0 && resource1 && resource0 !== resource1) {\n    eventMutation.resourceMutation = {\n      matchResourceId: resource0,\n      setResourceId: resource1\n    };\n  }\n}\n/*\nTODO: all this would be much easier if we were using a hash!\n*/\n\n\nfunction applyEventDefMutation(eventDef, mutation, context) {\n  var resourceMutation = mutation.resourceMutation;\n\n  if (resourceMutation && computeResourceEditable(eventDef, context)) {\n    var index = eventDef.resourceIds.indexOf(resourceMutation.matchResourceId);\n\n    if (index !== -1) {\n      var resourceIds = eventDef.resourceIds.slice(); // copy\n\n      resourceIds.splice(index, 1); // remove\n\n      if (resourceIds.indexOf(resourceMutation.setResourceId) === -1) {\n        // not already in there\n        resourceIds.push(resourceMutation.setResourceId); // add\n      }\n\n      eventDef.resourceIds = resourceIds;\n    }\n  }\n}\n/*\nHACK\nTODO: use EventUi system instead of this\n*/\n\n\nfunction computeResourceEditable(eventDef, context) {\n  var resourceEditable = eventDef.resourceEditable;\n\n  if (resourceEditable == null) {\n    var source = eventDef.sourceId && context.getCurrentData().eventSources[eventDef.sourceId];\n\n    if (source) {\n      resourceEditable = source.extendedProps.resourceEditable; // used the Source::extendedProps hack\n    }\n\n    if (resourceEditable == null) {\n      resourceEditable = context.options.eventResourceEditable;\n\n      if (resourceEditable == null) {\n        resourceEditable = context.options.editable; // TODO: use defaults system instead\n      }\n    }\n  }\n\n  return resourceEditable;\n}\n\nfunction transformEventDrop(mutation, context) {\n  var resourceMutation = mutation.resourceMutation;\n\n  if (resourceMutation) {\n    var calendarApi = context.calendarApi;\n    return {\n      oldResource: calendarApi.getResourceById(resourceMutation.matchResourceId),\n      newResource: calendarApi.getResourceById(resourceMutation.setResourceId)\n    };\n  } else {\n    return {\n      oldResource: null,\n      newResource: null\n    };\n  }\n}\n\nvar ResourceDataAdder =\n/** @class */\nfunction () {\n  function ResourceDataAdder() {\n    this.filterResources = memoize(filterResources);\n  }\n\n  ResourceDataAdder.prototype.transform = function (viewProps, calendarProps) {\n    if (calendarProps.viewSpec.optionDefaults.needsResourceData) {\n      return {\n        resourceStore: this.filterResources(calendarProps.resourceStore, calendarProps.options.filterResourcesWithEvents, calendarProps.eventStore, calendarProps.dateProfile.activeRange),\n        resourceEntityExpansions: calendarProps.resourceEntityExpansions\n      };\n    }\n  };\n\n  return ResourceDataAdder;\n}();\n\nfunction filterResources(resourceStore, doFilterResourcesWithEvents, eventStore, activeRange) {\n  if (doFilterResourcesWithEvents) {\n    var instancesInRange = filterEventInstancesInRange(eventStore.instances, activeRange);\n    var hasEvents_1 = computeHasEvents(instancesInRange, eventStore.defs);\n\n    __assign(hasEvents_1, computeAncestorHasEvents(hasEvents_1, resourceStore));\n\n    return filterHash(resourceStore, function (resource, resourceId) {\n      return hasEvents_1[resourceId];\n    });\n  } else {\n    return resourceStore;\n  }\n}\n\nfunction filterEventInstancesInRange(eventInstances, activeRange) {\n  return filterHash(eventInstances, function (eventInstance) {\n    return rangesIntersect(eventInstance.range, activeRange);\n  });\n}\n\nfunction computeHasEvents(eventInstances, eventDefs) {\n  var hasEvents = {};\n\n  for (var instanceId in eventInstances) {\n    var instance = eventInstances[instanceId];\n\n    for (var _i = 0, _a = eventDefs[instance.defId].resourceIds; _i < _a.length; _i++) {\n      var resourceId = _a[_i];\n      hasEvents[resourceId] = true;\n    }\n  }\n\n  return hasEvents;\n}\n/*\nmark resources as having events if any of their ancestors have them\nNOTE: resourceStore might not have all the resources that hasEvents{} has keyed\n*/\n\n\nfunction computeAncestorHasEvents(hasEvents, resourceStore) {\n  var res = {};\n\n  for (var resourceId in hasEvents) {\n    var resource = void 0;\n\n    while (resource = resourceStore[resourceId]) {\n      resourceId = resource.parentId; // now functioning as the parentId\n\n      if (resourceId) {\n        res[resourceId] = true;\n      } else {\n        break;\n      }\n    }\n  }\n\n  return res;\n} // for when non-resource view should be given EventUi info (for event coloring/constraints based off of resource data)\n\n\nvar ResourceEventConfigAdder =\n/** @class */\nfunction () {\n  function ResourceEventConfigAdder() {\n    this.buildResourceEventUis = memoize(buildResourceEventUis, isPropsEqual);\n    this.injectResourceEventUis = memoize(injectResourceEventUis);\n  }\n\n  ResourceEventConfigAdder.prototype.transform = function (viewProps, calendarProps) {\n    if (!calendarProps.viewSpec.optionDefaults.needsResourceData) {\n      return {\n        eventUiBases: this.injectResourceEventUis(viewProps.eventUiBases, viewProps.eventStore.defs, this.buildResourceEventUis(calendarProps.resourceStore))\n      };\n    }\n  };\n\n  return ResourceEventConfigAdder;\n}();\n\nfunction buildResourceEventUis(resourceStore) {\n  return mapHash(resourceStore, function (resource) {\n    return resource.ui;\n  });\n}\n\nfunction injectResourceEventUis(eventUiBases, eventDefs, resourceEventUis) {\n  return mapHash(eventUiBases, function (eventUi, defId) {\n    if (defId) {\n      // not the '' key\n      return injectResourceEventUi(eventUi, eventDefs[defId], resourceEventUis);\n    } else {\n      return eventUi;\n    }\n  });\n}\n\nfunction injectResourceEventUi(origEventUi, eventDef, resourceEventUis) {\n  var parts = []; // first resource takes precedence, which fights with the ordering of combineEventUis, thus the unshifts\n\n  for (var _i = 0, _a = eventDef.resourceIds; _i < _a.length; _i++) {\n    var resourceId = _a[_i];\n\n    if (resourceEventUis[resourceId]) {\n      parts.unshift(resourceEventUis[resourceId]);\n    }\n  }\n\n  parts.unshift(origEventUi);\n  return combineEventUis(parts);\n} // for making sure events that have editable resources are always draggable in resource views\n\n\nfunction transformIsDraggable(val, eventDef, eventUi, context) {\n  if (!val) {\n    var state = context.getCurrentData();\n    var viewSpec = state.viewSpecs[state.currentViewType];\n\n    if (viewSpec.optionDefaults.needsResourceData) {\n      if (computeResourceEditable(eventDef, context)) {\n        return true;\n      }\n    }\n  }\n\n  return val;\n}\n\nvar defs = []; // TODO: use plugin system\n\nfunction registerResourceSourceDef(def) {\n  defs.push(def);\n}\n\nfunction getResourceSourceDef(id) {\n  return defs[id];\n}\n\nfunction getResourceSourceDefs() {\n  return defs;\n} // TODO: make this a plugin-able parser\n// TODO: success/failure\n\n\nvar RESOURCE_SOURCE_REFINERS = {\n  id: String,\n  // for array. TODO: move to resource-array\n  resources: identity,\n  // for json feed. TODO: move to resource-json-feed\n  url: String,\n  method: String,\n  startParam: String,\n  endParam: String,\n  timeZoneParam: String,\n  extraParams: identity\n};\n\nfunction parseResourceSource(input) {\n  var inputObj;\n\n  if (typeof input === 'string') {\n    inputObj = {\n      url: input\n    };\n  } else if (typeof input === 'function' || Array.isArray(input)) {\n    inputObj = {\n      resources: input\n    };\n  } else if (typeof input === 'object' && input) {\n    // non-null object\n    inputObj = input;\n  }\n\n  if (inputObj) {\n    var _a = refineProps(inputObj, RESOURCE_SOURCE_REFINERS),\n        refined = _a.refined,\n        extra = _a.extra;\n\n    warnUnknownProps(extra);\n    var metaRes = buildResourceSourceMeta(refined);\n\n    if (metaRes) {\n      return {\n        _raw: input,\n        sourceId: guid(),\n        sourceDefId: metaRes.sourceDefId,\n        meta: metaRes.meta,\n        publicId: refined.id || '',\n        isFetching: false,\n        latestFetchId: '',\n        fetchRange: null\n      };\n    }\n  }\n\n  return null;\n}\n\nfunction buildResourceSourceMeta(refined) {\n  var defs = getResourceSourceDefs();\n\n  for (var i = defs.length - 1; i >= 0; i--) {\n    // later-added plugins take precedence\n    var def = defs[i];\n    var meta = def.parseMeta(refined);\n\n    if (meta) {\n      return {\n        meta: meta,\n        sourceDefId: i\n      };\n    }\n  }\n}\n\nfunction warnUnknownProps(props) {\n  for (var propName in props) {\n    console.warn(\"Unknown resource prop '\" + propName + \"'\");\n  }\n}\n\nfunction reduceResourceSource(source, action, context) {\n  var options = context.options,\n      dateProfile = context.dateProfile;\n\n  if (!source || !action) {\n    return createSource(options.initialResources || options.resources, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n  }\n\n  switch (action.type) {\n    case 'RESET_RESOURCE_SOURCE':\n      return createSource(action.resourceSourceInput, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n\n    case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n\n    case 'NEXT':\n    case 'CHANGE_DATE':\n    case 'CHANGE_VIEW_TYPE':\n      return handleRangeChange(source, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n\n    case 'RECEIVE_RESOURCES':\n    case 'RECEIVE_RESOURCE_ERROR':\n      return receiveResponse(source, action.fetchId, action.fetchRange);\n\n    case 'REFETCH_RESOURCES':\n      return fetchSource(source, dateProfile.activeRange, context);\n\n    default:\n      return source;\n  }\n}\n\nfunction createSource(input, activeRange, refetchResourcesOnNavigate, context) {\n  if (input) {\n    var source = parseResourceSource(input);\n    source = fetchSource(source, refetchResourcesOnNavigate ? activeRange : null, context);\n    return source;\n  }\n\n  return null;\n}\n\nfunction handleRangeChange(source, activeRange, refetchResourcesOnNavigate, context) {\n  if (refetchResourcesOnNavigate && !doesSourceIgnoreRange(source) && (!source.fetchRange || !rangesEqual(source.fetchRange, activeRange))) {\n    return fetchSource(source, activeRange, context);\n  } else {\n    return source;\n  }\n}\n\nfunction doesSourceIgnoreRange(source) {\n  return Boolean(getResourceSourceDef(source.sourceDefId).ignoreRange);\n}\n\nfunction fetchSource(source, fetchRange, context) {\n  var sourceDef = getResourceSourceDef(source.sourceDefId);\n  var fetchId = guid();\n  sourceDef.fetch({\n    resourceSource: source,\n    range: fetchRange,\n    context: context\n  }, function (res) {\n    context.dispatch({\n      type: 'RECEIVE_RESOURCES',\n      fetchId: fetchId,\n      fetchRange: fetchRange,\n      rawResources: res.rawResources\n    });\n  }, function (error) {\n    context.dispatch({\n      type: 'RECEIVE_RESOURCE_ERROR',\n      fetchId: fetchId,\n      fetchRange: fetchRange,\n      error: error\n    });\n  });\n  return __assign(__assign({}, source), {\n    isFetching: true,\n    latestFetchId: fetchId\n  });\n}\n\nfunction receiveResponse(source, fetchId, fetchRange) {\n  if (fetchId === source.latestFetchId) {\n    return __assign(__assign({}, source), {\n      isFetching: false,\n      fetchRange: fetchRange\n    });\n  }\n\n  return source;\n}\n\nvar PRIVATE_ID_PREFIX = '_fc:';\nvar RESOURCE_REFINERS = {\n  id: String,\n  parentId: String,\n  children: identity,\n  title: String,\n  businessHours: identity,\n  extendedProps: identity,\n  // event-ui\n  eventEditable: Boolean,\n  eventStartEditable: Boolean,\n  eventDurationEditable: Boolean,\n  eventConstraint: identity,\n  eventOverlap: Boolean,\n  eventAllow: identity,\n  eventClassNames: parseClassNames,\n  eventBackgroundColor: String,\n  eventBorderColor: String,\n  eventTextColor: String,\n  eventColor: String\n};\n/*\nneeds a full store so that it can populate children too\n*/\n\nfunction parseResource(raw, parentId, store, context) {\n  if (parentId === void 0) {\n    parentId = '';\n  }\n\n  var _a = refineProps(raw, RESOURCE_REFINERS),\n      refined = _a.refined,\n      extra = _a.extra;\n\n  var resource = {\n    id: refined.id || PRIVATE_ID_PREFIX + guid(),\n    parentId: refined.parentId || parentId,\n    title: refined.title || '',\n    businessHours: refined.businessHours ? parseBusinessHours(refined.businessHours, context) : null,\n    ui: createEventUi({\n      editable: refined.eventEditable,\n      startEditable: refined.eventStartEditable,\n      durationEditable: refined.eventDurationEditable,\n      constraint: refined.eventConstraint,\n      overlap: refined.eventOverlap,\n      allow: refined.eventAllow,\n      classNames: refined.eventClassNames,\n      backgroundColor: refined.eventBackgroundColor,\n      borderColor: refined.eventBorderColor,\n      textColor: refined.eventTextColor,\n      color: refined.eventColor\n    }, context),\n    extendedProps: __assign(__assign({}, extra), refined.extendedProps)\n  }; // help out ResourceApi from having user modify props\n\n  Object.freeze(resource.ui.classNames);\n  Object.freeze(resource.extendedProps);\n  if (store[resource.id]) ;else {\n    store[resource.id] = resource;\n\n    if (refined.children) {\n      for (var _i = 0, _b = refined.children; _i < _b.length; _i++) {\n        var childInput = _b[_i];\n        parseResource(childInput, resource.id, store, context);\n      }\n    }\n  }\n  return resource;\n}\n/*\nTODO: use this in more places\n*/\n\n\nfunction getPublicId(id) {\n  if (id.indexOf(PRIVATE_ID_PREFIX) === 0) {\n    return '';\n  }\n\n  return id;\n}\n\nfunction reduceResourceStore(store, action, source, context) {\n  if (!store || !action) {\n    return {};\n  }\n\n  switch (action.type) {\n    case 'RECEIVE_RESOURCES':\n      return receiveRawResources(store, action.rawResources, action.fetchId, source, context);\n\n    case 'ADD_RESOURCE':\n      return addResource(store, action.resourceHash);\n\n    case 'REMOVE_RESOURCE':\n      return removeResource(store, action.resourceId);\n\n    case 'SET_RESOURCE_PROP':\n      return setResourceProp(store, action.resourceId, action.propName, action.propValue);\n\n    case 'SET_RESOURCE_EXTENDED_PROP':\n      return setResourceExtendedProp(store, action.resourceId, action.propName, action.propValue);\n\n    default:\n      return store;\n  }\n}\n\nfunction receiveRawResources(existingStore, inputs, fetchId, source, context) {\n  if (source.latestFetchId === fetchId) {\n    var nextStore = {};\n\n    for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n      var input = inputs_1[_i];\n      parseResource(input, '', nextStore, context);\n    }\n\n    return nextStore;\n  } else {\n    return existingStore;\n  }\n}\n\nfunction addResource(existingStore, additions) {\n  // TODO: warn about duplicate IDs\n  return __assign(__assign({}, existingStore), additions);\n}\n\nfunction removeResource(existingStore, resourceId) {\n  var newStore = __assign({}, existingStore);\n\n  delete newStore[resourceId]; // promote children\n\n  for (var childResourceId in newStore) {\n    // a child, *maybe* but probably not\n    if (newStore[childResourceId].parentId === resourceId) {\n      newStore[childResourceId] = __assign(__assign({}, newStore[childResourceId]), {\n        parentId: ''\n      });\n    }\n  }\n\n  return newStore;\n}\n\nfunction setResourceProp(existingStore, resourceId, name, value) {\n  var _a, _b;\n\n  var existingResource = existingStore[resourceId]; // TODO: sanitization\n\n  if (existingResource) {\n    return __assign(__assign({}, existingStore), (_a = {}, _a[resourceId] = __assign(__assign({}, existingResource), (_b = {}, _b[name] = value, _b)), _a));\n  } else {\n    return existingStore;\n  }\n}\n\nfunction setResourceExtendedProp(existingStore, resourceId, name, value) {\n  var _a, _b;\n\n  var existingResource = existingStore[resourceId];\n\n  if (existingResource) {\n    return __assign(__assign({}, existingStore), (_a = {}, _a[resourceId] = __assign(__assign({}, existingResource), {\n      extendedProps: __assign(__assign({}, existingResource.extendedProps), (_b = {}, _b[name] = value, _b))\n    }), _a));\n  } else {\n    return existingStore;\n  }\n}\n\nfunction reduceResourceEntityExpansions(expansions, action) {\n  var _a;\n\n  if (!expansions || !action) {\n    return {};\n  }\n\n  switch (action.type) {\n    case 'SET_RESOURCE_ENTITY_EXPANDED':\n      return __assign(__assign({}, expansions), (_a = {}, _a[action.id] = action.isExpanded, _a));\n\n    default:\n      return expansions;\n  }\n}\n\nfunction reduceResources(state, action, context) {\n  var resourceSource = reduceResourceSource(state && state.resourceSource, action, context);\n  var resourceStore = reduceResourceStore(state && state.resourceStore, action, resourceSource, context);\n  var resourceEntityExpansions = reduceResourceEntityExpansions(state && state.resourceEntityExpansions, action);\n  return {\n    resourceSource: resourceSource,\n    resourceStore: resourceStore,\n    resourceEntityExpansions: resourceEntityExpansions,\n    loadingLevel: context.loadingLevel + (resourceSource && resourceSource.isFetching ? 1 : 0)\n  };\n}\n\nvar EVENT_REFINERS = {\n  resourceId: String,\n  resourceIds: identity,\n  resourceEditable: Boolean\n};\n\nfunction generateEventDefResourceMembers(refined) {\n  return {\n    resourceIds: ensureStringArray(refined.resourceIds).concat(refined.resourceId ? [refined.resourceId] : []),\n    resourceEditable: refined.resourceEditable\n  };\n}\n\nfunction ensureStringArray(items) {\n  return (items || []).map(function (item) {\n    return String(item);\n  });\n}\n\nfunction transformDateSelectionJoin(hit0, hit1) {\n  var resourceId0 = hit0.dateSpan.resourceId;\n  var resourceId1 = hit1.dateSpan.resourceId;\n\n  if (resourceId0 && resourceId1) {\n    if (hit0.component.allowAcrossResources === false && resourceId0 !== resourceId1) {\n      return false;\n    } else {\n      return {\n        resourceId: resourceId0\n      };\n    }\n  }\n}\n\nvar ResourceApi =\n/** @class */\nfunction () {\n  function ResourceApi(_context, _resource) {\n    this._context = _context;\n    this._resource = _resource;\n  }\n\n  ResourceApi.prototype.setProp = function (name, value) {\n    var oldResource = this._resource;\n\n    this._context.dispatch({\n      type: 'SET_RESOURCE_PROP',\n      resourceId: oldResource.id,\n      propName: name,\n      propValue: value\n    });\n\n    this.sync(oldResource);\n  };\n\n  ResourceApi.prototype.setExtendedProp = function (name, value) {\n    var oldResource = this._resource;\n\n    this._context.dispatch({\n      type: 'SET_RESOURCE_EXTENDED_PROP',\n      resourceId: oldResource.id,\n      propName: name,\n      propValue: value\n    });\n\n    this.sync(oldResource);\n  };\n\n  ResourceApi.prototype.sync = function (oldResource) {\n    var context = this._context;\n    var resourceId = oldResource.id; // TODO: what if dispatch didn't complete synchronously?\n\n    this._resource = context.getCurrentData().resourceStore[resourceId];\n    context.emitter.trigger('resourceChange', {\n      oldResource: new ResourceApi(context, oldResource),\n      resource: this,\n      revert: function () {\n        var _a;\n\n        context.dispatch({\n          type: 'ADD_RESOURCE',\n          resourceHash: (_a = {}, _a[resourceId] = oldResource, _a)\n        });\n      }\n    });\n  };\n\n  ResourceApi.prototype.remove = function () {\n    var context = this._context;\n    var internalResource = this._resource;\n    var resourceId = internalResource.id;\n    context.dispatch({\n      type: 'REMOVE_RESOURCE',\n      resourceId: resourceId\n    });\n    context.emitter.trigger('resourceRemove', {\n      resource: this,\n      revert: function () {\n        var _a;\n\n        context.dispatch({\n          type: 'ADD_RESOURCE',\n          resourceHash: (_a = {}, _a[resourceId] = internalResource, _a)\n        });\n      }\n    });\n  };\n\n  ResourceApi.prototype.getParent = function () {\n    var context = this._context;\n    var parentId = this._resource.parentId;\n\n    if (parentId) {\n      return new ResourceApi(context, context.getCurrentData().resourceSource[parentId]);\n    } else {\n      return null;\n    }\n  };\n\n  ResourceApi.prototype.getChildren = function () {\n    var thisResourceId = this._resource.id;\n    var context = this._context;\n    var resourceStore = context.getCurrentData().resourceStore;\n    var childApis = [];\n\n    for (var resourceId in resourceStore) {\n      if (resourceStore[resourceId].parentId === thisResourceId) {\n        childApis.push(new ResourceApi(context, resourceStore[resourceId]));\n      }\n    }\n\n    return childApis;\n  };\n  /*\n  this is really inefficient!\n  TODO: make EventApi::resourceIds a hash or keep an index in the Calendar's state\n  */\n\n\n  ResourceApi.prototype.getEvents = function () {\n    var thisResourceId = this._resource.id;\n    var context = this._context;\n    var _a = context.getCurrentData().eventStore,\n        defs = _a.defs,\n        instances = _a.instances;\n    var eventApis = [];\n\n    for (var instanceId in instances) {\n      var instance = instances[instanceId];\n      var def = defs[instance.defId];\n\n      if (def.resourceIds.indexOf(thisResourceId) !== -1) {\n        // inefficient!!!\n        eventApis.push(new EventApi(context, def, instance));\n      }\n    }\n\n    return eventApis;\n  };\n\n  Object.defineProperty(ResourceApi.prototype, \"id\", {\n    get: function () {\n      return getPublicId(this._resource.id);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ResourceApi.prototype, \"title\", {\n    get: function () {\n      return this._resource.title;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ResourceApi.prototype, \"eventConstraint\", {\n    get: function () {\n      return this._resource.ui.constraints[0] || null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ResourceApi.prototype, \"eventOverlap\", {\n    get: function () {\n      return this._resource.ui.overlap;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ResourceApi.prototype, \"eventAllow\", {\n    get: function () {\n      return this._resource.ui.allows[0] || null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ResourceApi.prototype, \"eventBackgroundColor\", {\n    get: function () {\n      return this._resource.ui.backgroundColor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ResourceApi.prototype, \"eventBorderColor\", {\n    get: function () {\n      return this._resource.ui.borderColor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ResourceApi.prototype, \"eventTextColor\", {\n    get: function () {\n      return this._resource.ui.textColor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ResourceApi.prototype, \"eventClassNames\", {\n    // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n    get: function () {\n      return this._resource.ui.classNames;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ResourceApi.prototype, \"extendedProps\", {\n    get: function () {\n      return this._resource.extendedProps;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ResourceApi.prototype.toPlainObject = function (settings) {\n    if (settings === void 0) {\n      settings = {};\n    }\n\n    var internal = this._resource;\n    var ui = internal.ui;\n    var publicId = this.id;\n    var res = {};\n\n    if (publicId) {\n      res.id = publicId;\n    }\n\n    if (internal.title) {\n      res.title = internal.title;\n    }\n\n    if (settings.collapseEventColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {\n      res.eventColor = ui.backgroundColor;\n    } else {\n      if (ui.backgroundColor) {\n        res.eventBackgroundColor = ui.backgroundColor;\n      }\n\n      if (ui.borderColor) {\n        res.eventBorderColor = ui.borderColor;\n      }\n    }\n\n    if (ui.textColor) {\n      res.eventTextColor = ui.textColor;\n    }\n\n    if (ui.classNames.length) {\n      res.eventClassNames = ui.classNames;\n    }\n\n    if (Object.keys(internal.extendedProps).length) {\n      if (settings.collapseExtendedProps) {\n        __assign(res, internal.extendedProps);\n      } else {\n        res.extendedProps = internal.extendedProps;\n      }\n    }\n\n    return res;\n  };\n\n  ResourceApi.prototype.toJSON = function () {\n    return this.toPlainObject();\n  };\n\n  return ResourceApi;\n}();\n\nfunction buildResourceApis(resourceStore, context) {\n  var resourceApis = [];\n\n  for (var resourceId in resourceStore) {\n    resourceApis.push(new ResourceApi(context, resourceStore[resourceId]));\n  }\n\n  return resourceApis;\n}\n\nCalendarApi.prototype.addResource = function (input, scrollTo) {\n  var _a;\n\n  var _this = this;\n\n  if (scrollTo === void 0) {\n    scrollTo = true;\n  }\n\n  var currentState = this.getCurrentData();\n  var resourceHash;\n  var resource;\n\n  if (input instanceof ResourceApi) {\n    resource = input._resource;\n    resourceHash = (_a = {}, _a[resource.id] = resource, _a);\n  } else {\n    resourceHash = {};\n    resource = parseResource(input, '', resourceHash, currentState);\n  }\n\n  this.dispatch({\n    type: 'ADD_RESOURCE',\n    resourceHash: resourceHash\n  });\n\n  if (scrollTo) {\n    // TODO: wait til dispatch completes somehow\n    this.trigger('_scrollRequest', {\n      resourceId: resource.id\n    });\n  }\n\n  var resourceApi = new ResourceApi(currentState, resource);\n  currentState.emitter.trigger('resourceAdd', {\n    resource: resourceApi,\n    revert: function () {\n      _this.dispatch({\n        type: 'REMOVE_RESOURCE',\n        resourceId: resource.id\n      });\n    }\n  });\n  return resourceApi;\n};\n\nCalendarApi.prototype.getResourceById = function (id) {\n  id = String(id);\n  var currentState = this.getCurrentData();\n\n  if (currentState.resourceStore) {\n    // guard against calendar with no resource functionality\n    var rawResource = currentState.resourceStore[id];\n\n    if (rawResource) {\n      return new ResourceApi(currentState, rawResource);\n    }\n  }\n\n  return null;\n};\n\nCalendarApi.prototype.getResources = function () {\n  var currentState = this.getCurrentData();\n  var resourceStore = currentState.resourceStore;\n  var resourceApis = [];\n\n  if (resourceStore) {\n    // guard against calendar with no resource functionality\n    for (var resourceId in resourceStore) {\n      resourceApis.push(new ResourceApi(currentState, resourceStore[resourceId]));\n    }\n  }\n\n  return resourceApis;\n};\n\nCalendarApi.prototype.getTopLevelResources = function () {\n  var currentState = this.getCurrentData();\n  var resourceStore = currentState.resourceStore;\n  var resourceApis = [];\n\n  if (resourceStore) {\n    // guard against calendar with no resource functionality\n    for (var resourceId in resourceStore) {\n      if (!resourceStore[resourceId].parentId) {\n        resourceApis.push(new ResourceApi(currentState, resourceStore[resourceId]));\n      }\n    }\n  }\n\n  return resourceApis;\n};\n\nCalendarApi.prototype.refetchResources = function () {\n  this.dispatch({\n    type: 'REFETCH_RESOURCES'\n  });\n};\n\nfunction transformDatePoint(dateSpan, context) {\n  return dateSpan.resourceId ? {\n    resource: context.calendarApi.getResourceById(dateSpan.resourceId)\n  } : {};\n}\n\nfunction transformDateSpan(dateSpan, context) {\n  return dateSpan.resourceId ? {\n    resource: context.calendarApi.getResourceById(dateSpan.resourceId)\n  } : {};\n}\n/*\nsplits things BASED OFF OF which resources they are associated with.\ncreates a '' entry which is when something has NO resource.\n*/\n\n\nvar ResourceSplitter =\n/** @class */\nfunction (_super) {\n  __extends(ResourceSplitter, _super);\n\n  function ResourceSplitter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ResourceSplitter.prototype.getKeyInfo = function (props) {\n    return __assign({\n      '': {}\n    }, props.resourceStore // already has `ui` and `businessHours` keys!\n    );\n  };\n\n  ResourceSplitter.prototype.getKeysForDateSpan = function (dateSpan) {\n    return [dateSpan.resourceId || ''];\n  };\n\n  ResourceSplitter.prototype.getKeysForEventDef = function (eventDef) {\n    var resourceIds = eventDef.resourceIds;\n\n    if (!resourceIds.length) {\n      return [''];\n    }\n\n    return resourceIds;\n  };\n\n  return ResourceSplitter;\n}(Splitter);\n\nfunction isPropsValidWithResources(props, context) {\n  var splitter = new ResourceSplitter();\n  var sets = splitter.splitProps(__assign(__assign({}, props), {\n    resourceStore: context.getCurrentData().resourceStore\n  }));\n\n  for (var resourceId in sets) {\n    var props_1 = sets[resourceId]; // merge in event data from the non-resource segment\n\n    if (resourceId && sets['']) {\n      // current segment is not the non-resource one, and there IS a non-resource one\n      props_1 = __assign(__assign({}, props_1), {\n        eventStore: mergeEventStores(sets[''].eventStore, props_1.eventStore),\n        eventUiBases: __assign(__assign({}, sets[''].eventUiBases), props_1.eventUiBases)\n      });\n    }\n\n    if (!isPropsValid(props_1, context, {\n      resourceId: resourceId\n    }, filterConfig.bind(null, resourceId))) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction filterConfig(resourceId, config) {\n  return __assign(__assign({}, config), {\n    constraints: filterConstraints(resourceId, config.constraints)\n  });\n}\n\nfunction filterConstraints(resourceId, constraints) {\n  return constraints.map(function (constraint) {\n    var defs = constraint.defs;\n\n    if (defs) {\n      // we are dealing with an EventStore\n      // if any of the events define constraints to resources that are NOT this resource,\n      // then this resource is unconditionally prohibited, which is what a `false` value does.\n      for (var defId in defs) {\n        var resourceIds = defs[defId].resourceIds;\n\n        if (resourceIds.length && resourceIds.indexOf(resourceId) === -1) {\n          // TODO: use a hash?!!! (for other reasons too)\n          return false;\n        }\n      }\n    }\n\n    return constraint;\n  });\n}\n\nfunction transformExternalDef(dateSpan) {\n  return dateSpan.resourceId ? {\n    resourceId: dateSpan.resourceId\n  } : {};\n}\n\nfunction transformEventResizeJoin(hit0, hit1) {\n  var component = hit0.component;\n\n  if (component.allowAcrossResources === false && hit0.dateSpan.resourceId !== hit1.dateSpan.resourceId) {\n    return false;\n  }\n}\n\nEventApi.prototype.getResources = function () {\n  var calendarApi = this._context.calendarApi;\n  return this._def.resourceIds.map(function (resourceId) {\n    return calendarApi.getResourceById(resourceId);\n  });\n};\n\nEventApi.prototype.setResources = function (resources) {\n  var resourceIds = []; // massage resources -> resourceIds\n\n  for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\n    var resource = resources_1[_i];\n    var resourceId = null;\n\n    if (typeof resource === 'string') {\n      resourceId = resource;\n    } else if (typeof resource === 'number') {\n      resourceId = String(resource);\n    } else if (resource instanceof ResourceApi) {\n      resourceId = resource.id; // guaranteed to always have an ID. hmmm\n    } else {\n      console.warn('unknown resource type: ' + resource);\n    }\n\n    if (resourceId) {\n      resourceIds.push(resourceId);\n    }\n  }\n\n  this.mutate({\n    standardProps: {\n      resourceIds: resourceIds\n    }\n  });\n};\n\nvar optionChangeHandlers = {\n  resources: handleResources\n};\n\nfunction handleResources(newSourceInput, context) {\n  var oldSourceInput = context.getCurrentData().resourceSource._raw;\n\n  if (oldSourceInput !== newSourceInput) {\n    context.dispatch({\n      type: 'RESET_RESOURCE_SOURCE',\n      resourceSourceInput: newSourceInput\n    });\n  }\n}\n\nvar DEFAULT_RESOURCE_ORDER = parseFieldSpecs('id,title');\n\nfunction handleResourceStore(resourceStore, calendarData) {\n  var emitter = calendarData.emitter;\n\n  if (emitter.hasHandlers('resourcesSet')) {\n    emitter.trigger('resourcesSet', buildResourceApis(resourceStore, calendarData));\n  }\n}\n\nvar OPTION_REFINERS = {\n  initialResources: identity,\n  resources: identity,\n  eventResourceEditable: Boolean,\n  refetchResourcesOnNavigate: Boolean,\n  resourceOrder: parseFieldSpecs,\n  filterResourcesWithEvents: Boolean,\n  resourceGroupField: String,\n  resourceAreaWidth: identity,\n  resourceAreaColumns: identity,\n  resourcesInitiallyExpanded: Boolean,\n  datesAboveResources: Boolean,\n  needsResourceData: Boolean,\n  resourceAreaHeaderClassNames: identity,\n  resourceAreaHeaderContent: identity,\n  resourceAreaHeaderDidMount: identity,\n  resourceAreaHeaderWillUnmount: identity,\n  resourceGroupLabelClassNames: identity,\n  resourceGroupLabelContent: identity,\n  resourceGroupLabelDidMount: identity,\n  resourceGroupLabelWillUnmount: identity,\n  resourceLabelClassNames: identity,\n  resourceLabelContent: identity,\n  resourceLabelDidMount: identity,\n  resourceLabelWillUnmount: identity,\n  resourceLaneClassNames: identity,\n  resourceLaneContent: identity,\n  resourceLaneDidMount: identity,\n  resourceLaneWillUnmount: identity,\n  resourceGroupLaneClassNames: identity,\n  resourceGroupLaneContent: identity,\n  resourceGroupLaneDidMount: identity,\n  resourceGroupLaneWillUnmount: identity\n};\nvar LISTENER_REFINERS = {\n  resourcesSet: identity,\n  resourceAdd: identity,\n  resourceChange: identity,\n  resourceRemove: identity\n};\nregisterResourceSourceDef({\n  ignoreRange: true,\n  parseMeta: function (refined) {\n    if (Array.isArray(refined.resources)) {\n      return refined.resources;\n    }\n\n    return null;\n  },\n  fetch: function (arg, successCallback) {\n    successCallback({\n      rawResources: arg.resourceSource.meta\n    });\n  }\n});\nregisterResourceSourceDef({\n  parseMeta: function (refined) {\n    if (typeof refined.resources === 'function') {\n      return refined.resources;\n    }\n\n    return null;\n  },\n  fetch: function (arg, success, failure) {\n    var dateEnv = arg.context.dateEnv;\n    var func = arg.resourceSource.meta;\n    var publicArg = arg.range ? {\n      start: dateEnv.toDate(arg.range.start),\n      end: dateEnv.toDate(arg.range.end),\n      startStr: dateEnv.formatIso(arg.range.start),\n      endStr: dateEnv.formatIso(arg.range.end),\n      timeZone: dateEnv.timeZone\n    } : {}; // TODO: make more dry with EventSourceFunc\n    // TODO: accept a response?\n\n    unpromisify(func.bind(null, publicArg), function (rawResources) {\n      success({\n        rawResources: rawResources\n      }); // needs an object response\n    }, failure // send errorObj directly to failure callback\n    );\n  }\n});\nregisterResourceSourceDef({\n  parseMeta: function (refined) {\n    if (refined.url) {\n      return {\n        url: refined.url,\n        method: (refined.method || 'GET').toUpperCase(),\n        extraParams: refined.extraParams\n      };\n    }\n\n    return null;\n  },\n  fetch: function (arg, successCallback, failureCallback) {\n    var meta = arg.resourceSource.meta;\n    var requestParams = buildRequestParams(meta, arg.range, arg.context);\n    requestJson(meta.method, meta.url, requestParams, function (rawResources, xhr) {\n      successCallback({\n        rawResources: rawResources,\n        xhr: xhr\n      });\n    }, function (message, xhr) {\n      failureCallback({\n        message: message,\n        xhr: xhr\n      });\n    });\n  }\n}); // TODO: somehow consolidate with event json feed\n\nfunction buildRequestParams(meta, range, context) {\n  var dateEnv = context.dateEnv,\n      options = context.options;\n  var startParam;\n  var endParam;\n  var timeZoneParam;\n  var customRequestParams;\n  var params = {};\n\n  if (range) {\n    startParam = meta.startParam;\n\n    if (startParam == null) {\n      startParam = options.startParam;\n    }\n\n    endParam = meta.endParam;\n\n    if (endParam == null) {\n      endParam = options.endParam;\n    }\n\n    timeZoneParam = meta.timeZoneParam;\n\n    if (timeZoneParam == null) {\n      timeZoneParam = options.timeZoneParam;\n    }\n\n    params[startParam] = dateEnv.formatIso(range.start);\n    params[endParam] = dateEnv.formatIso(range.end);\n\n    if (dateEnv.timeZone !== 'local') {\n      params[timeZoneParam] = dateEnv.timeZone;\n    }\n  } // retrieve any outbound GET/POST data from the options\n\n\n  if (typeof meta.extraParams === 'function') {\n    // supplied as a function that returns a key/value object\n    customRequestParams = meta.extraParams();\n  } else {\n    // probably supplied as a straight key/value object\n    customRequestParams = meta.extraParams || {};\n  }\n\n  __assign(params, customRequestParams);\n\n  return params;\n} // TODO: not used for Spreadsheet. START USING. difficult because of col-specific rendering props\n\n\nfunction ResourceLabelRoot(props) {\n  return createElement(ViewContextType.Consumer, null, function (context) {\n    var options = context.options;\n    var hookProps = {\n      resource: new ResourceApi(context, props.resource),\n      date: props.date ? context.dateEnv.toDate(props.date) : null,\n      view: context.viewApi\n    };\n    var dataAttrs = {\n      'data-resource-id': props.resource.id,\n      'data-date': props.date ? formatDayString(props.date) : undefined\n    };\n    return createElement(RenderHook, {\n      hookProps: hookProps,\n      classNames: options.resourceLabelClassNames,\n      content: options.resourceLabelContent,\n      defaultContent: renderInnerContent,\n      didMount: options.resourceLabelDidMount,\n      willUnmount: options.resourceLabelWillUnmount\n    }, function (rootElRef, classNames, innerElRef, innerContent) {\n      return props.children(rootElRef, classNames, // TODO: pass in 'fc-resource' ?\n      dataAttrs, innerElRef, innerContent);\n    });\n  });\n}\n\nfunction renderInnerContent(props) {\n  return props.resource.title || props.resource.id;\n}\n\nvar ResourceDayHeader =\n/** @class */\nfunction (_super) {\n  __extends(ResourceDayHeader, _super);\n\n  function ResourceDayHeader() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.buildDateFormat = memoize(buildDateFormat);\n    return _this;\n  }\n\n  ResourceDayHeader.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var dateFormat = this.buildDateFormat(context.options.dayHeaderFormat, props.datesRepDistinctDays, props.dates.length);\n    return createElement(NowTimer, {\n      unit: 'day'\n    }, function (nowDate, todayRange) {\n      if (props.dates.length === 1) {\n        return _this.renderResourceRow(props.resources, props.dates[0]);\n      } else {\n        if (context.options.datesAboveResources) {\n          return _this.renderDayAndResourceRows(props.dates, dateFormat, todayRange, props.resources);\n        } else {\n          return _this.renderResourceAndDayRows(props.resources, props.dates, dateFormat, todayRange);\n        }\n      }\n    });\n  };\n\n  ResourceDayHeader.prototype.renderResourceRow = function (resources, date) {\n    var resourceCells = resources.map(function (resource) {\n      return createElement(ResourceCell, {\n        key: resource.id,\n        resource: resource,\n        colSpan: 1,\n        date: date\n      });\n    });\n    return this.buildTr(resourceCells, 'resources');\n  };\n\n  ResourceDayHeader.prototype.renderDayAndResourceRows = function (dates, dateFormat, todayRange, resources) {\n    var dateCells = [];\n    var resourceCells = [];\n\n    for (var _i = 0, dates_1 = dates; _i < dates_1.length; _i++) {\n      var date = dates_1[_i];\n      dateCells.push(this.renderDateCell(date, dateFormat, todayRange, resources.length, null, true));\n\n      for (var _a = 0, resources_1 = resources; _a < resources_1.length; _a++) {\n        var resource = resources_1[_a];\n        resourceCells.push(createElement(ResourceCell, {\n          key: resource.id + ':' + date.toISOString(),\n          resource: resource,\n          colSpan: 1,\n          date: date\n        }));\n      }\n    }\n\n    return createElement(Fragment, null, this.buildTr(dateCells, 'day'), this.buildTr(resourceCells, 'resources'));\n  };\n\n  ResourceDayHeader.prototype.renderResourceAndDayRows = function (resources, dates, dateFormat, todayRange) {\n    var resourceCells = [];\n    var dateCells = [];\n\n    for (var _i = 0, resources_2 = resources; _i < resources_2.length; _i++) {\n      var resource = resources_2[_i];\n      resourceCells.push(createElement(ResourceCell, {\n        key: resource.id,\n        resource: resource,\n        colSpan: dates.length,\n        isSticky: true\n      }));\n\n      for (var _a = 0, dates_2 = dates; _a < dates_2.length; _a++) {\n        var date = dates_2[_a];\n        dateCells.push(this.renderDateCell(date, dateFormat, todayRange, 1, resource));\n      }\n    }\n\n    return createElement(Fragment, null, this.buildTr(resourceCells, 'day'), this.buildTr(dateCells, 'resources'));\n  }; // a cell with date text. might have a resource associated with it\n\n\n  ResourceDayHeader.prototype.renderDateCell = function (date, dateFormat, todayRange, colSpan, resource, isSticky) {\n    var props = this.props;\n    var keyPostfix = resource ? \":\" + resource.id : '';\n    var extraHookProps = resource ? {\n      resource: new ResourceApi(this.context, resource)\n    } : {};\n    var extraDataAttrs = resource ? {\n      'data-resource-id': resource.id\n    } : {};\n    return props.datesRepDistinctDays ? createElement(TableDateCell, {\n      key: date.toISOString() + keyPostfix,\n      date: date,\n      dateProfile: props.dateProfile,\n      todayRange: todayRange,\n      colCnt: props.dates.length * props.resources.length,\n      dayHeaderFormat: dateFormat,\n      colSpan: colSpan,\n      isSticky: isSticky,\n      extraHookProps: extraHookProps,\n      extraDataAttrs: extraDataAttrs\n    }) : createElement(TableDowCell // we can't leverage the pure-componentness becausae the extra* props are new every time :(\n    , {\n      key: date.getUTCDay() + keyPostfix,\n      dow: date.getUTCDay(),\n      dayHeaderFormat: dateFormat,\n      colSpan: colSpan,\n      isSticky: isSticky,\n      extraHookProps: extraHookProps,\n      extraDataAttrs: extraDataAttrs\n    });\n  };\n\n  ResourceDayHeader.prototype.buildTr = function (cells, key) {\n    var renderIntro = this.props.renderIntro;\n\n    if (!cells.length) {\n      cells = [createElement(\"td\", {\n        key: 0\n      }, \"\\u00A0\")];\n    }\n\n    return createElement(\"tr\", {\n      key: key\n    }, renderIntro && renderIntro(), cells);\n  };\n\n  return ResourceDayHeader;\n}(BaseComponent);\n\nfunction buildDateFormat(dayHeaderFormat, datesRepDistinctDays, dayCnt) {\n  return dayHeaderFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt);\n}\n\nvar ResourceCell =\n/** @class */\nfunction (_super) {\n  __extends(ResourceCell, _super);\n\n  function ResourceCell() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ResourceCell.prototype.render = function () {\n    var props = this.props;\n    return createElement(ResourceLabelRoot, {\n      resource: props.resource,\n      date: props.date\n    }, function (elRef, customClassNames, dataAttrs, innerElRef, innerContent) {\n      return createElement(\"th\", __assign({\n        ref: elRef,\n        className: ['fc-col-header-cell', 'fc-resource'].concat(customClassNames).join(' '),\n        colSpan: props.colSpan\n      }, dataAttrs), createElement(\"div\", {\n        className: 'fc-scrollgrid-sync-inner'\n      }, createElement(\"span\", {\n        className: ['fc-col-header-cell-cushion', props.isSticky ? 'fc-sticky' : ''].join(' '),\n        ref: innerElRef\n      }, innerContent)));\n    });\n  };\n\n  return ResourceCell;\n}(BaseComponent);\n\nvar AbstractResourceDayTableModel =\n/** @class */\nfunction () {\n  function AbstractResourceDayTableModel(dayTableModel, resources, context) {\n    this.dayTableModel = dayTableModel;\n    this.resources = resources;\n    this.context = context;\n    this.resourceIndex = new ResourceIndex(resources);\n    this.rowCnt = dayTableModel.rowCnt;\n    this.colCnt = dayTableModel.colCnt * resources.length;\n    this.cells = this.buildCells();\n  }\n\n  AbstractResourceDayTableModel.prototype.buildCells = function () {\n    var _a = this,\n        rowCnt = _a.rowCnt,\n        dayTableModel = _a.dayTableModel,\n        resources = _a.resources;\n\n    var rows = [];\n\n    for (var row = 0; row < rowCnt; row++) {\n      var rowCells = [];\n\n      for (var dateCol = 0; dateCol < dayTableModel.colCnt; dateCol++) {\n        for (var resourceCol = 0; resourceCol < resources.length; resourceCol++) {\n          var resource = resources[resourceCol];\n          var extraHookProps = {\n            resource: new ResourceApi(this.context, resource)\n          };\n          var extraDataAttrs = {\n            'data-resource-id': resource.id\n          };\n          var extraClassNames = ['fc-resource'];\n          var date = dayTableModel.cells[row][dateCol].date;\n          rowCells[this.computeCol(dateCol, resourceCol)] = {\n            key: resource.id + ':' + date.toISOString(),\n            date: date,\n            resource: resource,\n            extraHookProps: extraHookProps,\n            extraDataAttrs: extraDataAttrs,\n            extraClassNames: extraClassNames\n          };\n        }\n      }\n\n      rows.push(rowCells);\n    }\n\n    return rows;\n  };\n\n  return AbstractResourceDayTableModel;\n}();\n/*\nresources over dates\n*/\n\n\nvar ResourceDayTableModel =\n/** @class */\nfunction (_super) {\n  __extends(ResourceDayTableModel, _super);\n\n  function ResourceDayTableModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ResourceDayTableModel.prototype.computeCol = function (dateI, resourceI) {\n    return resourceI * this.dayTableModel.colCnt + dateI;\n  };\n  /*\n  all date ranges are intact\n  */\n\n\n  ResourceDayTableModel.prototype.computeColRanges = function (dateStartI, dateEndI, resourceI) {\n    return [{\n      firstCol: this.computeCol(dateStartI, resourceI),\n      lastCol: this.computeCol(dateEndI, resourceI),\n      isStart: true,\n      isEnd: true\n    }];\n  };\n\n  return ResourceDayTableModel;\n}(AbstractResourceDayTableModel);\n/*\ndates over resources\n*/\n\n\nvar DayResourceTableModel =\n/** @class */\nfunction (_super) {\n  __extends(DayResourceTableModel, _super);\n\n  function DayResourceTableModel() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DayResourceTableModel.prototype.computeCol = function (dateI, resourceI) {\n    return dateI * this.resources.length + resourceI;\n  };\n  /*\n  every single day is broken up\n  */\n\n\n  DayResourceTableModel.prototype.computeColRanges = function (dateStartI, dateEndI, resourceI) {\n    var segs = [];\n\n    for (var i = dateStartI; i <= dateEndI; i++) {\n      var col = this.computeCol(i, resourceI);\n      segs.push({\n        firstCol: col,\n        lastCol: col,\n        isStart: i === dateStartI,\n        isEnd: i === dateEndI\n      });\n    }\n\n    return segs;\n  };\n\n  return DayResourceTableModel;\n}(AbstractResourceDayTableModel);\n\nvar ResourceIndex =\n/** @class */\nfunction () {\n  function ResourceIndex(resources) {\n    var indicesById = {};\n    var ids = [];\n\n    for (var i = 0; i < resources.length; i++) {\n      var id = resources[i].id;\n      ids.push(id);\n      indicesById[id] = i;\n    }\n\n    this.ids = ids;\n    this.indicesById = indicesById;\n    this.length = resources.length;\n  }\n\n  return ResourceIndex;\n}();\n/*\nTODO: just use ResourceHash somehow? could then use the generic ResourceSplitter\n*/\n\n\nvar VResourceSplitter =\n/** @class */\nfunction (_super) {\n  __extends(VResourceSplitter, _super);\n\n  function VResourceSplitter() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  VResourceSplitter.prototype.getKeyInfo = function (props) {\n    var resourceDayTableModel = props.resourceDayTableModel;\n    var hash = mapHash(resourceDayTableModel.resourceIndex.indicesById, function (i) {\n      return resourceDayTableModel.resources[i]; // has `ui` AND `businessHours` keys!\n    }); // :(\n\n    hash[''] = {};\n    return hash;\n  };\n\n  VResourceSplitter.prototype.getKeysForDateSpan = function (dateSpan) {\n    return [dateSpan.resourceId || ''];\n  };\n\n  VResourceSplitter.prototype.getKeysForEventDef = function (eventDef) {\n    var resourceIds = eventDef.resourceIds;\n\n    if (!resourceIds.length) {\n      return [''];\n    }\n\n    return resourceIds;\n  };\n\n  return VResourceSplitter;\n}(Splitter); // joiner\n\n\nvar NO_SEGS = []; // for memoizing\n\nvar VResourceJoiner =\n/** @class */\nfunction () {\n  function VResourceJoiner() {\n    this.joinDateSelection = memoize(this.joinSegs);\n    this.joinBusinessHours = memoize(this.joinSegs);\n    this.joinFgEvents = memoize(this.joinSegs);\n    this.joinBgEvents = memoize(this.joinSegs);\n    this.joinEventDrags = memoize(this.joinInteractions);\n    this.joinEventResizes = memoize(this.joinInteractions);\n  }\n  /*\n  propSets also has a '' key for things with no resource\n  */\n\n\n  VResourceJoiner.prototype.joinProps = function (propSets, resourceDayTable) {\n    var dateSelectionSets = [];\n    var businessHoursSets = [];\n    var fgEventSets = [];\n    var bgEventSets = [];\n    var eventDrags = [];\n    var eventResizes = [];\n    var eventSelection = '';\n    var keys = resourceDayTable.resourceIndex.ids.concat(['']); // add in the all-resource key\n\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var key = keys_1[_i];\n      var props = propSets[key];\n      dateSelectionSets.push(props.dateSelectionSegs);\n      businessHoursSets.push(key ? props.businessHourSegs : NO_SEGS); // don't include redundant all-resource businesshours\n\n      fgEventSets.push(key ? props.fgEventSegs : NO_SEGS); // don't include fg all-resource segs\n\n      bgEventSets.push(props.bgEventSegs);\n      eventDrags.push(props.eventDrag);\n      eventResizes.push(props.eventResize);\n      eventSelection = eventSelection || props.eventSelection;\n    }\n\n    return {\n      dateSelectionSegs: this.joinDateSelection.apply(this, __spreadArrays([resourceDayTable], dateSelectionSets)),\n      businessHourSegs: this.joinBusinessHours.apply(this, __spreadArrays([resourceDayTable], businessHoursSets)),\n      fgEventSegs: this.joinFgEvents.apply(this, __spreadArrays([resourceDayTable], fgEventSets)),\n      bgEventSegs: this.joinBgEvents.apply(this, __spreadArrays([resourceDayTable], bgEventSets)),\n      eventDrag: this.joinEventDrags.apply(this, __spreadArrays([resourceDayTable], eventDrags)),\n      eventResize: this.joinEventResizes.apply(this, __spreadArrays([resourceDayTable], eventResizes)),\n      eventSelection: eventSelection\n    };\n  };\n\n  VResourceJoiner.prototype.joinSegs = function (resourceDayTable) {\n    var segGroups = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      segGroups[_i - 1] = arguments[_i];\n    }\n\n    var resourceCnt = resourceDayTable.resources.length;\n    var transformedSegs = [];\n\n    for (var i = 0; i < resourceCnt; i++) {\n      for (var _a = 0, _b = segGroups[i]; _a < _b.length; _a++) {\n        var seg = _b[_a];\n        transformedSegs.push.apply(transformedSegs, this.transformSeg(seg, resourceDayTable, i));\n      }\n\n      for (var _c = 0, _d = segGroups[resourceCnt]; _c < _d.length; _c++) {\n        // one beyond. the all-resource\n        var seg = _d[_c];\n        transformedSegs.push.apply( // one beyond. the all-resource\n        transformedSegs, this.transformSeg(seg, resourceDayTable, i));\n      }\n    }\n\n    return transformedSegs;\n  };\n  /*\n  for expanding non-resource segs to all resources.\n  only for public use.\n  no memoizing.\n  */\n\n\n  VResourceJoiner.prototype.expandSegs = function (resourceDayTable, segs) {\n    var resourceCnt = resourceDayTable.resources.length;\n    var transformedSegs = [];\n\n    for (var i = 0; i < resourceCnt; i++) {\n      for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n        var seg = segs_1[_i];\n        transformedSegs.push.apply(transformedSegs, this.transformSeg(seg, resourceDayTable, i));\n      }\n    }\n\n    return transformedSegs;\n  };\n\n  VResourceJoiner.prototype.joinInteractions = function (resourceDayTable) {\n    var interactions = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      interactions[_i - 1] = arguments[_i];\n    }\n\n    var resourceCnt = resourceDayTable.resources.length;\n    var affectedInstances = {};\n    var transformedSegs = [];\n    var anyInteractions = false;\n    var isEvent = false;\n\n    for (var i = 0; i < resourceCnt; i++) {\n      var interaction = interactions[i];\n\n      if (interaction) {\n        anyInteractions = true;\n\n        for (var _a = 0, _b = interaction.segs; _a < _b.length; _a++) {\n          var seg = _b[_a];\n          transformedSegs.push.apply(transformedSegs, this.transformSeg(seg, resourceDayTable, i) // TODO: templateify Interaction::segs\n          );\n        }\n\n        __assign(affectedInstances, interaction.affectedInstances);\n\n        isEvent = isEvent || interaction.isEvent;\n      }\n\n      if (interactions[resourceCnt]) {\n        // one beyond. the all-resource\n        for (var _c = 0, _d = interactions[resourceCnt].segs; _c < _d.length; _c++) {\n          var seg = _d[_c];\n          transformedSegs.push.apply(transformedSegs, this.transformSeg(seg, resourceDayTable, i) // TODO: templateify Interaction::segs\n          );\n        }\n      }\n    }\n\n    if (anyInteractions) {\n      return {\n        affectedInstances: affectedInstances,\n        segs: transformedSegs,\n        isEvent: isEvent\n      };\n    } else {\n      return null;\n    }\n  };\n\n  return VResourceJoiner;\n}();\n/*\ndoesn't accept grouping\n*/\n\n\nfunction flattenResources(resourceStore, orderSpecs) {\n  return buildRowNodes(resourceStore, [], orderSpecs, false, {}, true).map(function (node) {\n    return node.resource;\n  });\n}\n\nfunction buildRowNodes(resourceStore, groupSpecs, orderSpecs, isVGrouping, expansions, expansionDefault) {\n  var complexNodes = buildHierarchy(resourceStore, isVGrouping ? -1 : 1, groupSpecs, orderSpecs);\n  var flatNodes = [];\n  flattenNodes(complexNodes, flatNodes, isVGrouping, [], 0, expansions, expansionDefault);\n  return flatNodes;\n}\n\nfunction flattenNodes(complexNodes, res, isVGrouping, rowSpans, depth, expansions, expansionDefault) {\n  for (var i = 0; i < complexNodes.length; i++) {\n    var complexNode = complexNodes[i];\n    var group = complexNode.group;\n\n    if (group) {\n      if (isVGrouping) {\n        var firstRowIndex = res.length;\n        var rowSpanIndex = rowSpans.length;\n        flattenNodes(complexNode.children, res, isVGrouping, rowSpans.concat(0), depth, expansions, expansionDefault);\n\n        if (firstRowIndex < res.length) {\n          var firstRow = res[firstRowIndex];\n          var firstRowSpans = firstRow.rowSpans = firstRow.rowSpans.slice();\n          firstRowSpans[rowSpanIndex] = res.length - firstRowIndex;\n        }\n      } else {\n        var id = group.spec.field + ':' + group.value;\n        var isExpanded = expansions[id] != null ? expansions[id] : expansionDefault;\n        res.push({\n          id: id,\n          group: group,\n          isExpanded: isExpanded\n        });\n\n        if (isExpanded) {\n          flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n        }\n      }\n    } else if (complexNode.resource) {\n      var id = complexNode.resource.id;\n      var isExpanded = expansions[id] != null ? expansions[id] : expansionDefault;\n      res.push({\n        id: id,\n        rowSpans: rowSpans,\n        depth: depth,\n        isExpanded: isExpanded,\n        hasChildren: Boolean(complexNode.children.length),\n        resource: complexNode.resource,\n        resourceFields: complexNode.resourceFields\n      });\n\n      if (isExpanded) {\n        flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n      }\n    }\n  }\n}\n\nfunction buildHierarchy(resourceStore, maxDepth, groupSpecs, orderSpecs) {\n  var resourceNodes = buildResourceNodes(resourceStore, orderSpecs);\n  var builtNodes = [];\n\n  for (var resourceId in resourceNodes) {\n    var resourceNode = resourceNodes[resourceId];\n\n    if (!resourceNode.resource.parentId) {\n      insertResourceNode(resourceNode, builtNodes, groupSpecs, 0, maxDepth, orderSpecs);\n    }\n  }\n\n  return builtNodes;\n}\n\nfunction buildResourceNodes(resourceStore, orderSpecs) {\n  var nodeHash = {};\n\n  for (var resourceId in resourceStore) {\n    var resource = resourceStore[resourceId];\n    nodeHash[resourceId] = {\n      resource: resource,\n      resourceFields: buildResourceFields(resource),\n      children: []\n    };\n  }\n\n  for (var resourceId in resourceStore) {\n    var resource = resourceStore[resourceId];\n\n    if (resource.parentId) {\n      var parentNode = nodeHash[resource.parentId];\n\n      if (parentNode) {\n        insertResourceNodeInSiblings(nodeHash[resourceId], parentNode.children, orderSpecs);\n      }\n    }\n  }\n\n  return nodeHash;\n}\n\nfunction insertResourceNode(resourceNode, nodes, groupSpecs, depth, maxDepth, orderSpecs) {\n  if (groupSpecs.length && (maxDepth === -1 || depth <= maxDepth)) {\n    var groupNode = ensureGroupNodes(resourceNode, nodes, groupSpecs[0]);\n    insertResourceNode(resourceNode, groupNode.children, groupSpecs.slice(1), depth + 1, maxDepth, orderSpecs);\n  } else {\n    insertResourceNodeInSiblings(resourceNode, nodes, orderSpecs);\n  }\n}\n\nfunction ensureGroupNodes(resourceNode, nodes, groupSpec) {\n  var groupValue = resourceNode.resourceFields[groupSpec.field];\n  var groupNode;\n  var newGroupIndex; // find an existing group that matches, or determine the position for a new group\n\n  if (groupSpec.order) {\n    for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex++) {\n      var node = nodes[newGroupIndex];\n\n      if (node.group) {\n        var cmp = flexibleCompare(groupValue, node.group.value) * groupSpec.order;\n\n        if (cmp === 0) {\n          groupNode = node;\n          break;\n        } else if (cmp < 0) {\n          break;\n        }\n      }\n    }\n  } else {\n    // the groups are unordered\n    for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex++) {\n      var node = nodes[newGroupIndex];\n\n      if (node.group && groupValue === node.group.value) {\n        groupNode = node;\n        break;\n      }\n    }\n  }\n\n  if (!groupNode) {\n    groupNode = {\n      group: {\n        value: groupValue,\n        spec: groupSpec\n      },\n      children: []\n    };\n    nodes.splice(newGroupIndex, 0, groupNode);\n  }\n\n  return groupNode;\n}\n\nfunction insertResourceNodeInSiblings(resourceNode, siblings, orderSpecs) {\n  var i;\n\n  for (i = 0; i < siblings.length; i++) {\n    var cmp = compareByFieldSpecs(siblings[i].resourceFields, resourceNode.resourceFields, orderSpecs); // TODO: pass in ResourceApi?\n\n    if (cmp > 0) {\n      // went 1 past. insert at i\n      break;\n    }\n  }\n\n  siblings.splice(i, 0, resourceNode);\n}\n\nfunction buildResourceFields(resource) {\n  var obj = __assign(__assign(__assign({}, resource.extendedProps), resource.ui), resource);\n\n  delete obj.ui;\n  delete obj.extendedProps;\n  return obj;\n}\n\nfunction isGroupsEqual(group0, group1) {\n  return group0.spec === group1.spec && group0.value === group1.value;\n}\n\nvar main = createPlugin({\n  deps: [premiumCommonPlugin],\n  reducers: [reduceResources],\n  eventRefiners: EVENT_REFINERS,\n  eventDefMemberAdders: [generateEventDefResourceMembers],\n  isDraggableTransformers: [transformIsDraggable],\n  eventDragMutationMassagers: [massageEventDragMutation],\n  eventDefMutationAppliers: [applyEventDefMutation],\n  dateSelectionTransformers: [transformDateSelectionJoin],\n  datePointTransforms: [transformDatePoint],\n  dateSpanTransforms: [transformDateSpan],\n  viewPropsTransformers: [ResourceDataAdder, ResourceEventConfigAdder],\n  isPropsValid: isPropsValidWithResources,\n  externalDefTransforms: [transformExternalDef],\n  eventResizeJoinTransforms: [transformEventResizeJoin],\n  eventDropTransformers: [transformEventDrop],\n  optionChangeHandlers: optionChangeHandlers,\n  optionRefiners: OPTION_REFINERS,\n  listenerRefiners: LISTENER_REFINERS,\n  propSetHandlers: {\n    resourceStore: handleResourceStore\n  }\n});\nexport default main;\nexport { AbstractResourceDayTableModel, DEFAULT_RESOURCE_ORDER, DayResourceTableModel, ResourceApi, ResourceDayHeader, ResourceDayTableModel, ResourceLabelRoot, ResourceSplitter, VResourceJoiner, VResourceSplitter, buildResourceFields, buildRowNodes, flattenResources, getPublicId, isGroupsEqual };","map":{"version":3,"sources":["src/EventDragging.ts","src/View.ts","src/structs/resource-source-def.ts","src/structs/resource-source-parse.ts","src/reducers/resourceSource.ts","src/structs/resource.ts","src/reducers/resourceStore.ts","src/reducers/resourceEntityExpansions.ts","src/reducers/resources.ts","src/structs/event-parse.ts","src/DateSelecting.ts","src/api/ResourceApi.ts","src/api/CalendarApi-extend.ts","src/common/ResourceSplitter.ts","src/validation.ts","src/ExternalElementDragging.ts","src/EventResizing.ts","src/api/EventApi-extend.ts","src/option-change-handlers.ts","src/resources-crud.ts","src/options.ts","src/resource-sources/resource-array.ts","src/resource-sources/resource-func.ts","src/resource-sources/resource-json-feed.ts","src/common/ResourceLabelRoot.tsx","src/common/ResourceDayHeader.tsx","src/common/resource-day-table-model.ts","src/common/resource-hierarchy.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import { EventMutation, Hit, EventDef, CalendarContext } from '@fullcalendar/common'\n\n\nexport function massageEventDragMutation(eventMutation: EventMutation, hit0: Hit, hit1: Hit) {\n  let resource0 = hit0.dateSpan.resourceId\n  let resource1 = hit1.dateSpan.resourceId\n\n  if (\n    resource0 && resource1 &&\n    resource0 !== resource1\n  ) {\n    eventMutation.resourceMutation = {\n      matchResourceId: resource0,\n      setResourceId: resource1\n    }\n  }\n}\n\n\n/*\nTODO: all this would be much easier if we were using a hash!\n*/\nexport function applyEventDefMutation(eventDef: EventDef, mutation: EventMutation, context: CalendarContext) {\n  let resourceMutation = mutation.resourceMutation\n\n  if (resourceMutation && computeResourceEditable(eventDef, context)) {\n    let index = eventDef.resourceIds.indexOf(resourceMutation.matchResourceId)\n\n    if (index !== -1) {\n      let resourceIds = eventDef.resourceIds.slice() // copy\n\n      resourceIds.splice(index, 1) // remove\n\n      if (resourceIds.indexOf(resourceMutation.setResourceId) === -1) { // not already in there\n        resourceIds.push(resourceMutation.setResourceId) // add\n      }\n\n      eventDef.resourceIds = resourceIds\n    }\n  }\n}\n\n\n/*\nHACK\nTODO: use EventUi system instead of this\n*/\nexport function computeResourceEditable(eventDef: EventDef, context: CalendarContext): boolean {\n  let { resourceEditable } = eventDef\n\n  if (resourceEditable == null) {\n    let source = eventDef.sourceId && context.getCurrentData().eventSources[eventDef.sourceId]\n\n    if (source) {\n      resourceEditable = source.extendedProps.resourceEditable // used the Source::extendedProps hack\n    }\n\n    if (resourceEditable == null) {\n      resourceEditable = context.options.eventResourceEditable\n\n      if (resourceEditable == null) {\n        resourceEditable = context.options.editable // TODO: use defaults system instead\n      }\n    }\n  }\n\n  return resourceEditable\n}\n\n\nexport function transformEventDrop(mutation: EventMutation, context: CalendarContext) {\n  let { resourceMutation } = mutation\n\n  if (resourceMutation) {\n    let { calendarApi } = context\n\n    return {\n      oldResource: calendarApi.getResourceById(resourceMutation.matchResourceId),\n      newResource: calendarApi.getResourceById(resourceMutation.setResourceId)\n    }\n\n  } else {\n    return {\n      oldResource: null,\n      newResource: null\n    }\n  }\n}\n","import {\n  rangesIntersect, EventInstanceHash, filterHash, ViewProps, ViewPropsTransformer, CalendarContentProps, memoize, mapHash,\n  EventUi, isPropsEqual, EventUiHash, EventDefHash, EventDef, combineEventUis, EventStore, DateRange, CalendarContext\n} from '@fullcalendar/common'\nimport { ResourceHash } from './structs/resource'\nimport { ResourceEntityExpansions } from './reducers/resourceEntityExpansions'\nimport { __assign } from 'tslib'\nimport { computeResourceEditable } from './EventDragging'\n\n\n// for when resource views need resource data\n\nexport interface ResourceViewProps extends ViewProps {\n  resourceStore: ResourceHash\n  resourceEntityExpansions: ResourceEntityExpansions\n}\n\nexport class ResourceDataAdder implements ViewPropsTransformer {\n\n  filterResources = memoize(filterResources)\n\n  transform(viewProps: ViewProps, calendarProps: CalendarContentProps) {\n    if (calendarProps.viewSpec.optionDefaults.needsResourceData) {\n      return {\n        resourceStore: this.filterResources(\n          calendarProps.resourceStore,\n          calendarProps.options.filterResourcesWithEvents,\n          calendarProps.eventStore,\n          calendarProps.dateProfile.activeRange\n        ),\n        resourceEntityExpansions: calendarProps.resourceEntityExpansions\n      }\n    }\n  }\n\n}\n\nfunction filterResources(resourceStore: ResourceHash, doFilterResourcesWithEvents: boolean, eventStore: EventStore, activeRange: DateRange): ResourceHash {\n  if (doFilterResourcesWithEvents) {\n    let instancesInRange = filterEventInstancesInRange(eventStore.instances, activeRange)\n    let hasEvents = computeHasEvents(instancesInRange, eventStore.defs)\n\n    __assign(hasEvents, computeAncestorHasEvents(hasEvents, resourceStore))\n\n    return filterHash(resourceStore, function(resource, resourceId) {\n      return hasEvents[resourceId]\n    })\n\n  } else {\n    return resourceStore\n  }\n}\n\nfunction filterEventInstancesInRange(eventInstances: EventInstanceHash, activeRange: DateRange) {\n  return filterHash(eventInstances, function(eventInstance) {\n    return rangesIntersect(eventInstance.range, activeRange)\n  })\n}\n\nfunction computeHasEvents(eventInstances: EventInstanceHash, eventDefs: EventDefHash) {\n  let hasEvents = {}\n\n  for (let instanceId in eventInstances) {\n    let instance = eventInstances[instanceId]\n\n    for (let resourceId of eventDefs[instance.defId].resourceIds) {\n      hasEvents[resourceId] = true\n    }\n  }\n\n  return hasEvents\n}\n\n/*\nmark resources as having events if any of their ancestors have them\nNOTE: resourceStore might not have all the resources that hasEvents{} has keyed\n*/\nfunction computeAncestorHasEvents(hasEvents: { [resourceId: string]: boolean }, resourceStore: ResourceHash) {\n  let res = {}\n\n  for (let resourceId in hasEvents) {\n    let resource\n\n    while ((resource = resourceStore[resourceId])) {\n      resourceId = resource.parentId // now functioning as the parentId\n\n      if (resourceId) {\n        res[resourceId] = true\n      } else {\n        break\n      }\n    }\n  }\n\n  return res\n}\n\n\n// for when non-resource view should be given EventUi info (for event coloring/constraints based off of resource data)\n\nexport class ResourceEventConfigAdder implements ViewPropsTransformer {\n\n  buildResourceEventUis = memoize(buildResourceEventUis, isPropsEqual)\n  injectResourceEventUis = memoize(injectResourceEventUis)\n\n  transform(viewProps: ViewProps, calendarProps: CalendarContentProps) {\n    if (!calendarProps.viewSpec.optionDefaults.needsResourceData) {\n      return {\n        eventUiBases: this.injectResourceEventUis(\n          viewProps.eventUiBases,\n          viewProps.eventStore.defs,\n          this.buildResourceEventUis(calendarProps.resourceStore)\n        )\n      }\n    }\n  }\n\n}\n\nfunction buildResourceEventUis(resourceStore: ResourceHash) {\n  return mapHash(resourceStore, function(resource) {\n    return resource.ui\n  })\n}\n\nfunction injectResourceEventUis(eventUiBases: EventUiHash, eventDefs: EventDefHash, resourceEventUis: EventUiHash) {\n  return mapHash(eventUiBases, function(eventUi, defId) {\n    if (defId) { // not the '' key\n      return injectResourceEventUi(eventUi, eventDefs[defId], resourceEventUis)\n    } else {\n      return eventUi\n    }\n  })\n}\n\nfunction injectResourceEventUi(origEventUi: EventUi, eventDef: EventDef, resourceEventUis: EventUiHash) {\n  let parts = []\n\n  // first resource takes precedence, which fights with the ordering of combineEventUis, thus the unshifts\n  for (let resourceId of eventDef.resourceIds) {\n    if (resourceEventUis[resourceId]) {\n      parts.unshift(resourceEventUis[resourceId])\n    }\n  }\n\n  parts.unshift(origEventUi)\n\n  return combineEventUis(parts)\n}\n\n\n// for making sure events that have editable resources are always draggable in resource views\n\nexport function transformIsDraggable(val: boolean, eventDef: EventDef, eventUi: EventUi, context: CalendarContext) {\n\n  if (!val) {\n    let state = context.getCurrentData()\n    let viewSpec = state.viewSpecs[state.currentViewType]\n\n    if (viewSpec.optionDefaults.needsResourceData) {\n      if (computeResourceEditable(eventDef, context)) {\n        return true\n      }\n    }\n  }\n\n  return val\n}\n","import { ResourceFetcher } from './resource-source'\nimport { ResourceSourceRefined } from './resource-source-parse'\n\n\nexport interface ResourceSourceDef<ResourceSourceMeta> {\n  ignoreRange?: boolean\n  parseMeta: (refined: ResourceSourceRefined) => ResourceSourceMeta | null\n  fetch: ResourceFetcher<ResourceSourceMeta>\n}\n\nlet defs: ResourceSourceDef<any>[] = [] // TODO: use plugin system\n\nexport function registerResourceSourceDef<ResourceSourceMeta>(def: ResourceSourceDef<ResourceSourceMeta>) {\n  defs.push(def)\n}\n\nexport function getResourceSourceDef(id: number): ResourceSourceDef<any> {\n  return defs[id]\n}\n\nexport function getResourceSourceDefs(): ResourceSourceDef<any>[] {\n  return defs\n}\n","import { guid, identity, Identity, RefinedOptionsFromRefiners, refineProps, RawOptionsFromRefiners, Dictionary } from '@fullcalendar/common'\nimport { ResourceInput } from '../structs/resource'\nimport { ResourceFunc } from '../resource-sources/resource-func'\nimport { ResourceSource } from './resource-source'\nimport { getResourceSourceDefs } from './resource-source-def'\n\n\n// TODO: make this a plugin-able parser\n// TODO: success/failure\nexport const RESOURCE_SOURCE_REFINERS = {\n  id: String,\n\n  // for array. TODO: move to resource-array\n  resources: identity as Identity<ResourceInput[] | ResourceFunc>,\n\n  // for json feed. TODO: move to resource-json-feed\n  url: String,\n  method: String,\n  startParam: String,\n  endParam: String,\n  timeZoneParam: String,\n  extraParams: identity as Identity<Dictionary | (() => Dictionary)>\n}\n\nexport type ResourceSourceInputObject = RawOptionsFromRefiners<typeof RESOURCE_SOURCE_REFINERS>\nexport type ResourceSourceRefined = RefinedOptionsFromRefiners<typeof RESOURCE_SOURCE_REFINERS>\n\nexport type ResourceSourceInput =\n  ResourceSourceInputObject |\n  ResourceInput[] |\n  ResourceFunc |\n  string // url\n\n\nexport function parseResourceSource(input: ResourceSourceInput): ResourceSource<any> {\n  let inputObj: ResourceSourceInputObject\n\n  if (typeof input === 'string') {\n    inputObj = { url: input }\n  } else if (typeof input === 'function' || Array.isArray(input)) {\n    inputObj = { resources: input }\n  } else if (typeof input === 'object' && input) { // non-null object\n    inputObj = input\n  }\n\n  if (inputObj) {\n    let { refined, extra } = refineProps(inputObj, RESOURCE_SOURCE_REFINERS)\n\n    warnUnknownProps(extra)\n\n    let metaRes = buildResourceSourceMeta(refined)\n\n    if (metaRes) {\n      return {\n        _raw: input,\n        sourceId: guid(),\n        sourceDefId: metaRes.sourceDefId,\n        meta: metaRes.meta,\n        publicId: refined.id || '',\n        isFetching: false,\n        latestFetchId: '',\n        fetchRange: null\n      }\n    }\n  }\n\n  return null\n}\n\n\nfunction buildResourceSourceMeta(refined: ResourceSourceRefined) {\n  let defs = getResourceSourceDefs()\n\n  for (let i = defs.length - 1; i >= 0; i--) { // later-added plugins take precedence\n    let def = defs[i]\n    let meta = def.parseMeta(refined)\n\n    if (meta) {\n      return { meta, sourceDefId: i }\n    }\n  }\n}\n\n\nfunction warnUnknownProps(props) {\n  for (let propName in props) {\n    console.warn(`Unknown resource prop '${propName}'`)\n  }\n}\n","import { DateProfile, rangesEqual, DateRange, guid, CalendarContext } from '@fullcalendar/common'\nimport { ResourceSource } from '../structs/resource-source'\nimport { parseResourceSource } from '../structs/resource-source-parse'\nimport { getResourceSourceDef } from '../structs/resource-source-def'\nimport { ResourceAction } from './resource-action'\n\nexport function reduceResourceSource(\n  source: ResourceSource<any> | null,\n  action: ResourceAction | null,\n  context: CalendarContext & { dateProfile: DateProfile }\n): ResourceSource<any> {\n  let { options, dateProfile } = context\n\n  if (!source || !action) {\n    return createSource(\n      options.initialResources || options.resources,\n      dateProfile.activeRange,\n      options.refetchResourcesOnNavigate,\n      context\n    )\n  }\n\n  switch (action.type) {\n    case 'RESET_RESOURCE_SOURCE':\n      return createSource(action.resourceSourceInput, dateProfile.activeRange, options.refetchResourcesOnNavigate, context)\n\n    case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n    case 'NEXT':\n    case 'CHANGE_DATE':\n    case 'CHANGE_VIEW_TYPE':\n      return handleRangeChange(source, dateProfile.activeRange, options.refetchResourcesOnNavigate, context)\n\n    case 'RECEIVE_RESOURCES':\n    case 'RECEIVE_RESOURCE_ERROR':\n      return receiveResponse(source, action.fetchId, action.fetchRange)\n\n    case 'REFETCH_RESOURCES':\n      return fetchSource(source, dateProfile.activeRange, context)\n\n    default:\n      return source\n  }\n}\n\n\nfunction createSource(input, activeRange: DateRange, refetchResourcesOnNavigate, context: CalendarContext) {\n  if (input) {\n    let source = parseResourceSource(input)\n    source = fetchSource(source, refetchResourcesOnNavigate ? activeRange : null, context)\n    return source\n  }\n\n  return null\n}\n\n\nfunction handleRangeChange(source: ResourceSource<any>, activeRange: DateRange, refetchResourcesOnNavigate, context: CalendarContext): ResourceSource<any> {\n  if (\n    refetchResourcesOnNavigate &&\n    !doesSourceIgnoreRange(source) &&\n    (!source.fetchRange || !rangesEqual(source.fetchRange, activeRange))\n  ) {\n    return fetchSource(source, activeRange, context)\n  } else {\n    return source\n  }\n}\n\n\nfunction doesSourceIgnoreRange(source: ResourceSource<any>) {\n  return Boolean(getResourceSourceDef(source.sourceDefId).ignoreRange)\n}\n\n\nfunction fetchSource(source: ResourceSource<any>, fetchRange: DateRange | null, context: CalendarContext): ResourceSource<any> {\n  let sourceDef = getResourceSourceDef(source.sourceDefId)\n  let fetchId = guid()\n\n  sourceDef.fetch(\n    {\n      resourceSource: source,\n      range: fetchRange,\n      context\n    },\n    function(res) {\n      context.dispatch({\n        type: 'RECEIVE_RESOURCES',\n        fetchId,\n        fetchRange,\n        rawResources: res.rawResources\n      })\n    },\n    function(error) {\n      context.dispatch({\n        type: 'RECEIVE_RESOURCE_ERROR',\n        fetchId,\n        fetchRange,\n        error\n      })\n    }\n  )\n\n  return {\n    ...source,\n    isFetching: true,\n    latestFetchId: fetchId\n  }\n}\n\n\nfunction receiveResponse(source: ResourceSource<any>, fetchId: string, fetchRange: DateRange) {\n\n  if (fetchId === source.latestFetchId) {\n    return {\n      ...source,\n      isFetching: false,\n      fetchRange\n    }\n  }\n\n  return source\n}\n","import {\n  ConstraintInput, AllowFunc, EventStore, parseBusinessHours, CalendarContext, EventUi, BusinessHoursInput,\n  guid, identity, Identity, RawOptionsFromRefiners, parseClassNames, refineProps, createEventUi, Dictionary\n} from '@fullcalendar/common'\n\n\nconst PRIVATE_ID_PREFIX = '_fc:'\n\nconst RESOURCE_REFINERS = {\n  id: String,\n  parentId: String,\n  children: identity as Identity<ResourceInput[]>,\n  title: String,\n  businessHours: identity as Identity<BusinessHoursInput>,\n  extendedProps: identity as Identity<Dictionary>,\n\n  // event-ui\n  eventEditable: Boolean,\n  eventStartEditable: Boolean,\n  eventDurationEditable: Boolean,\n  eventConstraint: identity as Identity<ConstraintInput>,\n  eventOverlap: Boolean, // can NOT be a func, different from OptionsInput\n  eventAllow: identity as Identity<AllowFunc>,\n  eventClassNames: parseClassNames,\n  eventBackgroundColor: String,\n  eventBorderColor: String,\n  eventTextColor: String,\n  eventColor: String\n}\n\ntype BuiltInResourceRefiners = typeof RESOURCE_REFINERS\n\nexport interface ResourceRefiners extends BuiltInResourceRefiners {\n  // for preventing circular definition. also, good for making ambient in the future\n}\n\nexport type ResourceInput =\n  RawOptionsFromRefiners<Required<ResourceRefiners>> & // Required hack\n  { [extendedProps: string]: any }\n\nexport interface Resource {\n  id: string\n  parentId: string\n  title: string\n  businessHours: EventStore | null // if null, will fall thru to non-resource business hours\n  ui: EventUi\n  extendedProps: { [extendedProp: string]: any }\n}\n\nexport type ResourceHash = { [resourceId: string]: Resource }\n\n\n/*\nneeds a full store so that it can populate children too\n*/\nexport function parseResource(raw: ResourceInput, parentId: string = '', store: ResourceHash, context: CalendarContext): Resource {\n  let { refined, extra } = refineProps(raw, RESOURCE_REFINERS)\n\n  let resource: Resource = {\n    id: refined.id || (PRIVATE_ID_PREFIX + guid()),\n    parentId: refined.parentId || parentId,\n    title: refined.title || '',\n    businessHours: refined.businessHours ? parseBusinessHours(refined.businessHours, context) : null,\n    ui: createEventUi({\n      editable: refined.eventEditable,\n      startEditable: refined.eventStartEditable,\n      durationEditable: refined.eventDurationEditable,\n      constraint: refined.eventConstraint,\n      overlap: refined.eventOverlap,\n      allow: refined.eventAllow,\n      classNames: refined.eventClassNames,\n      backgroundColor: refined.eventBackgroundColor,\n      borderColor: refined.eventBorderColor,\n      textColor: refined.eventTextColor,\n      color: refined.eventColor\n    }, context),\n    extendedProps: {\n      ...extra,\n      ...refined.extendedProps\n    }\n  }\n\n  // help out ResourceApi from having user modify props\n  Object.freeze(resource.ui.classNames)\n  Object.freeze(resource.extendedProps)\n\n  if (store[resource.id]) {\n    // console.warn('duplicate resource ID')\n\n  } else {\n    store[resource.id] = resource\n\n    if (refined.children) {\n      for (let childInput of refined.children) {\n        parseResource(childInput, resource.id, store, context)\n      }\n    }\n  }\n\n  return resource\n}\n\n\n/*\nTODO: use this in more places\n*/\nexport function getPublicId(id: string): string {\n  if (id.indexOf(PRIVATE_ID_PREFIX) === 0) {\n    return ''\n  }\n\n  return id\n}\n","import { CalendarContext } from '@fullcalendar/common'\nimport { ResourceAction } from './resource-action'\nimport { ResourceHash, ResourceInput, parseResource } from '../structs/resource'\nimport { ResourceSource } from '../structs/resource-source'\n\nexport function reduceResourceStore(\n  store: ResourceHash | null,\n  action: ResourceAction | null,\n  source: ResourceSource<any>,\n  context: CalendarContext\n): ResourceHash {\n\n  if (!store || !action) {\n    return {}\n  }\n\n  switch (action.type) {\n    case 'RECEIVE_RESOURCES':\n      return receiveRawResources(store, action.rawResources, action.fetchId, source, context)\n\n    case 'ADD_RESOURCE':\n      return addResource(store, action.resourceHash)\n\n    case 'REMOVE_RESOURCE':\n      return removeResource(store, action.resourceId)\n\n    case 'SET_RESOURCE_PROP':\n      return setResourceProp(store, action.resourceId, action.propName, action.propValue)\n\n    case 'SET_RESOURCE_EXTENDED_PROP':\n      return setResourceExtendedProp(store, action.resourceId, action.propName, action.propValue)\n\n    default:\n      return store\n  }\n}\n\nfunction receiveRawResources(existingStore: ResourceHash, inputs: ResourceInput[], fetchId: string, source: ResourceSource<any>, context: CalendarContext): ResourceHash {\n  if (source.latestFetchId === fetchId) {\n    let nextStore: ResourceHash = {}\n\n    for (let input of inputs) {\n      parseResource(input, '', nextStore, context)\n    }\n\n    return nextStore\n  } else {\n    return existingStore\n  }\n}\n\nfunction addResource(existingStore: ResourceHash, additions: ResourceHash) {\n  // TODO: warn about duplicate IDs\n\n  return { ...existingStore, ...additions }\n}\n\nfunction removeResource(existingStore: ResourceHash, resourceId: string) {\n  let newStore = { ...existingStore } as ResourceHash\n\n  delete newStore[resourceId]\n\n  // promote children\n  for (let childResourceId in newStore) { // a child, *maybe* but probably not\n\n    if (newStore[childResourceId].parentId === resourceId) {\n\n      newStore[childResourceId] = {\n        ...newStore[childResourceId],\n        parentId: ''\n      }\n    }\n  }\n\n  return newStore\n}\n\nfunction setResourceProp(existingStore: ResourceHash, resourceId: string, name: string, value: any): ResourceHash {\n  let existingResource = existingStore[resourceId]\n\n  // TODO: sanitization\n\n  if (existingResource) {\n    return {\n      ...existingStore,\n      [resourceId]: {\n        ...existingResource,\n        [name]: value\n      }\n    }\n  } else {\n    return existingStore\n  }\n}\n\nfunction setResourceExtendedProp(existingStore: ResourceHash, resourceId: string, name: string, value: any): ResourceHash {\n  let existingResource = existingStore[resourceId]\n\n  if (existingResource) {\n    return {\n      ...existingStore,\n      [resourceId]: {\n        ...existingResource,\n        extendedProps: {\n          ...existingResource.extendedProps,\n          [name]: value\n        }\n      }\n    }\n  } else {\n    return existingStore\n  }\n}\n","import { ResourceAction } from './resource-action'\n\nexport type ResourceEntityExpansions = { [id: string]: boolean }\n\nexport function reduceResourceEntityExpansions(\n  expansions: ResourceEntityExpansions | null,\n  action: ResourceAction | null\n): ResourceEntityExpansions {\n\n  if (!expansions || !action) {\n    return {}\n  }\n\n  switch (action.type) {\n    case 'SET_RESOURCE_ENTITY_EXPANDED':\n      return {\n        ...expansions,\n        [action.id]: action.isExpanded\n      }\n\n    default:\n      return expansions\n  }\n}\n","import { CalendarContext, DateProfile } from '@fullcalendar/common'\nimport { ResourceSource } from '../structs/resource-source'\nimport { ResourceHash } from '../structs/resource'\nimport { reduceResourceSource } from './resourceSource'\nimport { reduceResourceStore } from './resourceStore'\nimport { reduceResourceEntityExpansions, ResourceEntityExpansions } from './resourceEntityExpansions'\nimport { ResourceAction } from './resource-action'\n\nexport interface ResourceState {\n  resourceSource: ResourceSource<any>\n  resourceStore: ResourceHash\n  resourceEntityExpansions: ResourceEntityExpansions\n}\n\nexport function reduceResources(\n  state: ResourceState | null,\n  action: ResourceAction | null,\n  context: CalendarContext & { dateProfile: DateProfile, loadingLevel: number }\n) {\n  let resourceSource = reduceResourceSource(state && state.resourceSource, action, context)\n  let resourceStore = reduceResourceStore(state && state.resourceStore, action, resourceSource, context)\n  let resourceEntityExpansions = reduceResourceEntityExpansions(state && state.resourceEntityExpansions, action)\n\n  return {\n    resourceSource,\n    resourceStore,\n    resourceEntityExpansions,\n    loadingLevel: context.loadingLevel + ((resourceSource && resourceSource.isFetching) ? 1 : 0)\n  }\n}\n","import { EventRefined, identity, Identity } from '@fullcalendar/common'\n\n\nexport const EVENT_REFINERS = {\n  resourceId: String,\n  resourceIds: identity as Identity<string[]>,\n  resourceEditable: Boolean\n}\n\n\nexport function generateEventDefResourceMembers(refined: EventRefined) {\n  return {\n    resourceIds: ensureStringArray(refined.resourceIds)\n      .concat(refined.resourceId ? [ refined.resourceId ] : []),\n    resourceEditable: refined.resourceEditable\n  }\n}\n\n\nfunction ensureStringArray(items: any[]) {\n  return (items || []).map(function(item) {\n    return String(item)\n  })\n}\n","import { Hit } from '@fullcalendar/common'\n\nexport function transformDateSelectionJoin(hit0: Hit, hit1: Hit) {\n  let resourceId0 = hit0.dateSpan.resourceId\n  let resourceId1 = hit1.dateSpan.resourceId\n\n  if (resourceId0 && resourceId1) {\n\n    if (\n      (hit0.component as any).allowAcrossResources === false &&\n      resourceId0 !== resourceId1\n    ) {\n      return false\n    } else {\n      return { resourceId: resourceId0 }\n    }\n  }\n}\n","import { CalendarContext, EventApi, Dictionary } from '@fullcalendar/common'\nimport { Resource, getPublicId, ResourceHash } from '../structs/resource'\nimport { __assign } from 'tslib'\n\n\nexport class ResourceApi {\n\n  constructor(\n    private _context: CalendarContext,\n    public _resource: Resource\n  ) {\n  }\n\n  setProp(name: string, value: any) {\n    let oldResource = this._resource\n\n    this._context.dispatch({\n      type: 'SET_RESOURCE_PROP',\n      resourceId: oldResource.id,\n      propName: name,\n      propValue: value\n    })\n\n    this.sync(oldResource)\n  }\n\n  setExtendedProp(name: string, value: any) {\n    let oldResource = this._resource\n\n    this._context.dispatch({\n      type: 'SET_RESOURCE_EXTENDED_PROP',\n      resourceId: oldResource.id,\n      propName: name,\n      propValue: value\n    })\n\n    this.sync(oldResource)\n  }\n\n  private sync(oldResource: Resource) {\n    let context = this._context\n    let resourceId = oldResource.id\n\n    // TODO: what if dispatch didn't complete synchronously?\n    this._resource = context.getCurrentData().resourceStore[resourceId]\n\n    context.emitter.trigger('resourceChange', {\n      oldResource: new ResourceApi(context, oldResource),\n      resource: this,\n      revert() {\n        context.dispatch({\n          type: 'ADD_RESOURCE', // function as a merge. TODO: rename\n          resourceHash: {\n            [resourceId]: oldResource\n          }\n        })\n      }\n    })\n  }\n\n  remove() {\n    let context = this._context\n    let internalResource = this._resource\n    let resourceId = internalResource.id\n\n    context.dispatch({\n      type: 'REMOVE_RESOURCE',\n      resourceId\n    })\n\n    context.emitter.trigger('resourceRemove', {\n      resource: this,\n      revert() {\n        context.dispatch({\n          type: 'ADD_RESOURCE', // function as a merge. TODO: rename\n          resourceHash: {\n            [resourceId]: internalResource\n          }\n        })\n      }\n    })\n  }\n\n  getParent(): ResourceApi | null {\n    let context = this._context\n    let parentId = this._resource.parentId\n\n    if (parentId) {\n      return new ResourceApi(\n        context,\n        context.getCurrentData().resourceSource[parentId]\n      )\n    } else {\n      return null\n    }\n  }\n\n  getChildren(): ResourceApi[] {\n    let thisResourceId = this._resource.id\n    let context = this._context\n    let { resourceStore } = context.getCurrentData()\n    let childApis: ResourceApi[] = []\n\n    for (let resourceId in resourceStore) {\n      if (resourceStore[resourceId].parentId === thisResourceId) {\n        childApis.push(\n          new ResourceApi(context, resourceStore[resourceId])\n        )\n      }\n    }\n\n    return childApis\n  }\n\n  /*\n  this is really inefficient!\n  TODO: make EventApi::resourceIds a hash or keep an index in the Calendar's state\n  */\n  getEvents(): EventApi[] {\n    let thisResourceId = this._resource.id\n    let context = this._context\n    let { defs, instances } = context.getCurrentData().eventStore\n    let eventApis: EventApi[] = []\n\n    for (let instanceId in instances) {\n      let instance = instances[instanceId]\n      let def = defs[instance.defId]\n\n      if (def.resourceIds.indexOf(thisResourceId) !== -1) { // inefficient!!!\n        eventApis.push(new EventApi(context, def, instance))\n      }\n    }\n\n    return eventApis\n  }\n\n  get id() { return getPublicId(this._resource.id) }\n  get title() { return this._resource.title }\n  get eventConstraint() { return this._resource.ui.constraints[0] || null }\n  get eventOverlap() { return this._resource.ui.overlap }\n  get eventAllow() { return this._resource.ui.allows[0] || null }\n  get eventBackgroundColor() { return this._resource.ui.backgroundColor }\n  get eventBorderColor() { return this._resource.ui.borderColor }\n  get eventTextColor() { return this._resource.ui.textColor }\n\n  // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n  get eventClassNames() { return this._resource.ui.classNames }\n  get extendedProps() { return this._resource.extendedProps }\n\n\n  toPlainObject(settings: { collapseExtendedProps?: boolean, collapseEventColor?: boolean } = {}) {\n    let internal = this._resource\n    let { ui } = internal\n    let publicId = this.id\n    let res: Dictionary = {}\n\n    if (publicId) {\n      res.id = publicId\n    }\n\n    if (internal.title) {\n      res.title = internal.title\n    }\n\n    if (settings.collapseEventColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {\n      res.eventColor = ui.backgroundColor\n\n    } else {\n      if (ui.backgroundColor) {\n        res.eventBackgroundColor = ui.backgroundColor\n      }\n      if (ui.borderColor) {\n        res.eventBorderColor = ui.borderColor\n      }\n    }\n\n    if (ui.textColor) {\n      res.eventTextColor = ui.textColor\n    }\n\n    if (ui.classNames.length) {\n      res.eventClassNames = ui.classNames\n    }\n\n    if (Object.keys(internal.extendedProps).length) {\n      if (settings.collapseExtendedProps) {\n        __assign(res, internal.extendedProps)\n      } else {\n        res.extendedProps = internal.extendedProps\n      }\n    }\n\n    return res\n  }\n\n\n  toJSON() {\n    return this.toPlainObject()\n  }\n\n}\n\n\nexport function buildResourceApis(resourceStore: ResourceHash, context: CalendarContext) {\n  let resourceApis: ResourceApi[] = []\n\n  for (let resourceId in resourceStore) {\n    resourceApis.push(new ResourceApi(context, resourceStore[resourceId]))\n  }\n\n  return resourceApis\n}\n","import { DateSpan, CalendarApi, CalendarContext } from '@fullcalendar/common'\nimport { ResourceApi } from './ResourceApi'\nimport { ResourceInput, parseResource, ResourceHash, Resource } from '../structs/resource'\n\n\nCalendarApi.prototype.addResource = function(this: CalendarApi, input: ResourceInput | ResourceApi, scrollTo = true) {\n  let currentState = this.getCurrentData()\n  let resourceHash: ResourceHash\n  let resource: Resource\n\n  if (input instanceof ResourceApi) {\n    resource = input._resource\n    resourceHash = { [resource.id]: resource }\n  } else {\n    resourceHash = {}\n    resource = parseResource(input, '', resourceHash, currentState)\n  }\n\n  this.dispatch({\n    type: 'ADD_RESOURCE',\n    resourceHash\n  })\n\n  if (scrollTo) {\n    // TODO: wait til dispatch completes somehow\n    this.trigger('_scrollRequest', { resourceId: resource.id })\n  }\n\n  let resourceApi = new ResourceApi(currentState, resource)\n\n  currentState.emitter.trigger('resourceAdd', {\n    resource: resourceApi,\n    revert: () => {\n      this.dispatch({\n        type: 'REMOVE_RESOURCE',\n        resourceId: resource.id\n      })\n    }\n  })\n\n  return resourceApi\n}\n\n\nCalendarApi.prototype.getResourceById = function(this: CalendarApi, id: string) {\n  id = String(id)\n  let currentState = this.getCurrentData()\n\n  if (currentState.resourceStore) { // guard against calendar with no resource functionality\n    let rawResource = currentState.resourceStore[id]\n\n    if (rawResource) {\n      return new ResourceApi(currentState, rawResource)\n    }\n  }\n\n  return null\n}\n\n\nCalendarApi.prototype.getResources = function(this: CalendarApi): ResourceApi[] {\n  let currentState = this.getCurrentData()\n  let { resourceStore } = currentState\n  let resourceApis: ResourceApi[] = []\n\n  if (resourceStore) { // guard against calendar with no resource functionality\n    for (let resourceId in resourceStore) {\n      resourceApis.push(\n        new ResourceApi(currentState, resourceStore[resourceId])\n      )\n    }\n  }\n\n  return resourceApis\n}\n\n\nCalendarApi.prototype.getTopLevelResources = function(this: CalendarApi): ResourceApi[] {\n  let currentState = this.getCurrentData()\n  let { resourceStore } = currentState\n  let resourceApis: ResourceApi[] = []\n\n  if (resourceStore) { // guard against calendar with no resource functionality\n    for (let resourceId in resourceStore) {\n      if (!resourceStore[resourceId].parentId) {\n        resourceApis.push(\n          new ResourceApi(currentState, resourceStore[resourceId])\n        )\n      }\n    }\n  }\n\n  return resourceApis\n}\n\n\nCalendarApi.prototype.refetchResources = function(this: CalendarApi) {\n  this.dispatch({\n    type: 'REFETCH_RESOURCES'\n  })\n}\n\n\nexport function transformDatePoint(dateSpan: DateSpan, context: CalendarContext) {\n  return dateSpan.resourceId ?\n    { resource: context.calendarApi.getResourceById(dateSpan.resourceId) } :\n    {}\n}\n\n\nexport function transformDateSpan(dateSpan: DateSpan, context: CalendarContext) {\n  return dateSpan.resourceId ?\n    { resource: context.calendarApi.getResourceById(dateSpan.resourceId) } :\n    {}\n}\n","import { Splitter, SplittableProps, DateSpan, EventDef } from '@fullcalendar/common'\nimport { ResourceHash } from '../structs/resource'\n\nexport interface SplittableResourceProps extends SplittableProps {\n  resourceStore: ResourceHash\n}\n\n/*\nsplits things BASED OFF OF which resources they are associated with.\ncreates a '' entry which is when something has NO resource.\n*/\nexport class ResourceSplitter extends Splitter<SplittableResourceProps> {\n\n  getKeyInfo(props: SplittableResourceProps) {\n    return {\n      '': {}, // needed for non-resource\n      ...props.resourceStore // already has `ui` and `businessHours` keys!\n    }\n  }\n\n  getKeysForDateSpan(dateSpan: DateSpan): string[] {\n    return [ dateSpan.resourceId || '' ]\n  }\n\n  getKeysForEventDef(eventDef: EventDef): string[] {\n    let resourceIds = eventDef.resourceIds\n\n    if (!resourceIds.length) {\n      return [ '' ]\n    }\n\n    return resourceIds\n  }\n\n}\n","import { SplittableProps, EventUi, isPropsValid, Constraint, EventStore, mergeEventStores, CalendarContext } from '@fullcalendar/common'\nimport { ResourceSplitter } from './common/ResourceSplitter'\n\n\nexport function isPropsValidWithResources(props: SplittableProps, context: CalendarContext): boolean {\n  let splitter = new ResourceSplitter()\n\n  let sets = splitter.splitProps({\n    ...props,\n    resourceStore: context.getCurrentData().resourceStore\n  })\n\n  for (let resourceId in sets) {\n    let props = sets[resourceId]\n\n    // merge in event data from the non-resource segment\n    if (resourceId && sets['']) { // current segment is not the non-resource one, and there IS a non-resource one\n      props = {\n        ...props,\n        eventStore: mergeEventStores(sets[''].eventStore, props.eventStore),\n        eventUiBases: { ...sets[''].eventUiBases, ...props.eventUiBases }\n      }\n    }\n\n    if (!isPropsValid(props, context, { resourceId }, filterConfig.bind(null, resourceId))) {\n      return false\n    }\n  }\n\n  return true\n}\n\n\nfunction filterConfig(resourceId, config: EventUi) {\n  return {\n    ...config,\n    constraints: filterConstraints(resourceId, config.constraints)\n  }\n}\n\n\nfunction filterConstraints(resourceId: string, constraints: Constraint[]) {\n  return constraints.map(function(constraint) {\n\n    let defs = (constraint as EventStore).defs\n    if (defs) { // we are dealing with an EventStore\n      // if any of the events define constraints to resources that are NOT this resource,\n      // then this resource is unconditionally prohibited, which is what a `false` value does.\n      for (let defId in defs) {\n        let resourceIds = defs[defId].resourceIds\n        if (resourceIds.length && resourceIds.indexOf(resourceId) === -1) { // TODO: use a hash?!!! (for other reasons too)\n          return false\n        }\n      }\n    }\n\n    return constraint\n  })\n}\n","import { DateSpan } from '@fullcalendar/common'\n\nexport function transformExternalDef(dateSpan: DateSpan) {\n  return dateSpan.resourceId ?\n    { resourceId: dateSpan.resourceId } :\n    {}\n}\n","import { Hit, Dictionary } from '@fullcalendar/common'\n\nexport function transformEventResizeJoin(hit0: Hit, hit1: Hit): false | Dictionary {\n  let component = hit0.component\n\n  if (\n    (component as any).allowAcrossResources === false &&\n    hit0.dateSpan.resourceId !== hit1.dateSpan.resourceId\n  ) {\n    return false\n  }\n}\n","import { EventApi } from '@fullcalendar/common'\nimport { ResourceApi } from './ResourceApi'\n\n\nEventApi.prototype.getResources = function(this: EventApi): ResourceApi[] {\n  let { calendarApi } = this._context\n\n  return this._def.resourceIds.map(function(resourceId) {\n    return calendarApi.getResourceById(resourceId)\n  })\n}\n\n\nEventApi.prototype.setResources = function(this: EventApi, resources: (string | ResourceApi)[]) {\n  let resourceIds = []\n\n  // massage resources -> resourceIds\n  for (let resource of resources) {\n    let resourceId = null\n\n    if (typeof resource === 'string') {\n      resourceId = resource\n    } else if (typeof resource === 'number') {\n      resourceId = String(resource)\n    } else if (resource instanceof ResourceApi) {\n      resourceId = resource.id // guaranteed to always have an ID. hmmm\n    } else {\n      console.warn('unknown resource type: ' + resource)\n    }\n\n    if (resourceId) {\n      resourceIds.push(resourceId)\n    }\n  }\n\n  this.mutate({\n    standardProps: {\n      resourceIds\n    }\n  })\n}\n","import { CalendarContext } from '@fullcalendar/common'\n\nexport const optionChangeHandlers = {\n  resources: handleResources\n}\n\nfunction handleResources(newSourceInput, context: CalendarContext) {\n  let oldSourceInput = context.getCurrentData().resourceSource._raw\n\n  if (oldSourceInput !== newSourceInput) {\n    context.dispatch({\n      type: 'RESET_RESOURCE_SOURCE',\n      resourceSourceInput: newSourceInput\n    })\n  }\n}\n","import { CalendarData, parseFieldSpecs } from '@fullcalendar/common'\nimport { buildResourceApis, ResourceApi } from './api/ResourceApi'\nimport { ResourceHash } from './structs/resource'\n\n\nexport const DEFAULT_RESOURCE_ORDER = parseFieldSpecs('id,title')\n\nexport interface ResourceAddArg {\n  resource: ResourceApi\n  revert: () => void\n}\n\nexport interface ResourceChangeArg {\n  oldResource: ResourceApi\n  resource: ResourceApi\n  revert: () => void\n}\n\nexport interface ResourceRemoveArg {\n  resource: ResourceApi\n  revert: () => void\n}\n\n\nexport function handleResourceStore(resourceStore: ResourceHash, calendarData: CalendarData) {\n  let { emitter } = calendarData\n\n  if (emitter.hasHandlers('resourcesSet')) {\n    emitter.trigger('resourcesSet', buildResourceApis(resourceStore, calendarData))\n  }\n}\n","import { Identity, CssDimValue, ClassNamesGenerator, CustomContentGenerator, DidMountHandler, WillUnmountHandler, identity, parseFieldSpecs } from '@fullcalendar/common'\n\n// public\nimport {\n  ResourceSourceInput,\n  ResourceLabelContentArg, ResourceLabelMountArg,\n  ColSpec,\n  ColHeaderContentArg, ColHeaderMountArg,\n  ColCellContentArg, ColCellMountArg,\n  ResourceLaneContentArg, ResourceLaneMountArg,\n  ResourceApi,\n  ResourceAddArg, ResourceChangeArg, ResourceRemoveArg\n} from './api-type-deps'\n\nexport const OPTION_REFINERS = {\n  initialResources: identity as Identity<ResourceSourceInput>,\n  resources: identity as Identity<ResourceSourceInput>,\n\n  eventResourceEditable: Boolean,\n  refetchResourcesOnNavigate: Boolean,\n  resourceOrder: parseFieldSpecs,\n  filterResourcesWithEvents: Boolean,\n  resourceGroupField: String,\n  resourceAreaWidth: identity as Identity<CssDimValue>,\n  resourceAreaColumns: identity as Identity<ColSpec[]>,\n  resourcesInitiallyExpanded: Boolean,\n  datesAboveResources: Boolean,\n  needsResourceData: Boolean, // internal-only\n\n  resourceAreaHeaderClassNames: identity as Identity<ClassNamesGenerator<ColHeaderContentArg>>,\n  resourceAreaHeaderContent: identity as Identity<CustomContentGenerator<ColHeaderContentArg>>,\n  resourceAreaHeaderDidMount: identity as Identity<DidMountHandler<ColHeaderMountArg>>,\n  resourceAreaHeaderWillUnmount: identity as Identity<WillUnmountHandler<ColHeaderMountArg>>,\n\n  resourceGroupLabelClassNames: identity as Identity<ClassNamesGenerator<ColCellContentArg>>,\n  resourceGroupLabelContent: identity as Identity<CustomContentGenerator<ColCellContentArg>>,\n  resourceGroupLabelDidMount: identity as Identity<DidMountHandler<ColCellMountArg>>,\n  resourceGroupLabelWillUnmount: identity as Identity<WillUnmountHandler<ColCellMountArg>>,\n\n  resourceLabelClassNames: identity as Identity<ClassNamesGenerator<ResourceLabelContentArg>>,\n  resourceLabelContent: identity as Identity<CustomContentGenerator<ResourceLabelContentArg>>,\n  resourceLabelDidMount: identity as Identity<DidMountHandler<ResourceLabelMountArg>>,\n  resourceLabelWillUnmount: identity as Identity<WillUnmountHandler<ResourceLabelMountArg>>,\n\n  resourceLaneClassNames: identity as Identity<ClassNamesGenerator<ResourceLaneContentArg>>,\n  resourceLaneContent: identity as Identity<CustomContentGenerator<ResourceLaneContentArg>>,\n  resourceLaneDidMount: identity as Identity<DidMountHandler<ResourceLaneMountArg>>,\n  resourceLaneWillUnmount: identity as Identity<WillUnmountHandler<ResourceLaneMountArg>>,\n\n  resourceGroupLaneClassNames: identity as Identity<ClassNamesGenerator<ColCellContentArg>>,\n  resourceGroupLaneContent: identity as Identity<CustomContentGenerator<ColCellContentArg>>,\n  resourceGroupLaneDidMount: identity as Identity<DidMountHandler<ColCellMountArg>>,\n  resourceGroupLaneWillUnmount: identity as Identity<WillUnmountHandler<ColCellMountArg>>\n}\n\nexport const LISTENER_REFINERS = {\n  resourcesSet: identity as Identity<(resources: ResourceApi[]) => void>,\n  resourceAdd: identity as Identity<(arg: ResourceAddArg) => void>,\n  resourceChange: identity as Identity<(arg: ResourceChangeArg) => void>,\n  resourceRemove: identity as Identity<(arg: ResourceRemoveArg) => void>\n}\n","import { registerResourceSourceDef } from '../structs/resource-source-def'\nimport { ResourceInput } from '../structs/resource'\nimport { ResourceSourceRefined } from '../structs/resource-source-parse'\n\nregisterResourceSourceDef<ResourceInput[]>({\n\n  ignoreRange: true,\n\n  parseMeta(refined: ResourceSourceRefined) {\n    if (Array.isArray(refined.resources)) {\n      return refined.resources\n    }\n    return null\n  },\n\n  fetch(arg, successCallback) {\n    successCallback({\n      rawResources: arg.resourceSource.meta\n    })\n  }\n\n})\n","import { unpromisify } from '@fullcalendar/common'\nimport { ResourceSourceError } from '../structs/resource-source'\nimport { registerResourceSourceDef } from '../structs/resource-source-def'\nimport { ResourceInput } from '../structs/resource'\nimport { ResourceSourceRefined } from '../structs/resource-source-parse'\n\nexport interface ResourceFuncArg {\n  start?: Date\n  end?: Date\n  startStr?: string\n  endStr?: string\n  timeZone?: string\n}\n\nexport type ResourceFunc = (\n  arg: ResourceFuncArg,\n  successCallback: (events: ResourceInput[]) => void,\n  failureCallback: (errorObj: ResourceSourceError) => void\n) => any // TODO: promise-like object or nothing\n\nregisterResourceSourceDef<ResourceFunc>({\n\n  parseMeta(refined: ResourceSourceRefined) {\n    if (typeof refined.resources === 'function') {\n      return refined.resources\n    }\n    return null\n  },\n\n  fetch(arg, success, failure) {\n    let dateEnv = arg.context.dateEnv\n    let func = arg.resourceSource.meta\n\n    let publicArg: ResourceFuncArg = arg.range ? {\n      start: dateEnv.toDate(arg.range.start),\n      end: dateEnv.toDate(arg.range.end),\n      startStr: dateEnv.formatIso(arg.range.start),\n      endStr: dateEnv.formatIso(arg.range.end),\n      timeZone: dateEnv.timeZone\n    } : {}\n\n    // TODO: make more dry with EventSourceFunc\n    // TODO: accept a response?\n    unpromisify(\n      func.bind(null, publicArg),\n      function(rawResources) { // success\n        success({ rawResources }) // needs an object response\n      },\n      failure // send errorObj directly to failure callback\n    )\n  }\n\n})\n","import { DateRange, CalendarContext, requestJson, Dictionary } from '@fullcalendar/common'\nimport { registerResourceSourceDef } from '../structs/resource-source-def'\nimport { __assign } from 'tslib'\nimport { ResourceSourceRefined } from '../structs/resource-source-parse'\n\ninterface JsonFeedMeta {\n  url: string\n  method: string\n  startParam?: string\n  endParam?: string\n  timeZoneParam?: string\n  extraParams?: Dictionary | (() => Dictionary)\n}\n\nregisterResourceSourceDef<JsonFeedMeta>({\n\n  parseMeta(refined: ResourceSourceRefined) {\n    if (refined.url) {\n      return {\n        url: refined.url,\n        method: (refined.method || 'GET').toUpperCase(),\n        extraParams: refined.extraParams\n      }\n    }\n    return null\n  },\n\n  fetch(arg, successCallback, failureCallback) {\n    let meta = arg.resourceSource.meta\n    let requestParams = buildRequestParams(meta, arg.range, arg.context)\n\n    requestJson(meta.method, meta.url, requestParams, function(rawResources, xhr) {\n      successCallback({ rawResources, xhr })\n    }, function(message, xhr) {\n      failureCallback({ message, xhr })\n    })\n  }\n\n})\n\n// TODO: somehow consolidate with event json feed\nfunction buildRequestParams(meta: JsonFeedMeta, range: DateRange | null, context: CalendarContext) {\n  let { dateEnv, options } = context\n  let startParam\n  let endParam\n  let timeZoneParam\n  let customRequestParams\n  let params = {}\n\n  if (range) {\n    startParam = meta.startParam\n    if (startParam == null) {\n      startParam = options.startParam\n    }\n\n    endParam = meta.endParam\n    if (endParam == null) {\n      endParam = options.endParam\n    }\n\n    timeZoneParam = meta.timeZoneParam\n    if (timeZoneParam == null) {\n      timeZoneParam = options.timeZoneParam\n    }\n\n    params[startParam] = dateEnv.formatIso(range.start)\n    params[endParam] = dateEnv.formatIso(range.end)\n\n    if (dateEnv.timeZone !== 'local') {\n      params[timeZoneParam] = dateEnv.timeZone\n    }\n  }\n\n  // retrieve any outbound GET/POST data from the options\n  if (typeof meta.extraParams === 'function') {\n    // supplied as a function that returns a key/value object\n    customRequestParams = meta.extraParams()\n  } else {\n    // probably supplied as a straight key/value object\n    customRequestParams = meta.extraParams || {}\n  }\n\n  __assign(params, customRequestParams)\n\n  return params\n}\n","import { createElement, Ref, ComponentChildren, ViewContextType, ViewContext, RenderHook, ViewApi, formatDayString, Dictionary, MountArg } from '@fullcalendar/common'\nimport { Resource } from '../structs/resource'\nimport { ResourceApi } from '../api/ResourceApi'\n\n\nexport interface ResourceLabelRootProps {\n  resource: Resource\n  date?: Date\n  children: (\n    rootElRef: Ref<HTMLElement>,\n    classNames: string[],\n    dataAttrs: Dictionary,\n    innerElRef: Ref<HTMLElement>,\n    innerContent: ComponentChildren\n  ) => ComponentChildren\n}\n\nexport interface ResourceLabelContentArg {\n  resource: ResourceApi\n  date?: Date\n  view: ViewApi\n}\n\nexport type ResourceLabelMountArg = MountArg<ResourceLabelContentArg>\n\n\n// TODO: not used for Spreadsheet. START USING. difficult because of col-specific rendering props\n\n\nexport function ResourceLabelRoot(props: ResourceLabelRootProps) {\n  return (\n    <ViewContextType.Consumer>\n      {(context: ViewContext) => {\n        let { options } = context\n        let hookProps: ResourceLabelContentArg = {\n          resource: new ResourceApi(context, props.resource),\n          date: props.date ? context.dateEnv.toDate(props.date) : null,\n          view: context.viewApi\n        }\n\n        let dataAttrs = {\n          'data-resource-id': props.resource.id, // TODO: only do public-facing one?\n          'data-date': props.date ? formatDayString(props.date) : undefined\n        }\n\n        return (\n          <RenderHook<ResourceLabelContentArg>\n            hookProps={hookProps}\n            classNames={options.resourceLabelClassNames}\n            content={options.resourceLabelContent}\n            defaultContent={renderInnerContent}\n            didMount={options.resourceLabelDidMount}\n            willUnmount={options.resourceLabelWillUnmount}\n          >\n            {(rootElRef, classNames, innerElRef, innerContent) => props.children(\n              rootElRef,\n              classNames, // TODO: pass in 'fc-resource' ?\n              dataAttrs,\n              innerElRef,\n              innerContent\n            )}\n          </RenderHook>\n        )\n      }}\n    </ViewContextType.Consumer>\n  )\n}\n\n\nfunction renderInnerContent(props: ResourceLabelContentArg) {\n  return props.resource.title || props.resource.id\n}\n","import {\n  VNode, createElement, TableDowCell,\n  memoize, BaseComponent, DateMarker, DateFormatter, computeFallbackHeaderFormat, TableDateCell, Fragment, DateRange, NowTimer, Ref, ComponentChildren, DateProfile\n} from '@fullcalendar/common'\nimport { Resource } from '../structs/resource'\nimport { ResourceLabelRoot } from './ResourceLabelRoot'\nimport { ResourceApi } from '../api/ResourceApi'\n\n\nexport interface ResourceDayHeaderProps {\n  dates: DateMarker[]\n  dateProfile: DateProfile\n  datesRepDistinctDays: boolean\n  resources: Resource[] // flattened\n  renderIntro?: () => VNode\n}\n\nexport class ResourceDayHeader extends BaseComponent<ResourceDayHeaderProps> { // TODO: rename to ResourceDayHeaderTrs?\n\n  private buildDateFormat = memoize(buildDateFormat)\n\n\n  render() {\n    let { props, context } = this\n\n    let dateFormat = this.buildDateFormat(\n      context.options.dayHeaderFormat,\n      props.datesRepDistinctDays,\n      props.dates.length\n    )\n\n    return (\n      <NowTimer unit='day'>\n        {(nowDate: DateMarker, todayRange: DateRange) => {\n          if (props.dates.length === 1) {\n            return this.renderResourceRow(props.resources, props.dates[0])\n          } else {\n            if (context.options.datesAboveResources) {\n              return this.renderDayAndResourceRows(props.dates, dateFormat, todayRange, props.resources)\n            } else {\n              return this.renderResourceAndDayRows(props.resources, props.dates, dateFormat, todayRange)\n            }\n          }\n        }}\n      </NowTimer>\n    )\n  }\n\n\n  renderResourceRow(resources: Resource[], date: DateMarker) {\n    let resourceCells = resources.map((resource) => {\n      return (\n        <ResourceCell\n          key={resource.id}\n          resource={resource}\n          colSpan={1}\n          date={date}\n        />\n      )\n    })\n\n    return this.buildTr(resourceCells, 'resources')\n  }\n\n\n  renderDayAndResourceRows(dates: DateMarker[], dateFormat: DateFormatter, todayRange: DateRange, resources: Resource[]) {\n    let dateCells: VNode[] = []\n    let resourceCells: VNode[] = []\n\n    for (let date of dates) {\n\n      dateCells.push(\n        this.renderDateCell(date, dateFormat, todayRange, resources.length, null, true)\n      )\n\n      for (let resource of resources) {\n        resourceCells.push(\n          <ResourceCell\n            key={resource.id + ':' + date.toISOString()}\n            resource={resource}\n            colSpan={1}\n            date={date}\n          />\n        )\n      }\n    }\n\n    return (\n      <Fragment>\n        {this.buildTr(dateCells, 'day')}\n        {this.buildTr(resourceCells, 'resources')}\n      </Fragment>\n    )\n  }\n\n\n  renderResourceAndDayRows(resources: Resource[], dates: DateMarker[], dateFormat: DateFormatter, todayRange: DateRange) {\n    let resourceCells: VNode[] = []\n    let dateCells: VNode[] = []\n\n    for (let resource of resources) {\n\n      resourceCells.push(\n        <ResourceCell\n          key={resource.id}\n          resource={resource}\n          colSpan={dates.length}\n          isSticky={true}\n        />\n      )\n\n      for (let date of dates) {\n        dateCells.push(\n          this.renderDateCell(date, dateFormat, todayRange, 1, resource)\n        )\n      }\n    }\n\n    return (\n      <Fragment>\n        {this.buildTr(resourceCells, 'day')}\n        {this.buildTr(dateCells, 'resources')}\n      </Fragment>\n    )\n  }\n\n\n  // a cell with date text. might have a resource associated with it\n  renderDateCell(date: DateMarker, dateFormat: DateFormatter, todayRange: DateRange, colSpan: number, resource?: Resource, isSticky?: boolean) {\n    let { props } = this\n    let keyPostfix = resource ? `:${resource.id}` : ''\n    let extraHookProps = resource ? { resource: new ResourceApi(this.context, resource) } : {}\n    let extraDataAttrs = resource ? { 'data-resource-id' : resource.id } : {}\n\n    return props.datesRepDistinctDays ?\n      <TableDateCell\n        key={date.toISOString() + keyPostfix}\n        date={date}\n        dateProfile={props.dateProfile}\n        todayRange={todayRange}\n        colCnt={props.dates.length * props.resources.length}\n        dayHeaderFormat={dateFormat}\n        colSpan={colSpan}\n        isSticky={isSticky}\n        extraHookProps={extraHookProps}\n        extraDataAttrs={extraDataAttrs}\n      /> :\n      <TableDowCell // we can't leverage the pure-componentness becausae the extra* props are new every time :(\n        key={date.getUTCDay() + keyPostfix}\n        dow={date.getUTCDay()}\n        dayHeaderFormat={dateFormat}\n        colSpan={colSpan}\n        isSticky={isSticky}\n        extraHookProps={extraHookProps}\n        extraDataAttrs={extraDataAttrs}\n      />\n  }\n\n\n  buildTr(cells: VNode[], key: string) {\n    let { renderIntro } = this.props\n\n    if (!cells.length) {\n      cells = [ <td key={0}>&nbsp;</td> ]\n    }\n\n    return (\n      <tr key={key}>\n        {renderIntro && renderIntro()}\n        {cells}\n      </tr>\n    )\n  }\n\n}\n\n\nfunction buildDateFormat(dayHeaderFormat: DateFormatter, datesRepDistinctDays, dayCnt) {\n  return dayHeaderFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt)\n}\n\n\ninterface ResourceCellProps {\n  resource: Resource\n  colSpan: number\n  date?: DateMarker\n  isSticky?: boolean\n}\n\nclass ResourceCell extends BaseComponent<ResourceCellProps> {\n\n  render() {\n    let { props } = this\n\n    return (\n      <ResourceLabelRoot resource={props.resource} date={props.date}>\n        {(elRef: Ref<HTMLTableCellElement>, customClassNames: string[], dataAttrs, innerElRef, innerContent: ComponentChildren) => (\n          <th\n            ref={elRef}\n            className={[ 'fc-col-header-cell', 'fc-resource' ].concat(customClassNames).join(' ')}\n            colSpan={props.colSpan}\n            {...dataAttrs}\n          >\n            <div className='fc-scrollgrid-sync-inner'>\n              <span\n                className={[\n                  'fc-col-header-cell-cushion',\n                  props.isSticky ? 'fc-sticky' : ''\n                ].join(' ')}\n                ref={innerElRef}\n              >\n                {innerContent}\n              </span>\n            </div>\n          </th>\n        )}\n      </ResourceLabelRoot>\n    )\n  }\n\n}\n","import { CalendarContext, SlicedProps, EventDef, mapHash, Splitter, DayTableModel, DayTableCell, SplittableProps, DateSpan, Seg, memoize, EventSegUiInteractionState } from '@fullcalendar/common'\nimport { Resource } from '../structs/resource'\nimport { __assign } from 'tslib'\nimport { ResourceApi } from '../api/ResourceApi'\n\nexport interface ResourceDayTableCell extends DayTableCell {\n  resource: Resource\n}\n\nexport abstract class AbstractResourceDayTableModel {\n\n  cells: ResourceDayTableCell[][]\n  rowCnt: number\n  colCnt: number\n  resourceIndex: ResourceIndex\n\n\n  constructor(\n    public dayTableModel: DayTableModel,\n    public resources: Resource[],\n    private context: CalendarContext\n  ) {\n    this.resourceIndex = new ResourceIndex(resources)\n\n    this.rowCnt = dayTableModel.rowCnt\n    this.colCnt = dayTableModel.colCnt * resources.length\n\n    this.cells = this.buildCells()\n  }\n\n\n  abstract computeCol(dateI, resourceI): number\n  abstract computeColRanges(dateStartI, dateEndI, resourceI): {\n    firstCol: number,\n    lastCol: number,\n    isStart: boolean,\n    isEnd: boolean\n  }[]\n\n\n  buildCells(): ResourceDayTableCell[][] {\n    let { rowCnt, dayTableModel, resources } = this\n    let rows: ResourceDayTableCell[][] = []\n\n    for (let row = 0; row < rowCnt; row++) {\n      let rowCells: ResourceDayTableCell[] = []\n\n      for (let dateCol = 0; dateCol < dayTableModel.colCnt; dateCol++) {\n\n        for (let resourceCol = 0; resourceCol < resources.length; resourceCol++) {\n          let resource = resources[resourceCol]\n          let extraHookProps = { resource: new ResourceApi(this.context, resource) }\n          let extraDataAttrs = { 'data-resource-id': resource.id }\n          let extraClassNames = [ 'fc-resource' ]\n          let date = dayTableModel.cells[row][dateCol].date\n\n          rowCells[\n            this.computeCol(dateCol, resourceCol)\n          ] = {\n            key: resource.id + ':' + date.toISOString(),\n            date,\n            resource,\n            extraHookProps,\n            extraDataAttrs,\n            extraClassNames\n          }\n        }\n      }\n\n      rows.push(rowCells)\n    }\n\n    return rows\n  }\n\n}\n\n\n/*\nresources over dates\n*/\nexport class ResourceDayTableModel extends AbstractResourceDayTableModel {\n\n  computeCol(dateI, resourceI) {\n    return resourceI * this.dayTableModel.colCnt + dateI\n  }\n\n  /*\n  all date ranges are intact\n  */\n  computeColRanges(dateStartI, dateEndI, resourceI) {\n    return [\n      {\n        firstCol: this.computeCol(dateStartI, resourceI),\n        lastCol: this.computeCol(dateEndI, resourceI),\n        isStart: true,\n        isEnd: true\n      }\n    ]\n  }\n\n}\n\n\n/*\ndates over resources\n*/\nexport class DayResourceTableModel extends AbstractResourceDayTableModel {\n\n  computeCol(dateI, resourceI) {\n    return dateI * this.resources.length + resourceI\n  }\n\n  /*\n  every single day is broken up\n  */\n  computeColRanges(dateStartI, dateEndI, resourceI) {\n    let segs = []\n\n    for (let i = dateStartI; i <= dateEndI; i++) {\n      let col = this.computeCol(i, resourceI)\n\n      segs.push({\n        firstCol: col,\n        lastCol: col,\n        isStart: i === dateStartI,\n        isEnd: i === dateEndI\n      })\n    }\n\n    return segs\n  }\n\n}\n\n\nexport class ResourceIndex {\n\n  indicesById: { [resourceId: string]: number }\n  ids: string[]\n  length: number\n\n  constructor(resources: Resource[]) {\n    let indicesById = {}\n    let ids = []\n\n    for (let i = 0; i < resources.length; i++) {\n      let id = resources[i].id\n\n      ids.push(id)\n      indicesById[id] = i\n    }\n\n    this.ids = ids\n    this.indicesById = indicesById\n    this.length = resources.length\n  }\n\n}\n\n\n// splitter\n\nexport interface VResourceProps extends SplittableProps {\n  resourceDayTableModel: AbstractResourceDayTableModel\n}\n\n/*\nTODO: just use ResourceHash somehow? could then use the generic ResourceSplitter\n*/\nexport class VResourceSplitter extends Splitter<VResourceProps> {\n\n  getKeyInfo(props: VResourceProps) {\n    let { resourceDayTableModel } = props\n\n    let hash = mapHash(resourceDayTableModel.resourceIndex.indicesById, function(i) {\n      return resourceDayTableModel.resources[i] // has `ui` AND `businessHours` keys!\n    }) as any // :(\n\n    hash[''] = {}\n\n    return hash\n  }\n\n  getKeysForDateSpan(dateSpan: DateSpan): string[] {\n    return [ dateSpan.resourceId || '' ]\n  }\n\n  getKeysForEventDef(eventDef: EventDef): string[] {\n    let resourceIds = eventDef.resourceIds\n\n    if (!resourceIds.length) {\n      return [ '' ]\n    }\n\n    return resourceIds\n  }\n\n}\n\n\n// joiner\n\nconst NO_SEGS = [] // for memoizing\n\nexport abstract class VResourceJoiner<SegType extends Seg> {\n\n  private joinDateSelection = memoize(this.joinSegs)\n  private joinBusinessHours = memoize(this.joinSegs)\n  private joinFgEvents = memoize(this.joinSegs)\n  private joinBgEvents = memoize(this.joinSegs)\n  private joinEventDrags = memoize(this.joinInteractions)\n  private joinEventResizes = memoize(this.joinInteractions)\n\n  /*\n  propSets also has a '' key for things with no resource\n  */\n  joinProps(propSets: { [resourceId: string]: SlicedProps<SegType> }, resourceDayTable: AbstractResourceDayTableModel): SlicedProps<SegType> {\n    let dateSelectionSets = []\n    let businessHoursSets = []\n    let fgEventSets = []\n    let bgEventSets = []\n    let eventDrags = []\n    let eventResizes = []\n    let eventSelection = ''\n    let keys = resourceDayTable.resourceIndex.ids.concat([ '' ]) // add in the all-resource key\n\n    for (let key of keys) {\n      let props = propSets[key]\n\n      dateSelectionSets.push(props.dateSelectionSegs)\n      businessHoursSets.push(key ? props.businessHourSegs : NO_SEGS) // don't include redundant all-resource businesshours\n      fgEventSets.push(key ? props.fgEventSegs : NO_SEGS) // don't include fg all-resource segs\n      bgEventSets.push(props.bgEventSegs)\n      eventDrags.push(props.eventDrag)\n      eventResizes.push(props.eventResize)\n      eventSelection = eventSelection || props.eventSelection\n    }\n\n    return {\n      dateSelectionSegs: this.joinDateSelection(resourceDayTable, ...dateSelectionSets),\n      businessHourSegs: this.joinBusinessHours(resourceDayTable, ...businessHoursSets),\n      fgEventSegs: this.joinFgEvents(resourceDayTable, ...fgEventSets),\n      bgEventSegs: this.joinBgEvents(resourceDayTable, ...bgEventSets),\n      eventDrag: this.joinEventDrags(resourceDayTable, ...eventDrags),\n      eventResize: this.joinEventResizes(resourceDayTable, ...eventResizes),\n      eventSelection\n    }\n  }\n\n  joinSegs(resourceDayTable: AbstractResourceDayTableModel, ...segGroups: SegType[][]): SegType[] {\n    let resourceCnt = resourceDayTable.resources.length\n    let transformedSegs = []\n\n    for (let i = 0; i < resourceCnt; i++) {\n\n      for (let seg of segGroups[i]) {\n        transformedSegs.push(\n          ...this.transformSeg(seg, resourceDayTable, i)\n        )\n      }\n\n      for (let seg of segGroups[resourceCnt]) { // one beyond. the all-resource\n        transformedSegs.push(\n          ...this.transformSeg(seg, resourceDayTable, i)\n        )\n      }\n\n    }\n\n    return transformedSegs\n  }\n\n  /*\n  for expanding non-resource segs to all resources.\n  only for public use.\n  no memoizing.\n  */\n  expandSegs(resourceDayTable: AbstractResourceDayTableModel, segs: SegType[]) {\n    let resourceCnt = resourceDayTable.resources.length\n    let transformedSegs = []\n\n    for (let i = 0; i < resourceCnt; i++) {\n\n      for (let seg of segs) {\n        transformedSegs.push(\n          ...this.transformSeg(seg, resourceDayTable, i)\n        )\n      }\n\n    }\n\n    return transformedSegs\n  }\n\n  joinInteractions(resourceDayTable: AbstractResourceDayTableModel, ...interactions: EventSegUiInteractionState[]): EventSegUiInteractionState | null {\n    let resourceCnt = resourceDayTable.resources.length\n    let affectedInstances = {}\n    let transformedSegs = []\n    let anyInteractions = false\n    let isEvent = false\n\n    for (let i = 0; i < resourceCnt; i++) {\n      let interaction = interactions[i]\n\n      if (interaction) {\n        anyInteractions = true\n\n        for (let seg of interaction.segs) {\n          transformedSegs.push(\n            ...this.transformSeg(seg as SegType, resourceDayTable, i) // TODO: templateify Interaction::segs\n          )\n        }\n\n        __assign(affectedInstances, interaction.affectedInstances)\n        isEvent = isEvent || interaction.isEvent\n      }\n\n      if (interactions[resourceCnt]) { // one beyond. the all-resource\n\n        for (let seg of interactions[resourceCnt].segs) {\n          transformedSegs.push(\n            ...this.transformSeg(seg as SegType, resourceDayTable, i) // TODO: templateify Interaction::segs\n          )\n        }\n      }\n    }\n\n    if (anyInteractions) {\n      return {\n        affectedInstances,\n        segs: transformedSegs,\n        isEvent\n      }\n    } else {\n      return null\n    }\n  }\n\n  // needs to generate NEW seg obj!!! because of .el\n  abstract transformSeg(seg: SegType, resourceDayTable: AbstractResourceDayTableModel, resourceI: number): SegType[]\n\n}\n","import { flexibleCompare, compareByFieldSpecs, OrderSpec } from '@fullcalendar/common'\nimport { ResourceHash, Resource } from '../structs/resource'\nimport { ResourceEntityExpansions } from '../reducers/resourceEntityExpansions'\nimport { GroupSpec } from './resource-spec'\nimport { ResourceApi } from '../api/ResourceApi'\n\ninterface ParentNode {\n  children: ParentNode[]\n}\n\ninterface ResourceParentNode extends ParentNode {\n  resource: Resource\n  resourceFields: any\n}\n\ntype ResourceNodeHash = { [resourceId: string]: ResourceParentNode }\n\ninterface GroupParentNode extends ParentNode {\n  group: Group\n}\n\nexport interface Group {\n  value: any\n  spec: GroupSpec\n}\n\nexport interface GroupNode {\n  id: string // 'field:value'\n  isExpanded: boolean\n  group: Group\n}\n\nexport interface ResourceNode {\n  id: string // 'resourceId' (won't collide with group ID's because has colon)\n  rowSpans: number[]\n  depth: number\n  isExpanded: boolean\n  hasChildren: boolean\n  resource: Resource\n  resourceFields: any\n}\n\n/*\ndoesn't accept grouping\n*/\nexport function flattenResources(resourceStore: ResourceHash, orderSpecs: OrderSpec<ResourceApi>[]): Resource[] {\n  return buildRowNodes(resourceStore, [], orderSpecs, false, {}, true)\n    .map(function(node) {\n      return (node as ResourceNode).resource\n    })\n}\n\nexport function buildRowNodes(\n  resourceStore: ResourceHash,\n  groupSpecs: GroupSpec[],\n  orderSpecs: OrderSpec<ResourceApi>[],\n  isVGrouping: boolean,\n  expansions: ResourceEntityExpansions,\n  expansionDefault: boolean\n): (GroupNode | ResourceNode)[] {\n  let complexNodes = buildHierarchy(resourceStore, isVGrouping ? -1 : 1, groupSpecs, orderSpecs)\n  let flatNodes = []\n\n  flattenNodes(complexNodes, flatNodes, isVGrouping, [], 0, expansions, expansionDefault)\n\n  return flatNodes\n}\n\nfunction flattenNodes(\n  complexNodes: ParentNode[],\n  res, isVGrouping, rowSpans, depth,\n  expansions: ResourceEntityExpansions,\n  expansionDefault: boolean\n) {\n\n  for (let i = 0; i < complexNodes.length; i++) {\n    let complexNode = complexNodes[i]\n    let group = (complexNode as GroupParentNode).group\n\n    if (group) {\n\n      if (isVGrouping) {\n        let firstRowIndex = res.length\n        let rowSpanIndex = rowSpans.length\n\n        flattenNodes(complexNode.children, res, isVGrouping, rowSpans.concat(0), depth, expansions, expansionDefault)\n\n        if (firstRowIndex < res.length) {\n          let firstRow = res[firstRowIndex]\n          let firstRowSpans = firstRow.rowSpans = firstRow.rowSpans.slice()\n\n          firstRowSpans[rowSpanIndex] = res.length - firstRowIndex\n        }\n      } else {\n        let id = group.spec.field + ':' + group.value\n        let isExpanded = expansions[id] != null ? expansions[id] : expansionDefault\n\n        res.push({ id, group, isExpanded })\n\n        if (isExpanded) {\n          flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault)\n        }\n      }\n\n    } else if ((complexNode as ResourceParentNode).resource) {\n      let id = (complexNode as ResourceParentNode).resource.id\n      let isExpanded = expansions[id] != null ? expansions[id] : expansionDefault\n\n      res.push({\n        id,\n        rowSpans,\n        depth,\n        isExpanded,\n        hasChildren: Boolean(complexNode.children.length),\n        resource: (complexNode as ResourceParentNode).resource,\n        resourceFields: (complexNode as ResourceParentNode).resourceFields\n      })\n\n      if (isExpanded) {\n        flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault)\n      }\n    }\n  }\n}\n\nfunction buildHierarchy(resourceStore: ResourceHash, maxDepth: number, groupSpecs: GroupSpec[], orderSpecs: OrderSpec<ResourceApi>[]): ParentNode[] {\n  let resourceNodes = buildResourceNodes(resourceStore, orderSpecs)\n  let builtNodes: ParentNode[] = []\n\n  for (let resourceId in resourceNodes) {\n    let resourceNode = resourceNodes[resourceId]\n\n    if (!resourceNode.resource.parentId) {\n      insertResourceNode(resourceNode, builtNodes, groupSpecs, 0, maxDepth, orderSpecs)\n    }\n  }\n\n  return builtNodes\n}\n\nfunction buildResourceNodes(resourceStore: ResourceHash, orderSpecs: OrderSpec<ResourceApi>[]): ResourceNodeHash {\n  let nodeHash: ResourceNodeHash = {}\n\n  for (let resourceId in resourceStore) {\n    let resource = resourceStore[resourceId]\n\n    nodeHash[resourceId] = {\n      resource,\n      resourceFields: buildResourceFields(resource),\n      children: []\n    }\n  }\n\n  for (let resourceId in resourceStore) {\n    let resource = resourceStore[resourceId]\n\n    if (resource.parentId) {\n      let parentNode = nodeHash[resource.parentId]\n\n      if (parentNode) {\n        insertResourceNodeInSiblings(nodeHash[resourceId], parentNode.children, orderSpecs)\n      }\n    }\n  }\n\n  return nodeHash\n}\n\nfunction insertResourceNode(resourceNode: ResourceParentNode, nodes: ParentNode[], groupSpecs: GroupSpec[], depth: number, maxDepth: number, orderSpecs: OrderSpec<ResourceApi>[]) {\n  if (groupSpecs.length && (maxDepth === -1 || depth <= maxDepth)) {\n    let groupNode = ensureGroupNodes(resourceNode, nodes, groupSpecs[0])\n\n    insertResourceNode(resourceNode, groupNode.children, groupSpecs.slice(1), depth + 1, maxDepth, orderSpecs)\n  } else {\n    insertResourceNodeInSiblings(resourceNode, nodes, orderSpecs)\n  }\n}\n\nfunction ensureGroupNodes(resourceNode: ResourceParentNode, nodes: ParentNode[], groupSpec: GroupSpec): GroupParentNode {\n  let groupValue = resourceNode.resourceFields[groupSpec.field]\n  let groupNode\n  let newGroupIndex\n\n  // find an existing group that matches, or determine the position for a new group\n  if (groupSpec.order) {\n    for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex++) {\n      let node = nodes[newGroupIndex]\n\n      if ((node as GroupParentNode).group) {\n        let cmp = flexibleCompare(groupValue, (node as GroupParentNode).group.value) * groupSpec.order\n\n        if (cmp === 0) {\n          groupNode = node\n          break\n        } else if (cmp < 0) {\n          break\n        }\n      }\n    }\n  } else { // the groups are unordered\n    for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex++) {\n      let node = nodes[newGroupIndex]\n\n      if ((node as GroupParentNode).group && groupValue === (node as GroupParentNode).group.value) {\n        groupNode = node\n        break\n      }\n    }\n  }\n\n  if (!groupNode) {\n    groupNode = {\n      group: {\n        value: groupValue,\n        spec: groupSpec\n      },\n      children: []\n    }\n\n    nodes.splice(newGroupIndex, 0, groupNode)\n  }\n\n  return groupNode\n}\n\nfunction insertResourceNodeInSiblings(resourceNode, siblings, orderSpecs: OrderSpec<ResourceApi>[]) {\n  let i\n\n  for (i = 0; i < siblings.length; i++) {\n    let cmp = compareByFieldSpecs(siblings[i].resourceFields, resourceNode.resourceFields, orderSpecs) // TODO: pass in ResourceApi?\n\n    if (cmp > 0) { // went 1 past. insert at i\n      break\n    }\n  }\n\n  siblings.splice(i, 0, resourceNode)\n}\n\nexport function buildResourceFields(resource: Resource) {\n  let obj = { ...resource.extendedProps, ...resource.ui, ...resource }\n\n  delete obj.ui\n  delete obj.extendedProps\n\n  return obj\n}\n\nexport function isGroupsEqual(group0: Group, group1: Group) {\n  return group0.spec === group1.spec && group0.value === group1.value\n}\n","import { createPlugin } from '@fullcalendar/common'\nimport premiumCommonPlugin from '@fullcalendar/premium-common'\nimport '@fullcalendar/premium-common' // ensure ambient declarations\nimport './ambient'\nimport { ResourceDataAdder, ResourceEventConfigAdder, transformIsDraggable } from './View' // TODO: ResourceDataAdder should be own plugin\nimport { reduceResources } from './reducers/resources'\nimport { generateEventDefResourceMembers, EVENT_REFINERS } from './structs/event-parse'\nimport './structs/event-declare'\nimport { massageEventDragMutation, applyEventDefMutation, transformEventDrop } from './EventDragging'\nimport { transformDateSelectionJoin } from './DateSelecting'\nimport { transformDatePoint, transformDateSpan } from './api/CalendarApi-extend'\nimport './api/CalendarApi-declare'\nimport { isPropsValidWithResources } from './validation'\nimport { transformExternalDef } from './ExternalElementDragging'\nimport { transformEventResizeJoin } from './EventResizing'\nimport './api/EventApi-extend'\nimport './api/EventApi-declare'\nexport { ResourceLaneContentArg, ResourceLaneHookPropsInput } from './render-hooks'\nimport { optionChangeHandlers } from './option-change-handlers'\nimport { handleResourceStore } from './resources-crud'\nimport { OPTION_REFINERS, LISTENER_REFINERS } from './options'\nimport './options-declare'\n\n// TODO: plugin-ify\nimport './resource-sources/resource-array'\nimport './resource-sources/resource-func'\nimport './resource-sources/resource-json-feed'\n\nexport * from './api-type-deps'\nexport { DEFAULT_RESOURCE_ORDER } from './resources-crud'\n\nexport default createPlugin({\n  deps: [\n    premiumCommonPlugin\n  ],\n  reducers: [ reduceResources ],\n  eventRefiners: EVENT_REFINERS,\n  eventDefMemberAdders: [ generateEventDefResourceMembers ],\n  isDraggableTransformers: [ transformIsDraggable ],\n  eventDragMutationMassagers: [ massageEventDragMutation ],\n  eventDefMutationAppliers: [ applyEventDefMutation ],\n  dateSelectionTransformers: [ transformDateSelectionJoin ],\n  datePointTransforms: [ transformDatePoint ],\n  dateSpanTransforms: [ transformDateSpan ],\n  viewPropsTransformers: [ ResourceDataAdder, ResourceEventConfigAdder ],\n  isPropsValid: isPropsValidWithResources,\n  externalDefTransforms: [ transformExternalDef ],\n  eventResizeJoinTransforms: [ transformEventResizeJoin ],\n  eventDropTransformers: [ transformEventDrop ],\n  optionChangeHandlers,\n  optionRefiners: OPTION_REFINERS,\n  listenerRefiners: LISTENER_REFINERS,\n  propSetHandlers: { resourceStore: handleResourceStore }\n})\n\nexport { ResourceDayHeader } from './common/ResourceDayHeader'\nexport { VResourceJoiner, AbstractResourceDayTableModel, ResourceDayTableModel, DayResourceTableModel, VResourceSplitter } from './common/resource-day-table-model'\nexport { Resource, ResourceHash, getPublicId } from './structs/resource'\nexport { ResourceViewProps } from './View'\nexport { flattenResources, Group, isGroupsEqual, GroupNode, ResourceNode, buildRowNodes, buildResourceFields } from './common/resource-hierarchy'\nexport { ColSpec, GroupSpec, GroupLaneRenderHooks, ColCellContentArg, ColCellMountArg, ColHeaderContentArg, ColHeaderMountArg, ColHeaderRenderHooks } from './common/resource-spec'\nexport { ResourceApi } from './api/ResourceApi'\nexport { ResourceSplitter } from './common/ResourceSplitter'\n\nexport { ResourceLabelRoot, ResourceLabelRootProps } from './common/ResourceLabelRoot'\n"]},"metadata":{},"sourceType":"module"}