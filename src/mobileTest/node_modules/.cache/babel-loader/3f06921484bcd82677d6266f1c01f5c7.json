{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wangm1\\\\comp4960-section1-black-team\\\\comp4960-section1-black-team\\\\src\\\\client\\\\src\\\\pages\\\\speakers\\\\Speakers.js\";\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn, InsertButton, ExportCSVButton, DeleteButton, InsertModalHeader, EditButton } from 'react-bootstrap-table';\nimport '../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport $ from 'jquery';\n\nclass Speakers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.createCustomInsertButton = () => {\n      return /*#__PURE__*/React.createElement(InsertButton, {\n        btnText: \"Insert Speaker\",\n        btnContextual: \"btn-success\",\n        className: \"add-speaker-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      });\n    };\n\n    this.createCustomExportCSVButton = () => {\n      return /*#__PURE__*/React.createElement(ExportCSVButton, {\n        btnText: \"Export to CSV\",\n        btnContextual: \"btn-info\",\n        className: \"export-speaker-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      });\n    };\n\n    this.createCustomDeleteButton = () => {\n      return /*#__PURE__*/React.createElement(DeleteButton, {\n        btnText: \"Delete Speaker\",\n        btnContextual: \"btn-danger\",\n        className: \"delete-speaker-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 9\n        }\n      });\n    };\n\n    this.createCustomModalHeader = () => {\n      return /*#__PURE__*/React.createElement(InsertModalHeader, {\n        className: \"speaker-modal-header\",\n        title: \"Add Speaker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }\n      });\n    };\n\n    this.tableProps = {\n      onAddRow: this.addRowHook.bind(this),\n      afterDeleteRow: this.deleteRowHook.bind(this),\n      insertBtn: this.createCustomInsertButton,\n      exportCSVBtn: this.createCustomExportCSVButton,\n      deleteBtn: this.createCustomDeleteButton,\n      insertModalHeader: this.createCustomModalHeader\n    };\n    this.cellEditProps = {\n      mode: 'click',\n      blurToSave: true,\n      beforeSaveCell: this.beforeSaveHook.bind(this)\n    };\n    this.getData();\n    this.state = {\n      data: this.data\n    };\n  }\n\n  getData() {\n    return $.ajax({\n      method: \"GET\",\n      url: \"/Speaker/all\",\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        this.setState({\n          data: response\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      // TODO: Some form of error handling.\n      console.log(error);\n      this.setState({\n        data: []\n      });\n    });\n  }\n\n  addRowHook(row) {\n    const data = this.state.data || []; // Clear our the id field since the backend will auto generate one for us\n\n    row.id = null;\n    $.ajax({\n      method: \"POST\",\n      url: \"/Speaker/addSpeaker\",\n      data: JSON.stringify(row),\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        data.push(response);\n        this.setState({\n          data: data\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      // TODO: Some form of error handling.\n      console.log(error);\n    });\n  }\n\n  deleteRowHook(rowIdsToDelete) {\n    $.ajax({\n      method: \"POST\",\n      url: \"/Speaker/deleteSpeaker\",\n      data: JSON.stringify(rowIdsToDelete),\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {// TODO: Implement some undo function\n      }\n    }).catch(function (xhr, status, error) {\n      // TODO: Some form of error handling.\n      console.log(error);\n    });\n  }\n\n  beforeSaveHook(row, cellName, cellValue, done) {\n    let mockRow = { ...row\n    };\n    mockRow[cellName] = cellValue;\n    $.ajax({\n      method: \"POST\",\n      url: \"/Speaker/updateSpeaker\",\n      data: JSON.stringify(mockRow),\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        // TODO: Implement some undo function\n        done(true);\n      }\n    }).catch(function (xhr, status, error) {\n      // TODO: Some form of error handling.\n      console.log(error);\n      done(false);\n    });\n    return 1;\n  }\n\n  cannotBeEmptyValidator(value, row) {\n    const response = {\n      isValid: true,\n      notification: {\n        type: 'success',\n        msg: '',\n        title: ''\n      }\n    };\n\n    if (!value) {\n      response.isValid = false;\n      response.notification.type = 'error';\n      response.notification.msg = 'Speaker name must be inserted';\n      response.notification.title = 'Requested Value';\n    }\n\n    return response;\n  }\n\n  emailValidator(value, row) {\n    const response = {\n      isValid: true,\n      notification: {\n        type: 'success',\n        msg: '',\n        title: ''\n      }\n    };\n    const re = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (!String(value).match(re) && value != false) {\n      response.isValid = false;\n      response.notification.type = 'error';\n      response.notification.msg = 'Email entered was not valid';\n      response.notification.title = 'Invalid Entry';\n    }\n\n    return response;\n  }\n\n  phoneNumberValidator(value, row) {\n    const response = {\n      isValid: true,\n      notification: {\n        type: 'success',\n        msg: '',\n        title: ''\n      }\n    };\n    const re = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n\n    if (!String(value).match(re) && value != false) {\n      response.isValid = false;\n      response.notification.type = 'error';\n      response.notification.msg = 'Number entered was not valid';\n      response.notification.title = 'Invalid Entry';\n    }\n\n    return response;\n  } // create custom buttons and modal \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, \"Speakers\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, {\n      striped: true,\n      hover: true,\n      condensed: true,\n      data: this.state.data // pagination\n      ,\n      version: \"4\",\n      insertRow: true,\n      deleteRow: true,\n      selectRow: {\n        mode: 'checkbox'\n      },\n      options: this.tableProps,\n      cellEdit: this.cellEditProps,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      hidden: true,\n      hiddenOninsert: true,\n      autoValue: true,\n      isKey: true,\n      dataField: \"id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }, \"id\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"speakerName\",\n      editable: {\n        validator: this.cannotBeEmptyValidator\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, \"Speaker Name\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"email\",\n      editable: {\n        validator: this.emailValidator\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"everydayNumber\",\n      editable: {\n        validator: this.phoneNumberValidator\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }, \"Everyday Number\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"dayOfNumber\",\n      editable: {\n        validator: this.phoneNumberValidator\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }, \"Day Of Number\"))));\n  }\n\n}\n\nexport default Speakers;","map":{"version":3,"sources":["C:/Users/wangm1/comp4960-section1-black-team/comp4960-section1-black-team/src/client/src/pages/speakers/Speakers.js"],"names":["React","BootstrapTable","TableHeaderColumn","InsertButton","ExportCSVButton","DeleteButton","InsertModalHeader","EditButton","$","Speakers","Component","constructor","props","createCustomInsertButton","createCustomExportCSVButton","createCustomDeleteButton","createCustomModalHeader","tableProps","onAddRow","addRowHook","bind","afterDeleteRow","deleteRowHook","insertBtn","exportCSVBtn","deleteBtn","insertModalHeader","cellEditProps","mode","blurToSave","beforeSaveCell","beforeSaveHook","getData","state","data","ajax","method","url","type","contentType","success","response","setState","catch","xhr","status","error","console","log","row","id","JSON","stringify","push","rowIdsToDelete","cellName","cellValue","done","mockRow","cannotBeEmptyValidator","value","isValid","notification","msg","title","emailValidator","re","String","match","phoneNumberValidator","render","validator"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {BootstrapTable, TableHeaderColumn, InsertButton, ExportCSVButton, DeleteButton, InsertModalHeader, EditButton} from 'react-bootstrap-table';\r\nimport '../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport $ from 'jquery';\r\n\r\nclass Speakers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getData();\r\n        this.state = {\r\n            data: this.data\r\n        }\r\n    }\r\n\r\n    getData() {\r\n        return $.ajax({\r\n            method: \"GET\",\r\n            url: \"/Speaker/all\",\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                this.setState({\r\n                    data: response\r\n                });\r\n            }\r\n        }).catch(function (xhr, status, error) {\r\n            // TODO: Some form of error handling.\r\n            console.log(error);\r\n            this.setState({\r\n                data: []\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    addRowHook(row) {\r\n        const data = this.state.data || [];\r\n\r\n        // Clear our the id field since the backend will auto generate one for us\r\n        row.id = null;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/Speaker/addSpeaker\",\r\n            data: JSON.stringify(row),\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                data.push(response);\r\n                this.setState({\r\n                    data: data\r\n                });\r\n            }\r\n        }).catch(function (xhr, status, error) {\r\n            // TODO: Some form of error handling.\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    deleteRowHook(rowIdsToDelete) {\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/Speaker/deleteSpeaker\",\r\n            data: JSON.stringify(rowIdsToDelete),\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                // TODO: Implement some undo function\r\n            }\r\n        }).catch(function (xhr, status, error) {\r\n            // TODO: Some form of error handling.\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    beforeSaveHook(row, cellName, cellValue, done) {\r\n        let mockRow = {...row};\r\n        mockRow[cellName] = cellValue;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/Speaker/updateSpeaker\",\r\n            data: JSON.stringify(mockRow),\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                // TODO: Implement some undo function\r\n                done(true);\r\n            }\r\n        }).catch(function (xhr, status, error) {\r\n            // TODO: Some form of error handling.\r\n            console.log(error);\r\n            done(false);\r\n        });\r\n\r\n        return 1;\r\n    }\r\n\r\n    cannotBeEmptyValidator(value, row) {\r\n        const response = {isValid: true, notification: {type: 'success', msg: '', title: ''}};\r\n        if (!value) {\r\n            response.isValid = false;\r\n            response.notification.type = 'error';\r\n            response.notification.msg = 'Speaker name must be inserted';\r\n            response.notification.title = 'Requested Value';\r\n        }\r\n        return response;\r\n    }\r\n\r\n    emailValidator(value, row) {\r\n        const response = {isValid: true, notification: {type: 'success', msg: '', title: ''}};\r\n        const re = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        if (!(String(value).match(re)) && value != false) {\r\n            response.isValid = false;\r\n            response.notification.type = 'error';\r\n            response.notification.msg = 'Email entered was not valid';\r\n            response.notification.title = 'Invalid Entry';\r\n        }\r\n        return response;\r\n    }\r\n\r\n    phoneNumberValidator(value, row) {\r\n        const response = {isValid: true, notification: {type: 'success', msg: '', title: ''}};\r\n        const re = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\r\n        if (!(String(value).match(re)) && value != false) {\r\n            response.isValid = false;\r\n            response.notification.type = 'error';\r\n            response.notification.msg = 'Number entered was not valid';\r\n            response.notification.title = 'Invalid Entry';\r\n        }\r\n        return response;\r\n    }\r\n\r\n    // create custom buttons and modal \r\n    createCustomInsertButton = () => {\r\n      return (\r\n        <InsertButton\r\n          btnText='Insert Speaker'\r\n          btnContextual='btn-success'\r\n          className='add-speaker-btn'\r\n          />\r\n      );\r\n    }\r\n\r\n    createCustomExportCSVButton = () =>{\r\n      return (\r\n        <ExportCSVButton\r\n          btnText='Export to CSV'\r\n          btnContextual='btn-info'\r\n          className='export-speaker-btn'/>\r\n      );\r\n    }\r\n\r\n    createCustomDeleteButton = () =>{\r\n      return (\r\n        <DeleteButton\r\n          btnText='Delete Speaker'\r\n          btnContextual='btn-danger'\r\n          className='delete-speaker-btn'/>\r\n      );\r\n    }\r\n    \r\n\r\n    createCustomModalHeader = () => {\r\n      return (\r\n        <InsertModalHeader\r\n          className='speaker-modal-header'\r\n          title='Add Speaker'/>\r\n      );\r\n    } \r\n\r\n    tableProps = {\r\n        onAddRow: this.addRowHook.bind(this),\r\n        afterDeleteRow: this.deleteRowHook.bind(this),\r\n        insertBtn: this.createCustomInsertButton,\r\n        exportCSVBtn: this.createCustomExportCSVButton,\r\n        deleteBtn:this.createCustomDeleteButton,\r\n        insertModalHeader: this.createCustomModalHeader\r\n    };\r\n\r\n    cellEditProps = {\r\n        mode: 'click',\r\n        blurToSave: true,\r\n        beforeSaveCell: this.beforeSaveHook.bind(this)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h3>Speakers</h3>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <BootstrapTable striped hover condensed\r\n                                    data={this.state.data}\r\n                        // pagination\r\n                                    version='4'\r\n                                    insertRow\r\n                                    deleteRow\r\n                                    selectRow={{mode: 'checkbox'}}\r\n                                    options={this.tableProps}\r\n                                    cellEdit={this.cellEditProps}>\r\n                        <TableHeaderColumn hidden hiddenOninsert autoValue isKey dataField='id'>id</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='speakerName' editable={{validator: this.cannotBeEmptyValidator}}>Speaker\r\n                            Name</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='email' editable={{validator: this.emailValidator}}>Email</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='everydayNumber' editable={{validator: this.phoneNumberValidator}}>Everyday Number</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='dayOfNumber'editable={{validator: this.phoneNumberValidator}}>Day Of Number</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Speakers\r\n"]},"metadata":{},"sourceType":"module"}