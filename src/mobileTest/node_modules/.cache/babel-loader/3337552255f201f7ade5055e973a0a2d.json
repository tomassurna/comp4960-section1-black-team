{"ast":null,"code":"/*!\nFullCalendar Scheduler v5.3.1\nDocs & License: https://fullcalendar.io/scheduler\n(c) 2020 Adam Shaw\n*/\nimport { createRef, mapHash, createElement, DateComponent, memoize, createPlugin } from '@fullcalendar/common';\nimport premiumCommonPlugin from '@fullcalendar/premium-common';\nimport resourceCommonPlugin, { VResourceSplitter, VResourceJoiner, flattenResources, DEFAULT_RESOURCE_ORDER, ResourceDayHeader, DayResourceTableModel, ResourceDayTableModel } from '@fullcalendar/resource-common';\nimport dayGridPlugin, { DayTableSlicer, Table, TableView, buildDayTableModel } from '@fullcalendar/daygrid';\nimport { __extends, __assign } from 'tslib';\n\nvar ResourceDayTable =\n/** @class */\nfunction (_super) {\n  __extends(ResourceDayTable, _super);\n\n  function ResourceDayTable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.allowAcrossResources = false;\n    _this.splitter = new VResourceSplitter();\n    _this.slicers = {};\n    _this.joiner = new ResourceDayTableJoiner();\n    _this.tableRef = createRef();\n\n    _this.handleRootEl = function (rootEl) {\n      if (rootEl) {\n        _this.context.registerInteractiveComponent(_this, {\n          el: rootEl\n        });\n      } else {\n        _this.context.unregisterInteractiveComponent(_this);\n      }\n    };\n\n    return _this;\n  }\n\n  ResourceDayTable.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var resourceDayTableModel = props.resourceDayTableModel,\n        nextDayThreshold = props.nextDayThreshold,\n        dateProfile = props.dateProfile;\n    var splitProps = this.splitter.splitProps(props);\n    this.slicers = mapHash(splitProps, function (split, resourceId) {\n      return _this.slicers[resourceId] || new DayTableSlicer();\n    });\n    var slicedProps = mapHash(this.slicers, function (slicer, resourceId) {\n      return slicer.sliceProps(splitProps[resourceId], dateProfile, nextDayThreshold, context, resourceDayTableModel.dayTableModel);\n    });\n    this.allowAcrossResources = resourceDayTableModel.dayTableModel.colCnt === 1; // hack for EventResizing\n\n    return createElement(Table, __assign({\n      forPrint: props.forPrint,\n      ref: this.tableRef,\n      elRef: this.handleRootEl\n    }, this.joiner.joinProps(slicedProps, resourceDayTableModel), {\n      cells: resourceDayTableModel.cells,\n      dateProfile: dateProfile,\n      colGroupNode: props.colGroupNode,\n      tableMinWidth: props.tableMinWidth,\n      renderRowIntro: props.renderRowIntro,\n      dayMaxEvents: props.dayMaxEvents,\n      dayMaxEventRows: props.dayMaxEventRows,\n      showWeekNumbers: props.showWeekNumbers,\n      expandRows: props.expandRows,\n      headerAlignElRef: props.headerAlignElRef,\n      clientWidth: props.clientWidth,\n      clientHeight: props.clientHeight\n    }));\n  };\n\n  ResourceDayTable.prototype.prepareHits = function () {\n    this.tableRef.current.prepareHits();\n  };\n\n  ResourceDayTable.prototype.queryHit = function (positionLeft, positionTop) {\n    var rawHit = this.tableRef.current.positionToHit(positionLeft, positionTop);\n\n    if (rawHit) {\n      return {\n        component: this,\n        dateSpan: {\n          range: rawHit.dateSpan.range,\n          allDay: rawHit.dateSpan.allDay,\n          resourceId: this.props.resourceDayTableModel.cells[rawHit.row][rawHit.col].resource.id\n        },\n        dayEl: rawHit.dayEl,\n        rect: {\n          left: rawHit.relativeRect.left,\n          right: rawHit.relativeRect.right,\n          top: rawHit.relativeRect.top,\n          bottom: rawHit.relativeRect.bottom\n        },\n        layer: 0\n      };\n    }\n  };\n\n  return ResourceDayTable;\n}(DateComponent);\n\nvar ResourceDayTableJoiner =\n/** @class */\nfunction (_super) {\n  __extends(ResourceDayTableJoiner, _super);\n\n  function ResourceDayTableJoiner() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ResourceDayTableJoiner.prototype.transformSeg = function (seg, resourceDayTableModel, resourceI) {\n    var colRanges = resourceDayTableModel.computeColRanges(seg.firstCol, seg.lastCol, resourceI);\n    return colRanges.map(function (colRange) {\n      return __assign(__assign(__assign({}, seg), colRange), {\n        isStart: seg.isStart && colRange.isStart,\n        isEnd: seg.isEnd && colRange.isEnd\n      });\n    });\n  };\n\n  return ResourceDayTableJoiner;\n}(VResourceJoiner);\n\nvar ResourceDayTableView =\n/** @class */\nfunction (_super) {\n  __extends(ResourceDayTableView, _super);\n\n  function ResourceDayTableView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.flattenResources = memoize(flattenResources);\n    _this.buildResourceDayTableModel = memoize(buildResourceDayTableModel);\n    _this.headerRef = createRef();\n    _this.tableRef = createRef();\n    return _this;\n  }\n\n  ResourceDayTableView.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var options = context.options;\n    var resourceOrderSpecs = options.resourceOrder || DEFAULT_RESOURCE_ORDER;\n    var resources = this.flattenResources(props.resourceStore, resourceOrderSpecs);\n    var resourceDayTableModel = this.buildResourceDayTableModel(props.dateProfile, context.dateProfileGenerator, resources, options.datesAboveResources, context);\n    var headerContent = options.dayHeaders && createElement(ResourceDayHeader, {\n      ref: this.headerRef,\n      resources: resources,\n      dateProfile: props.dateProfile,\n      dates: resourceDayTableModel.dayTableModel.headerDates,\n      datesRepDistinctDays: true\n    });\n\n    var bodyContent = function (contentArg) {\n      return createElement(ResourceDayTable, {\n        ref: _this.tableRef,\n        dateProfile: props.dateProfile,\n        resourceDayTableModel: resourceDayTableModel,\n        businessHours: props.businessHours,\n        eventStore: props.eventStore,\n        eventUiBases: props.eventUiBases,\n        dateSelection: props.dateSelection,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        nextDayThreshold: options.nextDayThreshold,\n        tableMinWidth: contentArg.tableMinWidth,\n        colGroupNode: contentArg.tableColGroupNode,\n        dayMaxEvents: options.dayMaxEvents,\n        dayMaxEventRows: options.dayMaxEventRows,\n        showWeekNumbers: options.weekNumbers,\n        expandRows: !props.isHeightAuto,\n        headerAlignElRef: _this.headerElRef,\n        clientWidth: contentArg.clientWidth,\n        clientHeight: contentArg.clientHeight,\n        forPrint: props.forPrint\n      });\n    };\n\n    return options.dayMinWidth ? this.renderHScrollLayout(headerContent, bodyContent, resourceDayTableModel.colCnt, options.dayMinWidth) : this.renderSimpleLayout(headerContent, bodyContent);\n  };\n\n  return ResourceDayTableView;\n}(TableView);\n\nfunction buildResourceDayTableModel(dateProfile, dateProfileGenerator, resources, datesAboveResources, context) {\n  var dayTable = buildDayTableModel(dateProfile, dateProfileGenerator);\n  return datesAboveResources ? new DayResourceTableModel(dayTable, resources, context) : new ResourceDayTableModel(dayTable, resources, context);\n}\n\nvar main = createPlugin({\n  deps: [premiumCommonPlugin, resourceCommonPlugin, dayGridPlugin],\n  initialView: 'resourceDayGridDay',\n  views: {\n    resourceDayGrid: {\n      type: 'dayGrid',\n      component: ResourceDayTableView,\n      needsResourceData: true\n    },\n    resourceDayGridDay: {\n      type: 'resourceDayGrid',\n      duration: {\n        days: 1\n      }\n    },\n    resourceDayGridWeek: {\n      type: 'resourceDayGrid',\n      duration: {\n        weeks: 1\n      }\n    },\n    resourceDayGridMonth: {\n      type: 'resourceDayGrid',\n      duration: {\n        months: 1\n      },\n      // TODO: wish we didn't have to C&P from dayGrid's file\n      monthMode: true,\n      fixedWeekCount: true\n    }\n  }\n});\nexport default main;\nexport { ResourceDayTable, ResourceDayTableView };","map":{"version":3,"sources":["src/ResourceDayTable.tsx","src/ResourceDayTableView.tsx","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  createElement, createRef, VNode,\n  mapHash, Hit, DateSpan, DateComponent, EventStore, EventUiHash, EventInteractionState, Duration, RefObject, CssDimValue, DateProfile\n} from '@fullcalendar/common'\nimport { DayTableSlicer, Table, TableSeg } from '@fullcalendar/daygrid'\nimport { AbstractResourceDayTableModel, VResourceSplitter, VResourceJoiner } from '@fullcalendar/resource-common'\n\nexport interface ResourceDayTableProps {\n  dateProfile: DateProfile\n  resourceDayTableModel: AbstractResourceDayTableModel\n  businessHours: EventStore\n  eventStore: EventStore\n  eventUiBases: EventUiHash\n  dateSelection: DateSpan | null\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  nextDayThreshold: Duration\n  tableMinWidth: CssDimValue\n  colGroupNode: VNode\n  renderRowIntro?: () => VNode\n  dayMaxEvents: boolean | number\n  dayMaxEventRows: boolean | number\n  expandRows: boolean\n  showWeekNumbers: boolean\n  headerAlignElRef?: RefObject<HTMLElement> // for more popover alignment\n  clientWidth: number | null\n  clientHeight: number | null\n  forPrint: boolean\n}\n\nexport class ResourceDayTable extends DateComponent<ResourceDayTableProps> {\n\n  allowAcrossResources = false\n\n  private splitter = new VResourceSplitter()\n  private slicers: { [resourceId: string]: DayTableSlicer } = {}\n  private joiner = new ResourceDayTableJoiner()\n  private tableRef = createRef<Table>()\n\n\n  render() {\n    let { props, context } = this\n    let { resourceDayTableModel, nextDayThreshold, dateProfile } = props\n\n    let splitProps = this.splitter.splitProps(props)\n\n    this.slicers = mapHash(splitProps, (split, resourceId) => {\n      return this.slicers[resourceId] || new DayTableSlicer()\n    })\n\n    let slicedProps = mapHash(this.slicers, (slicer, resourceId) => {\n      return slicer.sliceProps(\n        splitProps[resourceId],\n        dateProfile,\n        nextDayThreshold,\n        context,\n        resourceDayTableModel.dayTableModel\n      )\n    })\n\n    this.allowAcrossResources = resourceDayTableModel.dayTableModel.colCnt === 1 // hack for EventResizing\n\n    return (\n      <Table\n        forPrint={props.forPrint}\n        ref={this.tableRef}\n        elRef={this.handleRootEl}\n        {...this.joiner.joinProps(slicedProps, resourceDayTableModel)}\n        cells={resourceDayTableModel.cells}\n        dateProfile={dateProfile}\n        colGroupNode={props.colGroupNode}\n        tableMinWidth={props.tableMinWidth}\n        renderRowIntro={props.renderRowIntro}\n        dayMaxEvents={props.dayMaxEvents}\n        dayMaxEventRows={props.dayMaxEventRows}\n        showWeekNumbers={props.showWeekNumbers}\n        expandRows={props.expandRows}\n        headerAlignElRef={props.headerAlignElRef}\n        clientWidth={props.clientWidth}\n        clientHeight={props.clientHeight}\n      />\n    )\n  }\n\n\n  handleRootEl = (rootEl: HTMLElement | null) => {\n    if (rootEl) {\n      this.context.registerInteractiveComponent(this, { el: rootEl })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n\n  prepareHits() {\n    this.tableRef.current.prepareHits()\n  }\n\n\n  queryHit(positionLeft: number, positionTop: number): Hit {\n    let rawHit = this.tableRef.current.positionToHit(positionLeft, positionTop)\n\n    if (rawHit) {\n      return {\n        component: this,\n        dateSpan: {\n          range: rawHit.dateSpan.range,\n          allDay: rawHit.dateSpan.allDay,\n          resourceId: this.props.resourceDayTableModel.cells[rawHit.row][rawHit.col].resource.id\n        },\n        dayEl: rawHit.dayEl,\n        rect: {\n          left: rawHit.relativeRect.left,\n          right: rawHit.relativeRect.right,\n          top: rawHit.relativeRect.top,\n          bottom: rawHit.relativeRect.bottom\n        },\n        layer: 0\n      }\n    }\n  }\n\n}\n\n\nclass ResourceDayTableJoiner extends VResourceJoiner<TableSeg> {\n\n  transformSeg(seg: TableSeg, resourceDayTableModel: AbstractResourceDayTableModel, resourceI: number): TableSeg[] {\n    let colRanges = resourceDayTableModel.computeColRanges(seg.firstCol, seg.lastCol, resourceI)\n\n    return colRanges.map(function(colRange) {\n      return {\n        ...seg,\n        ...colRange,\n        isStart: seg.isStart && colRange.isStart,\n        isEnd: seg.isEnd && colRange.isEnd\n      }\n    })\n  }\n\n}\n","import {\n  createElement, createRef, DateProfileGenerator, memoize, DateProfile, ChunkContentCallbackArgs, CalendarContext\n} from '@fullcalendar/common'\nimport { TableView, buildDayTableModel } from '@fullcalendar/daygrid'\nimport {\n  ResourceDayHeader, ResourceDayTableModel, DayResourceTableModel, ResourceViewProps,\n  Resource, flattenResources, DEFAULT_RESOURCE_ORDER\n} from '@fullcalendar/resource-common'\nimport { ResourceDayTable } from './ResourceDayTable'\n\n\nexport class ResourceDayTableView extends TableView {\n\n  props: ResourceViewProps\n\n  private flattenResources = memoize(flattenResources)\n  private buildResourceDayTableModel = memoize(buildResourceDayTableModel)\n  private headerRef = createRef<ResourceDayHeader>()\n  private tableRef = createRef<ResourceDayTable>()\n\n\n  render() {\n    let { props, context } = this\n    let { options } = context\n\n    let resourceOrderSpecs = options.resourceOrder || DEFAULT_RESOURCE_ORDER\n    let resources = this.flattenResources(props.resourceStore, resourceOrderSpecs)\n    let resourceDayTableModel = this.buildResourceDayTableModel(\n      props.dateProfile,\n      context.dateProfileGenerator,\n      resources,\n      options.datesAboveResources,\n      context\n    )\n\n    let headerContent = options.dayHeaders &&\n      <ResourceDayHeader\n        ref={this.headerRef}\n        resources={resources}\n        dateProfile={props.dateProfile}\n        dates={resourceDayTableModel.dayTableModel.headerDates}\n        datesRepDistinctDays={true}\n      />\n\n    let bodyContent = (contentArg: ChunkContentCallbackArgs) => (\n      <ResourceDayTable\n        ref={this.tableRef}\n        dateProfile={props.dateProfile}\n        resourceDayTableModel={resourceDayTableModel}\n        businessHours={props.businessHours}\n        eventStore={props.eventStore}\n        eventUiBases={props.eventUiBases}\n        dateSelection={props.dateSelection}\n        eventSelection={props.eventSelection}\n        eventDrag={props.eventDrag}\n        eventResize={props.eventResize}\n        nextDayThreshold={options.nextDayThreshold}\n        tableMinWidth={contentArg.tableMinWidth}\n        colGroupNode={contentArg.tableColGroupNode}\n        dayMaxEvents={options.dayMaxEvents}\n        dayMaxEventRows={options.dayMaxEventRows}\n        showWeekNumbers={options.weekNumbers}\n        expandRows={!props.isHeightAuto}\n        headerAlignElRef={this.headerElRef}\n        clientWidth={contentArg.clientWidth}\n        clientHeight={contentArg.clientHeight}\n        forPrint={props.forPrint}\n      />\n    )\n\n    return options.dayMinWidth\n      ? this.renderHScrollLayout(headerContent, bodyContent, resourceDayTableModel.colCnt, options.dayMinWidth)\n      : this.renderSimpleLayout(headerContent, bodyContent)\n  }\n\n}\n\n\nfunction buildResourceDayTableModel(\n  dateProfile: DateProfile,\n  dateProfileGenerator: DateProfileGenerator,\n  resources: Resource[],\n  datesAboveResources: boolean,\n  context: CalendarContext\n) {\n  let dayTable = buildDayTableModel(dateProfile, dateProfileGenerator)\n\n  return datesAboveResources ?\n    new DayResourceTableModel(dayTable, resources, context) :\n    new ResourceDayTableModel(dayTable, resources, context)\n}\n","import { createPlugin } from '@fullcalendar/common'\nimport premiumCommonPlugin from '@fullcalendar/premium-common'\nimport '@fullcalendar/premium-common' // ensure ambient declarations\nimport resourceCommonPlugin from '@fullcalendar/resource-common'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport { ResourceDayTableView } from './ResourceDayTableView'\n\nexport { ResourceDayTableView }\nexport { ResourceDayTable } from './ResourceDayTable'\n\nexport default createPlugin({\n  deps: [\n    premiumCommonPlugin,\n    resourceCommonPlugin,\n    dayGridPlugin\n  ],\n  initialView: 'resourceDayGridDay',\n  views: {\n\n    resourceDayGrid: {\n      type: 'dayGrid', // will inherit this configuration\n      component: ResourceDayTableView,\n      needsResourceData: true\n    },\n\n    resourceDayGridDay: {\n      type: 'resourceDayGrid',\n      duration: { days: 1 }\n    },\n\n    resourceDayGridWeek: {\n      type: 'resourceDayGrid',\n      duration: { weeks: 1 }\n    },\n\n    resourceDayGridMonth: {\n      type: 'resourceDayGrid',\n      duration: { months: 1 },\n\n      // TODO: wish we didn't have to C&P from dayGrid's file\n      monthMode: true, // a hidden option!?\n      fixedWeekCount: true\n    }\n\n  }\n})\n"]},"metadata":{},"sourceType":"module"}