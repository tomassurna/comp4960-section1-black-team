{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wangm1\\\\comp4960-section1-black-team\\\\comp4960-section1-black-team\\\\src\\\\client\\\\src\\\\pages\\\\sessions\\\\Sessions.js\";\nimport React from \"react\";\nimport { BootstrapTable, ButtonGroup, DeleteButton, InsertButton, InsertModalFooter, InsertModalHeader, SearchField, TableHeaderColumn } from \"react-bootstrap-table\";\nimport \"../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\nimport $ from \"jquery\";\nimport Alert from \"react-s-alert\";\nimport DropDownEditor from \"./DropDownEditor\";\nimport { animals, colors, names, uniqueNamesGenerator } from \"unique-names-generator\";\n\nclass Sessions extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.createCustomInsertButton = () => {\n      return /*#__PURE__*/React.createElement(InsertButton, {\n        btnText: \"Insert Session\",\n        btnContextual: \"btn-success\",\n        className: \"add-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }\n      });\n    };\n\n    this.createCustomDeleteButton = () => {\n      return /*#__PURE__*/React.createElement(DeleteButton, {\n        btnText: \"Delete Session\",\n        btnContextual: \"btn-danger\",\n        className: \"delete-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }\n      });\n    };\n\n    this.createCustomModalHeader = () => {\n      return /*#__PURE__*/React.createElement(InsertModalHeader, {\n        className: \"modal-header\",\n        title: \"Add Session\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 16\n        }\n      });\n    };\n\n    this.createCustomModalFooter = closeModal => {\n      return /*#__PURE__*/React.createElement(InsertModalFooter, {\n        className: \"modal-footer\",\n        closeBtnContextual: \"btn-light\",\n        saveBtnContextual: \"btn-success\",\n        closeBtnClass: \"modal-close-btn\",\n        saveBtnClass: \"modal-save-btn\",\n        onModalClose: () => this.handleModalClose(closeModal),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }\n      });\n    };\n\n    this.createCustomButtonGroup = props => {\n      return /*#__PURE__*/React.createElement(ButtonGroup, {\n        sizeClass: \"btn-group-md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, props.showSelectedOnlyBtn, props.insertBtn, props.deleteBtn, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `btn btn-info edit-mode-btn`,\n        onClick: () => this.setState({\n          editMode: !this.state.editMode\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 17\n        }\n      }, this.state.editMode ? \"Exit Edit Mode\" : \"Edit Mode\"), this.state.deletedRows.length > 0 ? /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `btn btn-warning undo-btn`,\n        onClick: this.onUndo.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }\n      }, \"Undo Delete\") : null, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `btn btn-info edit-mode-btn`,\n        onClick: this.generateData.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 17\n        }\n      }, \"Generate Test Data\"));\n    };\n\n    this.createCustomSearchField = () => {\n      return /*#__PURE__*/React.createElement(SearchField, {\n        className: \"search-field\",\n        style: {\n          height: 40,\n          fontSize: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }\n      });\n    };\n\n    this.customRoomField = (column, attr, editorClass, ignoreEditable) => {\n      return /*#__PURE__*/React.createElement(\"select\", Object.assign({\n        className: `${editorClass}`\n      }, attr, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        key: null,\n        value: null,\n        selected: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 17\n        }\n      }, \"Please Choose a Room...\"), this.state.rooms.map(room => /*#__PURE__*/React.createElement(\"option\", {\n        key: room[\"name\"],\n        value: room[\"id\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }\n      }, room[\"name\"])));\n    };\n\n    this.customSpeakerField = (column, attr, editorClass, ignoreEditable) => {\n      return /*#__PURE__*/React.createElement(\"select\", Object.assign({\n        className: `${editorClass}`\n      }, attr, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        key: null,\n        value: null,\n        selected: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 17\n        }\n      }, \"Please Choose a Speaker...\"), this.state.speakers.map(speaker => /*#__PURE__*/React.createElement(\"option\", {\n        key: speaker[\"email\"],\n        value: speaker[\"id\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }\n      }, speaker[\"speakerName\"])));\n    };\n\n    this.customTimeSlotField = (column, attr, editorClass, ignoreEditable) => {\n      return /*#__PURE__*/React.createElement(\"select\", Object.assign({\n        className: `${editorClass}`\n      }, attr, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        key: null,\n        value: null,\n        selected: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 17\n        }\n      }, \"Please Choose a TimeSlot...\"), this.state.timeSlots.map(timeSlot => /*#__PURE__*/React.createElement(\"option\", {\n        key: timeSlot[\"startTime\"] + \" - \" + timeSlot[\"endTime\"],\n        value: timeSlot[\"id\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 21\n        }\n      }, timeSlot[\"startTime\"] + \" - \" + timeSlot[\"endTime\"])));\n    };\n\n    this.tableProps = {\n      onAddRow: this.addRowHook.bind(this),\n      onDeleteRow: this.deleteRowHook.bind(this),\n      insertBtn: this.createCustomInsertButton,\n      deleteBtn: this.createCustomDeleteButton,\n      insertModalHeader: this.createCustomModalHeader,\n      insertModalFooter: this.createCustomModalFooter,\n      btnGroup: this.createCustomButtonGroup,\n      searchField: this.createCustomSearchField,\n      clearSearch: true,\n      handleConfirmDeleteRow: this.onConfirmDeleteRow.bind(this)\n    };\n    this.cellEditProps = {\n      mode: \"click\",\n      blurToSave: true,\n      beforeSaveCell: this.beforeSaveHook.bind(this)\n    };\n\n    this.createDropDownEditor = (onUpdate, props) => /*#__PURE__*/React.createElement(DropDownEditor, Object.assign({\n      onUpdate: onUpdate\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }\n    }));\n\n    this.getData();\n    this.state = {\n      data: [],\n      editMode: false,\n      deletedRows: [],\n      rooms: [],\n      speakers: [],\n      timeSlots: []\n    };\n  }\n\n  getData() {\n    $.ajax({\n      method: \"GET\",\n      url: \"/Session/all\",\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        this.setState({\n          data: response\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Unable to load session table data.\", {\n        position: \"top-right\",\n        effect: \"stackslide\",\n        timeout: 2000\n      });\n      this.setState({\n        data: []\n      });\n    });\n    $.ajax({\n      method: \"GET\",\n      url: \"/Room/all\",\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        this.setState({\n          rooms: response\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Unable to load room table data.\", {\n        position: \"top-right\",\n        effect: \"stackslide\",\n        timeout: 2000\n      });\n      this.setState({\n        rooms: []\n      });\n    });\n    $.ajax({\n      method: \"GET\",\n      url: \"/Speaker/all\",\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        this.setState({\n          speakers: response\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Unable to load speaker table data.\", {\n        position: \"top-right\",\n        effect: \"stackslide\",\n        timeout: 2000\n      });\n      this.setState({\n        speakers: []\n      });\n    });\n    $.ajax({\n      method: \"GET\",\n      url: \"/TimeSlot/all\",\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        this.setState({\n          timeSlots: response\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Unable to load time slot table data.\", {\n        position: \"top-right\",\n        effect: \"stackslide\",\n        timeout: 2000\n      });\n      this.setState({\n        timeSlots: []\n      });\n    });\n  }\n\n  addRowHook(row) {\n    // Clear our the id field since the backend will auto generate one for us\n    row.id = null;\n    row.isNew = true;\n    row.room = this.state.rooms.find(room => room[\"id\"] === row.room) || null;\n    row.speaker = this.state.speakers.find(speaker => speaker[\"id\"] === row.speaker) || null;\n    row.timeSlot = this.state.timeSlots.find(timeSlot => timeSlot[\"id\"] === row.timeSlot) || null;\n    this.addRowAjaxCall(row);\n  } // We use this call here when we do not want to delete the row id\n\n\n  addRowAjaxCall(row) {\n    const data = this.state.data;\n    $.ajax({\n      method: \"POST\",\n      url: \"/Session/saveSession\",\n      data: JSON.stringify(row),\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        data.push(response);\n        this.setState({\n          data: data\n        });\n        Alert.success(\"Session added.\", {\n          position: \"top-right\",\n          effect: \"stackslide\",\n          timeout: 2000\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Error saving row.\", {\n        position: \"top-right\",\n        effect: \"stackslide\",\n        timeout: 2000\n      });\n    });\n  }\n\n  deleteRowHook(rowIdsToDelete) {\n    const data = this.state.data;\n    const rowsToDelete = data.filter(row => rowIdsToDelete.includes(row.id));\n    const currentDeletedRows = this.state.deletedRows;\n    currentDeletedRows.push(rowsToDelete);\n    this.setState({\n      deletedRows: currentDeletedRows\n    });\n    $.ajax({\n      method: \"POST\",\n      url: \"/Session/deleteSession\",\n      data: JSON.stringify(rowIdsToDelete),\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        this.setState({\n          data: data.filter(row => !rowIdsToDelete.includes(row.id))\n        });\n        Alert.success(\"Row(s) deleted.\", {\n          position: \"top-right\",\n          effect: \"stackslide\",\n          timeout: 2000\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Error deleting row(s).\", {\n        position: \"top-right\",\n        effect: \"stackslide\",\n        timeout: 2000\n      });\n    });\n  }\n\n  beforeSaveHook(row, cellName, cellValue, done) {\n    let mockRow = { ...row\n    };\n    mockRow[cellName] = !!cellValue ? cellValue : null; // if nothing changes then void backend call\n\n    if (row[cellName] === mockRow[cellName]) {\n      return true;\n    }\n\n    $.ajax({\n      method: \"POST\",\n      url: \"/Session/saveSession\",\n      data: JSON.stringify(mockRow),\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        Alert.success(\"Row updated.\", {\n          position: \"top-right\",\n          effect: \"stackslide\",\n          timeout: 2000\n        });\n        done(true);\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Error saving row.\", {\n        position: \"top-right\",\n        effect: \"stackslide\",\n        timeout: 2000\n      });\n      done(false);\n    });\n    return 1;\n  }\n\n  onConfirmDeleteRow(next, dropRowKeys) {\n    next();\n  }\n\n  onUndo() {\n    // When we undo, add back the deleted rows\n    const deletedRows = this.state.deletedRows.pop();\n    deletedRows.forEach(row => this.addRowAjaxCall(row));\n  }\n\n  cannotBeEmptyValidator(value, row) {\n    const response = {\n      isValid: true,\n      notification: {\n        type: \"success\",\n        msg: \"\",\n        title: \"\"\n      }\n    };\n\n    if (!value) {\n      response.isValid = false;\n      response.notification.type = \"error\";\n      response.notification.msg = \"Value must be inserted\";\n      response.notification.title = \"Requested Value\";\n    }\n\n    return response;\n  }\n\n  roomFormatter(value) {\n    return !!value ? value[\"name\"] : \"\";\n  }\n\n  speakerFormatter(value) {\n    return !!value ? value[\"speakerName\"] : \"\";\n  }\n\n  timeSlotFormatter(value) {\n    return !!value ? value[\"startTime\"] + \" - \" + value[\"endTime\"] : \"\";\n  }\n\n  handleModalClose(closeModal) {\n    closeModal();\n  }\n\n  generateData() {\n    for (let i = 0; i < 10; i++) {\n      this.addRowHook({\n        sessionTitle: uniqueNamesGenerator({\n          dictionaries: [names, colors, animals],\n          length: 1\n        }),\n        room: this.state.rooms[Math.floor(Math.random() * Math.floor(this.state.rooms.length))][\"id\"],\n        speaker: this.state.speakers[Math.floor(Math.random() * Math.floor(this.state.speakers.length))][\"id\"],\n        timeSlot: this.state.timeSlots[Math.floor(Math.random() * Math.floor(this.state.timeSlots.length))][\"id\"]\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 25\n      }\n    }, \"Sessions\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, {\n      hover: true,\n      condensed: true,\n      data: this.state.data,\n      search: true,\n      version: \"4\",\n      insertRow: true,\n      deleteRow: true,\n      selectRow: {\n        mode: \"checkbox\"\n      },\n      options: this.tableProps,\n      cellEdit: this.state.editMode ? this.cellEditProps : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      hidden: true,\n      hiddenOninsert: true,\n      autoValue: true,\n      isKey: true,\n      dataField: \"id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 25\n      }\n    }, \"id\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"sessionTitle\",\n      editable: {\n        validator: this.cannotBeEmptyValidator\n      },\n      dataSort: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 25\n      }\n    }, \"Session Title\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"room\",\n      dataFormat: this.roomFormatter,\n      editable: {\n        type: \"select\",\n        options: {\n          values: this.state.rooms\n        }\n      },\n      customEditor: {\n        getElement: this.createDropDownEditor,\n        customEditorParameters: {\n          data: this.state.rooms,\n          getDisplayName: room => room[\"name\"]\n        }\n      },\n      customInsertEditor: {\n        getElement: this.customRoomField\n      },\n      dataSort: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 25\n      }\n    }, \"Room\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"speaker\",\n      dataFormat: this.speakerFormatter,\n      editable: {\n        type: \"select\",\n        options: {\n          values: this.state.speakers\n        }\n      },\n      customEditor: {\n        getElement: this.createDropDownEditor,\n        customEditorParameters: {\n          data: this.state.speakers,\n          getDisplayName: speaker => speaker[\"speakerName\"]\n        }\n      },\n      customInsertEditor: {\n        getElement: this.customSpeakerField\n      },\n      dataSort: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 25\n      }\n    }, \"Speaker\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"timeSlot\",\n      dataFormat: this.timeSlotFormatter,\n      customEditor: {\n        getElement: this.createDropDownEditor,\n        customEditorParameters: {\n          data: this.state.timeSlots,\n          getDisplayName: timeSlot => timeSlot[\"startTime\"] + \" - \" + timeSlot[\"endTime\"]\n        }\n      },\n      customInsertEditor: {\n        getElement: this.customTimeSlotField\n      },\n      dataSort: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 25\n      }\n    }, \"Time Slot\"))));\n  }\n\n}\n\nexport default Sessions;","map":{"version":3,"sources":["C:/Users/wangm1/comp4960-section1-black-team/comp4960-section1-black-team/src/client/src/pages/sessions/Sessions.js"],"names":["React","BootstrapTable","ButtonGroup","DeleteButton","InsertButton","InsertModalFooter","InsertModalHeader","SearchField","TableHeaderColumn","$","Alert","DropDownEditor","animals","colors","names","uniqueNamesGenerator","Sessions","Component","constructor","props","createCustomInsertButton","createCustomDeleteButton","createCustomModalHeader","createCustomModalFooter","closeModal","handleModalClose","createCustomButtonGroup","showSelectedOnlyBtn","insertBtn","deleteBtn","setState","editMode","state","deletedRows","length","onUndo","bind","generateData","createCustomSearchField","height","fontSize","customRoomField","column","attr","editorClass","ignoreEditable","rooms","map","room","customSpeakerField","speakers","speaker","customTimeSlotField","timeSlots","timeSlot","tableProps","onAddRow","addRowHook","onDeleteRow","deleteRowHook","insertModalHeader","insertModalFooter","btnGroup","searchField","clearSearch","handleConfirmDeleteRow","onConfirmDeleteRow","cellEditProps","mode","blurToSave","beforeSaveCell","beforeSaveHook","createDropDownEditor","onUpdate","getData","data","ajax","method","url","type","contentType","success","response","catch","xhr","status","error","position","effect","timeout","row","id","isNew","find","addRowAjaxCall","JSON","stringify","push","rowIdsToDelete","rowsToDelete","filter","includes","currentDeletedRows","cellName","cellValue","done","mockRow","next","dropRowKeys","pop","forEach","cannotBeEmptyValidator","value","isValid","notification","msg","title","roomFormatter","speakerFormatter","timeSlotFormatter","i","sessionTitle","dictionaries","Math","floor","random","render","validator","options","values","getElement","customEditorParameters","getDisplayName"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n    BootstrapTable,\r\n    ButtonGroup,\r\n    DeleteButton,\r\n    InsertButton,\r\n    InsertModalFooter,\r\n    InsertModalHeader,\r\n    SearchField,\r\n    TableHeaderColumn,\r\n} from \"react-bootstrap-table\";\r\nimport \"../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css\";\r\nimport $ from \"jquery\";\r\nimport Alert from \"react-s-alert\";\r\nimport DropDownEditor from \"./DropDownEditor\";\r\nimport {animals, colors, names, uniqueNamesGenerator} from \"unique-names-generator\";\r\n\r\nclass Sessions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getData();\r\n        this.state = {\r\n            data: [],\r\n            editMode: false,\r\n            deletedRows: [],\r\n            rooms: [],\r\n            speakers: [],\r\n            timeSlots: [],\r\n        };\r\n    }\r\n\r\n    getData() {\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/Session/all\",\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                this.setState({\r\n                    data: response,\r\n                });\r\n            },\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Unable to load session table data.\", {\r\n                position: \"top-right\",\r\n                effect: \"stackslide\",\r\n                timeout: 2000,\r\n            });\r\n\r\n            this.setState({\r\n                data: [],\r\n            });\r\n        });\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/Room/all\",\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                this.setState({\r\n                    rooms: response,\r\n                });\r\n            },\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Unable to load room table data.\", {\r\n                position: \"top-right\",\r\n                effect: \"stackslide\",\r\n                timeout: 2000,\r\n            });\r\n\r\n            this.setState({\r\n                rooms: [],\r\n            });\r\n        });\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/Speaker/all\",\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                this.setState({\r\n                    speakers: response,\r\n                });\r\n            },\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Unable to load speaker table data.\", {\r\n                position: \"top-right\",\r\n                effect: \"stackslide\",\r\n                timeout: 2000,\r\n            });\r\n\r\n            this.setState({\r\n                speakers: [],\r\n            });\r\n        });\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/TimeSlot/all\",\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                this.setState({\r\n                    timeSlots: response,\r\n                });\r\n            },\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Unable to load time slot table data.\", {\r\n                position: \"top-right\",\r\n                effect: \"stackslide\",\r\n                timeout: 2000,\r\n            });\r\n\r\n            this.setState({\r\n                timeSlots: [],\r\n            });\r\n        });\r\n    }\r\n\r\n    addRowHook(row) {\r\n        // Clear our the id field since the backend will auto generate one for us\r\n        row.id = null;\r\n        row.isNew = true;\r\n\r\n        row.room = this.state.rooms.find((room) => room[\"id\"] === row.room) || null;\r\n        row.speaker =\r\n            this.state.speakers.find((speaker) => speaker[\"id\"] === row.speaker) ||\r\n            null;\r\n        row.timeSlot =\r\n            this.state.timeSlots.find(\r\n                (timeSlot) => timeSlot[\"id\"] === row.timeSlot\r\n            ) || null;\r\n\r\n        this.addRowAjaxCall(row);\r\n    }\r\n\r\n    // We use this call here when we do not want to delete the row id\r\n    addRowAjaxCall(row) {\r\n        const data = this.state.data;\r\n\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/Session/saveSession\",\r\n            data: JSON.stringify(row),\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                data.push(response);\r\n                this.setState({\r\n                    data: data,\r\n                });\r\n                Alert.success(\"Session added.\", {\r\n                    position: \"top-right\",\r\n                    effect: \"stackslide\",\r\n                    timeout: 2000,\r\n                });\r\n            },\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Error saving row.\", {\r\n                position: \"top-right\",\r\n                effect: \"stackslide\",\r\n                timeout: 2000,\r\n            });\r\n        });\r\n    }\r\n\r\n    deleteRowHook(rowIdsToDelete) {\r\n        const data = this.state.data;\r\n        const rowsToDelete = data.filter((row) => rowIdsToDelete.includes(row.id));\r\n\r\n        const currentDeletedRows = this.state.deletedRows;\r\n        currentDeletedRows.push(rowsToDelete);\r\n\r\n        this.setState({deletedRows: currentDeletedRows});\r\n\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/Session/deleteSession\",\r\n            data: JSON.stringify(rowIdsToDelete),\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                this.setState({\r\n                    data: data.filter((row) => !rowIdsToDelete.includes(row.id)),\r\n                });\r\n\r\n                Alert.success(\"Row(s) deleted.\", {\r\n                    position: \"top-right\",\r\n                    effect: \"stackslide\",\r\n                    timeout: 2000,\r\n                });\r\n            },\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Error deleting row(s).\", {\r\n                position: \"top-right\",\r\n                effect: \"stackslide\",\r\n                timeout: 2000,\r\n            });\r\n        });\r\n    }\r\n\r\n    beforeSaveHook(row, cellName, cellValue, done) {\r\n        let mockRow = {...row};\r\n        mockRow[cellName] = !!cellValue ? cellValue : null;\r\n\r\n        // if nothing changes then void backend call\r\n        if (row[cellName] === mockRow[cellName]) {\r\n            return true;\r\n        }\r\n\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/Session/saveSession\",\r\n            data: JSON.stringify(mockRow),\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                Alert.success(\"Row updated.\", {\r\n                    position: \"top-right\",\r\n                    effect: \"stackslide\",\r\n                    timeout: 2000,\r\n                });\r\n                done(true);\r\n            },\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Error saving row.\", {\r\n                position: \"top-right\",\r\n                effect: \"stackslide\",\r\n                timeout: 2000,\r\n            });\r\n            done(false);\r\n        });\r\n\r\n        return 1;\r\n    }\r\n\r\n    onConfirmDeleteRow(next, dropRowKeys) {\r\n        next();\r\n    }\r\n\r\n    onUndo() {\r\n        // When we undo, add back the deleted rows\r\n        const deletedRows = this.state.deletedRows.pop();\r\n        deletedRows.forEach((row) => this.addRowAjaxCall(row));\r\n    }\r\n\r\n    cannotBeEmptyValidator(value, row) {\r\n        const response = {\r\n            isValid: true,\r\n            notification: {type: \"success\", msg: \"\", title: \"\"},\r\n        };\r\n        if (!value) {\r\n            response.isValid = false;\r\n            response.notification.type = \"error\";\r\n            response.notification.msg = \"Value must be inserted\";\r\n            response.notification.title = \"Requested Value\";\r\n        }\r\n        return response;\r\n    }\r\n\r\n    roomFormatter(value) {\r\n        return !!value ? value[\"name\"] : \"\";\r\n    }\r\n\r\n    speakerFormatter(value) {\r\n        return !!value ? value[\"speakerName\"] : \"\";\r\n    }\r\n\r\n    timeSlotFormatter(value) {\r\n        return !!value ? value[\"startTime\"] + \" - \" + value[\"endTime\"] : \"\";\r\n    }\r\n\r\n    createCustomInsertButton = () => {\r\n        return (\r\n            <InsertButton\r\n                btnText=\"Insert Session\"\r\n                btnContextual=\"btn-success\"\r\n                className=\"add-btn\"\r\n            />\r\n        );\r\n    };\r\n\r\n    createCustomDeleteButton = () => {\r\n        return (\r\n            <DeleteButton\r\n                btnText=\"Delete Session\"\r\n                btnContextual=\"btn-danger\"\r\n                className=\"delete-btn\"\r\n            />\r\n        );\r\n    };\r\n\r\n    createCustomModalHeader = () => {\r\n        return <InsertModalHeader className=\"modal-header\" title=\"Add Session\"/>;\r\n    };\r\n\r\n    handleModalClose(closeModal) {\r\n        closeModal();\r\n    }\r\n\r\n    createCustomModalFooter = (closeModal) => {\r\n        return (\r\n            <InsertModalFooter\r\n                className=\"modal-footer\"\r\n                closeBtnContextual=\"btn-light\"\r\n                saveBtnContextual=\"btn-success\"\r\n                closeBtnClass=\"modal-close-btn\"\r\n                saveBtnClass=\"modal-save-btn\"\r\n                onModalClose={() => this.handleModalClose(closeModal)}\r\n            />\r\n        );\r\n    };\r\n\r\n    createCustomButtonGroup = (props) => {\r\n        return (\r\n            <ButtonGroup sizeClass=\"btn-group-md\">\r\n                {props.showSelectedOnlyBtn}\r\n                {props.insertBtn}\r\n                {props.deleteBtn}\r\n                <button\r\n                    type=\"button\"\r\n                    className={`btn btn-info edit-mode-btn`}\r\n                    onClick={() => this.setState({editMode: !this.state.editMode})}\r\n                >\r\n                    {this.state.editMode ? \"Exit Edit Mode\" : \"Edit Mode\"}\r\n                </button>\r\n                {this.state.deletedRows.length > 0 ? (\r\n                    <button\r\n                        type=\"button\"\r\n                        className={`btn btn-warning undo-btn`}\r\n                        onClick={this.onUndo.bind(this)}\r\n                    >\r\n                        Undo Delete\r\n                    </button>\r\n                ) : null}\r\n                <button type='button'\r\n                        className={`btn btn-info edit-mode-btn`}\r\n                        onClick={this.generateData.bind(this)}>\r\n                    Generate Test Data\r\n                </button>\r\n            </ButtonGroup>\r\n        );\r\n    };\r\n\r\n    generateData(){\r\n        for(let i = 0; i < 10; i++){\r\n            this.addRowHook({\r\n                sessionTitle: uniqueNamesGenerator({ dictionaries: [names, colors, animals], length: 1 }),\r\n                room: this.state.rooms[Math.floor(Math.random() * Math.floor(this.state.rooms.length))][\"id\"],\r\n                speaker: this.state.speakers[Math.floor(Math.random() * Math.floor(this.state.speakers.length))][\"id\"],\r\n                timeSlot: this.state.timeSlots[Math.floor(Math.random() * Math.floor(this.state.timeSlots.length))][\"id\"]\r\n            })\r\n        }\r\n    }\r\n\r\n    createCustomSearchField = () => {\r\n        return (\r\n            <SearchField\r\n                className=\"search-field\"\r\n                style={{height: 40, fontSize: 15}}\r\n            />\r\n        );\r\n    };\r\n\r\n    customRoomField = (column, attr, editorClass, ignoreEditable) => {\r\n        return (\r\n            <select className={`${editorClass}`} {...attr}>\r\n                <option key={null} value={null} selected>\r\n                    Please Choose a Room...\r\n                </option>\r\n                {this.state.rooms.map((room) => (\r\n                    <option key={room[\"name\"]} value={room[\"id\"]}>\r\n                        {room[\"name\"]}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        );\r\n    };\r\n\r\n    customSpeakerField = (column, attr, editorClass, ignoreEditable) => {\r\n        return (\r\n            <select className={`${editorClass}`} {...attr}>\r\n                <option key={null} value={null} selected>\r\n                    Please Choose a Speaker...\r\n                </option>\r\n                {this.state.speakers.map((speaker) => (\r\n                    <option key={speaker[\"email\"]} value={speaker[\"id\"]}>\r\n                        {speaker[\"speakerName\"]}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        );\r\n    };\r\n\r\n    customTimeSlotField = (column, attr, editorClass, ignoreEditable) => {\r\n        return (\r\n            <select className={`${editorClass}`} {...attr}>\r\n                <option key={null} value={null} selected>\r\n                    Please Choose a TimeSlot...\r\n                </option>\r\n                {this.state.timeSlots.map((timeSlot) => (\r\n                    <option\r\n                        key={timeSlot[\"startTime\"] + \" - \" + timeSlot[\"endTime\"]}\r\n                        value={timeSlot[\"id\"]}\r\n                    >\r\n                        {timeSlot[\"startTime\"] + \" - \" + timeSlot[\"endTime\"]}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        );\r\n    };\r\n\r\n    tableProps = {\r\n        onAddRow: this.addRowHook.bind(this),\r\n        onDeleteRow: this.deleteRowHook.bind(this),\r\n        insertBtn: this.createCustomInsertButton,\r\n        deleteBtn: this.createCustomDeleteButton,\r\n        insertModalHeader: this.createCustomModalHeader,\r\n        insertModalFooter: this.createCustomModalFooter,\r\n        btnGroup: this.createCustomButtonGroup,\r\n        searchField: this.createCustomSearchField,\r\n        clearSearch: true,\r\n        handleConfirmDeleteRow: this.onConfirmDeleteRow.bind(this),\r\n    };\r\n\r\n    cellEditProps = {\r\n        mode: \"click\",\r\n        blurToSave: true,\r\n        beforeSaveCell: this.beforeSaveHook.bind(this),\r\n    };\r\n\r\n    createDropDownEditor = (onUpdate, props) => (\r\n        <DropDownEditor onUpdate={onUpdate} {...props} />\r\n    );\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h3>Sessions</h3>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <BootstrapTable\r\n                        hover\r\n                        condensed\r\n                        data={this.state.data}\r\n                        search\r\n                        version=\"4\"\r\n                        insertRow\r\n                        deleteRow\r\n                        selectRow={{mode: \"checkbox\"}}\r\n                        options={this.tableProps}\r\n                        cellEdit={this.state.editMode ? this.cellEditProps : {}}\r\n                    >\r\n                        <TableHeaderColumn\r\n                            hidden\r\n                            hiddenOninsert\r\n                            autoValue\r\n                            isKey\r\n                            dataField=\"id\"\r\n                        >\r\n                            id\r\n                        </TableHeaderColumn>\r\n                        <TableHeaderColumn\r\n                            dataField=\"sessionTitle\"\r\n                            editable={{validator: this.cannotBeEmptyValidator}}\r\n                            dataSort={true}\r\n                        >\r\n                            Session Title\r\n                        </TableHeaderColumn>\r\n                        <TableHeaderColumn\r\n                            dataField=\"room\"\r\n                            dataFormat={this.roomFormatter}\r\n                            editable={{\r\n                                type: \"select\",\r\n                                options: {values: this.state.rooms},\r\n                            }}\r\n                            customEditor={{\r\n                                getElement: this.createDropDownEditor,\r\n                                customEditorParameters: {\r\n                                    data: this.state.rooms,\r\n                                    getDisplayName: (room) =>\r\n                                        room[\"name\"]\r\n                                },\r\n                            }}\r\n                            customInsertEditor={{getElement: this.customRoomField}}\r\n                            dataSort={true}\r\n                        >\r\n                            Room\r\n                        </TableHeaderColumn>\r\n                        <TableHeaderColumn\r\n                            dataField=\"speaker\"\r\n                            dataFormat={this.speakerFormatter}\r\n                            editable={{\r\n                                type: \"select\",\r\n                                options: {values: this.state.speakers},\r\n                            }}\r\n                            customEditor={{\r\n                                getElement: this.createDropDownEditor,\r\n                                customEditorParameters: {\r\n                                    data: this.state.speakers,\r\n                                    getDisplayName: (speaker) =>\r\n                                        speaker[\"speakerName\"],\r\n                                },\r\n                            }}\r\n                            customInsertEditor={{getElement: this.customSpeakerField}}\r\n                            dataSort={true}\r\n                        >\r\n                            Speaker\r\n                        </TableHeaderColumn>\r\n                        <TableHeaderColumn\r\n                            dataField=\"timeSlot\"\r\n                            dataFormat={this.timeSlotFormatter}\r\n                            customEditor={{\r\n                                getElement: this.createDropDownEditor,\r\n                                customEditorParameters: {\r\n                                    data: this.state.timeSlots,\r\n                                    getDisplayName: (timeSlot) =>\r\n                                        timeSlot[\"startTime\"] + \" - \" + timeSlot[\"endTime\"],\r\n                                },\r\n                            }}\r\n                            customInsertEditor={{getElement: this.customTimeSlotField}}\r\n                            dataSort={true}\r\n                        >\r\n                            Time Slot\r\n                        </TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sessions;\r\n"]},"metadata":{},"sourceType":"module"}