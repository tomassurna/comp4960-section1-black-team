{"ast":null,"code":"/*!\nFullCalendar Scheduler v5.3.1\nDocs & License: https://fullcalendar.io/scheduler\n(c) 2020 Adam Shaw\n*/\nimport { memoize, createRef, mapHash, createElement, NowTimer, DateComponent, createPlugin } from '@fullcalendar/common';\nimport premiumCommonPlugin from '@fullcalendar/premium-common';\nimport resourceCommonPlugin, { VResourceSplitter, VResourceJoiner, flattenResources, DEFAULT_RESOURCE_ORDER, ResourceDayHeader, DayResourceTableModel, ResourceDayTableModel } from '@fullcalendar/resource-common';\nimport timeGridPlugin, { buildDayRanges, DayTimeColsSlicer, TimeCols, buildSlatMetas, TimeColsView, buildTimeColsModel } from '@fullcalendar/timegrid';\nimport { __extends, __assign } from 'tslib';\nimport { ResourceDayTable } from '@fullcalendar/resource-daygrid';\n\nvar ResourceDayTimeCols =\n/** @class */\nfunction (_super) {\n  __extends(ResourceDayTimeCols, _super);\n\n  function ResourceDayTimeCols() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.allowAcrossResources = false;\n    _this.buildDayRanges = memoize(buildDayRanges);\n    _this.splitter = new VResourceSplitter();\n    _this.slicers = {};\n    _this.joiner = new ResourceDayTimeColsJoiner();\n    _this.timeColsRef = createRef();\n\n    _this.handleRootEl = function (rootEl) {\n      if (rootEl) {\n        _this.context.registerInteractiveComponent(_this, {\n          el: rootEl\n        });\n      } else {\n        _this.context.unregisterInteractiveComponent(_this);\n      }\n    };\n\n    return _this;\n  }\n\n  ResourceDayTimeCols.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var dateEnv = context.dateEnv,\n        options = context.options;\n    var dateProfile = props.dateProfile,\n        resourceDayTableModel = props.resourceDayTableModel;\n    var dayRanges = this.dayRanges = this.buildDayRanges(resourceDayTableModel.dayTableModel, dateProfile, dateEnv);\n    var splitProps = this.splitter.splitProps(props);\n    this.slicers = mapHash(splitProps, function (split, resourceId) {\n      return _this.slicers[resourceId] || new DayTimeColsSlicer();\n    });\n    var slicedProps = mapHash(this.slicers, function (slicer, resourceId) {\n      return slicer.sliceProps(splitProps[resourceId], dateProfile, null, context, dayRanges);\n    });\n    this.allowAcrossResources = dayRanges.length === 1;\n    return (// TODO: would move this further down hierarchy, but sliceNowDate needs it\n      createElement(NowTimer, {\n        unit: options.nowIndicator ? 'minute' : 'day'\n      }, function (nowDate, todayRange) {\n        return createElement(TimeCols, __assign({\n          ref: _this.timeColsRef,\n          rootElRef: _this.handleRootEl\n        }, _this.joiner.joinProps(slicedProps, resourceDayTableModel), {\n          dateProfile: dateProfile,\n          axis: props.axis,\n          slotDuration: props.slotDuration,\n          slatMetas: props.slatMetas,\n          cells: resourceDayTableModel.cells[0],\n          tableColGroupNode: props.tableColGroupNode,\n          tableMinWidth: props.tableMinWidth,\n          clientWidth: props.clientWidth,\n          clientHeight: props.clientHeight,\n          expandRows: props.expandRows,\n          nowDate: nowDate,\n          nowIndicatorSegs: options.nowIndicator && _this.buildNowIndicatorSegs(nowDate),\n          todayRange: todayRange,\n          onScrollTopRequest: props.onScrollTopRequest,\n          forPrint: props.forPrint,\n          onSlatCoords: props.onSlatCoords\n        }));\n      })\n    );\n  };\n\n  ResourceDayTimeCols.prototype.buildNowIndicatorSegs = function (date) {\n    var nonResourceSegs = this.slicers[''].sliceNowDate(date, this.context, this.dayRanges);\n    return this.joiner.expandSegs(this.props.resourceDayTableModel, nonResourceSegs);\n  };\n\n  ResourceDayTimeCols.prototype.queryHit = function (positionLeft, positionTop) {\n    var rawHit = this.timeColsRef.current.positionToHit(positionLeft, positionTop);\n\n    if (rawHit) {\n      return {\n        component: this,\n        dateSpan: {\n          range: rawHit.dateSpan.range,\n          allDay: rawHit.dateSpan.allDay,\n          resourceId: this.props.resourceDayTableModel.cells[0][rawHit.col].resource.id\n        },\n        dayEl: rawHit.dayEl,\n        rect: {\n          left: rawHit.relativeRect.left,\n          right: rawHit.relativeRect.right,\n          top: rawHit.relativeRect.top,\n          bottom: rawHit.relativeRect.bottom\n        },\n        layer: 0\n      };\n    }\n  };\n\n  return ResourceDayTimeCols;\n}(DateComponent);\n\nvar ResourceDayTimeColsJoiner =\n/** @class */\nfunction (_super) {\n  __extends(ResourceDayTimeColsJoiner, _super);\n\n  function ResourceDayTimeColsJoiner() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ResourceDayTimeColsJoiner.prototype.transformSeg = function (seg, resourceDayTable, resourceI) {\n    return [__assign(__assign({}, seg), {\n      col: resourceDayTable.computeCol(seg.col, resourceI)\n    })];\n  };\n\n  return ResourceDayTimeColsJoiner;\n}(VResourceJoiner);\n\nvar ResourceDayTimeColsView =\n/** @class */\nfunction (_super) {\n  __extends(ResourceDayTimeColsView, _super);\n\n  function ResourceDayTimeColsView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.flattenResources = memoize(flattenResources);\n    _this.buildResourceTimeColsModel = memoize(buildResourceTimeColsModel);\n    _this.buildSlatMetas = memoize(buildSlatMetas);\n    return _this;\n  }\n\n  ResourceDayTimeColsView.prototype.render = function () {\n    var _this = this;\n\n    var _a = this,\n        props = _a.props,\n        context = _a.context;\n\n    var options = context.options,\n        dateEnv = context.dateEnv;\n    var dateProfile = props.dateProfile;\n    var splitProps = this.allDaySplitter.splitProps(props);\n    var resourceOrderSpecs = options.resourceOrder || DEFAULT_RESOURCE_ORDER;\n    var resources = this.flattenResources(props.resourceStore, resourceOrderSpecs);\n    var resourceDayTableModel = this.buildResourceTimeColsModel(dateProfile, context.dateProfileGenerator, resources, options.datesAboveResources, context);\n    var slatMetas = this.buildSlatMetas(dateProfile.slotMinTime, dateProfile.slotMaxTime, options.slotLabelInterval, options.slotDuration, dateEnv);\n    var dayMinWidth = options.dayMinWidth;\n    var hasAttachedAxis = !dayMinWidth;\n    var hasDetachedAxis = dayMinWidth;\n    var headerContent = options.dayHeaders && createElement(ResourceDayHeader, {\n      resources: resources,\n      dates: resourceDayTableModel.dayTableModel.headerDates,\n      dateProfile: dateProfile,\n      datesRepDistinctDays: true,\n      renderIntro: hasAttachedAxis ? this.renderHeadAxis : null\n    });\n\n    var allDayContent = options.allDaySlot !== false && function (contentArg) {\n      return createElement(ResourceDayTable, __assign({}, splitProps['allDay'], {\n        dateProfile: dateProfile,\n        resourceDayTableModel: resourceDayTableModel,\n        nextDayThreshold: options.nextDayThreshold,\n        tableMinWidth: contentArg.tableMinWidth,\n        colGroupNode: contentArg.tableColGroupNode,\n        renderRowIntro: hasAttachedAxis ? _this.renderTableRowAxis : null,\n        showWeekNumbers: false,\n        expandRows: false,\n        headerAlignElRef: _this.headerElRef,\n        clientWidth: contentArg.clientWidth,\n        clientHeight: contentArg.clientHeight,\n        forPrint: props.forPrint\n      }, _this.getAllDayMaxEventProps()));\n    };\n\n    var timeGridContent = function timeGridContent(contentArg) {\n      return createElement(ResourceDayTimeCols, __assign({}, splitProps['timed'], {\n        dateProfile: dateProfile,\n        axis: hasAttachedAxis,\n        slotDuration: options.slotDuration,\n        slatMetas: slatMetas,\n        resourceDayTableModel: resourceDayTableModel,\n        tableColGroupNode: contentArg.tableColGroupNode,\n        tableMinWidth: contentArg.tableMinWidth,\n        clientWidth: contentArg.clientWidth,\n        clientHeight: contentArg.clientHeight,\n        onSlatCoords: _this.handleSlatCoords,\n        expandRows: contentArg.expandRows,\n        forPrint: props.forPrint,\n        onScrollTopRequest: _this.handleScrollTopRequest\n      }));\n    };\n\n    return hasDetachedAxis ? this.renderHScrollLayout(headerContent, allDayContent, timeGridContent, resourceDayTableModel.colCnt, dayMinWidth, slatMetas, this.state.slatCoords) : this.renderSimpleLayout(headerContent, allDayContent, timeGridContent);\n  };\n\n  return ResourceDayTimeColsView;\n}(TimeColsView);\n\nfunction buildResourceTimeColsModel(dateProfile, dateProfileGenerator, resources, datesAboveResources, context) {\n  var dayTable = buildTimeColsModel(dateProfile, dateProfileGenerator);\n  return datesAboveResources ? new DayResourceTableModel(dayTable, resources, context) : new ResourceDayTableModel(dayTable, resources, context);\n}\n\nvar main = createPlugin({\n  deps: [premiumCommonPlugin, resourceCommonPlugin, timeGridPlugin],\n  initialView: 'resourceTimeGridDay',\n  views: {\n    resourceTimeGrid: {\n      type: 'timeGrid',\n      component: ResourceDayTimeColsView,\n      needsResourceData: true\n    },\n    resourceTimeGridDay: {\n      type: 'resourceTimeGrid',\n      duration: {\n        days: 1\n      }\n    },\n    resourceTimeGridWeek: {\n      type: 'resourceTimeGrid',\n      duration: {\n        weeks: 1\n      }\n    }\n  }\n});\nexport default main;\nexport { ResourceDayTimeCols, ResourceDayTimeColsView };","map":{"version":3,"sources":["src/ResourceDayTimeCols.tsx","src/ResourceDayTimeColsView.tsx","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  createElement, createRef, VNode,\n  mapHash, DateSpan, DateComponent, EventStore, EventUiHash, EventInteractionState, memoize, DateRange, DateMarker, Hit, CssDimValue, NowTimer, Duration, DateProfile\n} from '@fullcalendar/common'\nimport { DayTimeColsSlicer, TimeCols, buildDayRanges, TimeColsSeg, TimeSlatMeta, TimeColsSlatsCoords } from '@fullcalendar/timegrid'\nimport { AbstractResourceDayTableModel, VResourceSplitter, VResourceJoiner } from '@fullcalendar/resource-common'\n\n\nexport interface ResourceDayTimeColsProps {\n  dateProfile: DateProfile\n  resourceDayTableModel: AbstractResourceDayTableModel\n  axis: boolean\n  slotDuration: Duration\n  slatMetas: TimeSlatMeta[]\n  businessHours: EventStore\n  eventStore: EventStore\n  eventUiBases: EventUiHash\n  dateSelection: DateSpan | null\n  eventSelection: string\n  eventDrag: EventInteractionState | null\n  eventResize: EventInteractionState | null\n  tableColGroupNode: VNode\n  tableMinWidth: CssDimValue\n  clientWidth: number | null\n  clientHeight: number | null\n  expandRows: boolean\n  onScrollTopRequest?: (scrollTop: number) => void\n  forPrint: boolean\n  onSlatCoords?: (slatCoords: TimeColsSlatsCoords) => void\n}\n\n\nexport class ResourceDayTimeCols extends DateComponent<ResourceDayTimeColsProps> {\n\n  allowAcrossResources = false\n\n  private buildDayRanges = memoize(buildDayRanges)\n  private dayRanges: DateRange[] // for now indicator\n  private splitter = new VResourceSplitter()\n  private slicers: { [resourceId: string]: DayTimeColsSlicer } = {}\n  private joiner = new ResourceDayTimeColsJoiner()\n  private timeColsRef = createRef<TimeCols>()\n\n\n  render() {\n    let { props, context } = this\n    let { dateEnv, options } = context\n    let { dateProfile, resourceDayTableModel } = props\n\n    let dayRanges = this.dayRanges = this.buildDayRanges(resourceDayTableModel.dayTableModel, dateProfile, dateEnv)\n    let splitProps = this.splitter.splitProps(props)\n\n    this.slicers = mapHash(splitProps, (split, resourceId) => {\n      return this.slicers[resourceId] || new DayTimeColsSlicer()\n    })\n\n    let slicedProps = mapHash(this.slicers, (slicer, resourceId) => {\n      return slicer.sliceProps(\n        splitProps[resourceId],\n        dateProfile,\n        null,\n        context,\n        dayRanges\n      )\n    })\n\n    this.allowAcrossResources = dayRanges.length === 1\n\n    return ( // TODO: would move this further down hierarchy, but sliceNowDate needs it\n      <NowTimer unit={options.nowIndicator ? 'minute' : 'day'}>\n        {(nowDate: DateMarker, todayRange: DateRange) => (\n          <TimeCols\n            ref={this.timeColsRef}\n            rootElRef={this.handleRootEl}\n            {...this.joiner.joinProps(slicedProps, resourceDayTableModel)}\n            dateProfile={dateProfile}\n            axis={props.axis}\n            slotDuration={props.slotDuration}\n            slatMetas={props.slatMetas}\n            cells={resourceDayTableModel.cells[0]}\n            tableColGroupNode={props.tableColGroupNode}\n            tableMinWidth={props.tableMinWidth}\n            clientWidth={props.clientWidth}\n            clientHeight={props.clientHeight}\n            expandRows={props.expandRows}\n            nowDate={nowDate}\n            nowIndicatorSegs={options.nowIndicator && this.buildNowIndicatorSegs(nowDate)}\n            todayRange={todayRange}\n            onScrollTopRequest={props.onScrollTopRequest}\n            forPrint={props.forPrint}\n            onSlatCoords={props.onSlatCoords}\n          />\n        )}\n      </NowTimer>\n    )\n  }\n\n\n  handleRootEl = (rootEl: HTMLElement | null) => {\n    if (rootEl) {\n      this.context.registerInteractiveComponent(this, { el: rootEl })\n    } else {\n      this.context.unregisterInteractiveComponent(this)\n    }\n  }\n\n\n  buildNowIndicatorSegs(date: DateMarker) {\n    let nonResourceSegs = this.slicers[''].sliceNowDate(date, this.context, this.dayRanges)\n    return this.joiner.expandSegs(this.props.resourceDayTableModel, nonResourceSegs)\n  }\n\n\n  queryHit(positionLeft: number, positionTop: number): Hit {\n    let rawHit = this.timeColsRef.current.positionToHit(positionLeft, positionTop)\n\n    if (rawHit) {\n      return {\n        component: this,\n        dateSpan: {\n          range: rawHit.dateSpan.range,\n          allDay: rawHit.dateSpan.allDay,\n          resourceId: this.props.resourceDayTableModel.cells[0][rawHit.col].resource.id\n        },\n        dayEl: rawHit.dayEl,\n        rect: {\n          left: rawHit.relativeRect.left,\n          right: rawHit.relativeRect.right,\n          top: rawHit.relativeRect.top,\n          bottom: rawHit.relativeRect.bottom\n        },\n        layer: 0\n      }\n    }\n  }\n\n}\n\n\nclass ResourceDayTimeColsJoiner extends VResourceJoiner<TimeColsSeg> {\n\n  transformSeg(seg: TimeColsSeg, resourceDayTable: AbstractResourceDayTableModel, resourceI: number) {\n    return [\n      {\n        ...seg,\n        col: resourceDayTable.computeCol(seg.col, resourceI)\n      }\n    ]\n  }\n\n}\n","import {\n  createElement, DateProfileGenerator, memoize, DateProfile, ChunkContentCallbackArgs, CalendarContext\n} from '@fullcalendar/common'\nimport { TimeColsView, buildTimeColsModel, buildSlatMetas } from '@fullcalendar/timegrid'\nimport {\n  ResourceDayHeader, ResourceDayTableModel, DayResourceTableModel, ResourceViewProps,\n  Resource, flattenResources, DEFAULT_RESOURCE_ORDER\n} from '@fullcalendar/resource-common'\nimport { ResourceDayTable } from '@fullcalendar/resource-daygrid'\nimport { ResourceDayTimeCols } from './ResourceDayTimeCols'\n\n\nexport class ResourceDayTimeColsView extends TimeColsView {\n\n  props: ResourceViewProps\n\n  private flattenResources = memoize(flattenResources)\n  private buildResourceTimeColsModel = memoize(buildResourceTimeColsModel)\n  private buildSlatMetas = memoize(buildSlatMetas)\n\n\n  render() {\n    let { props, context } = this\n    let { options, dateEnv } = context\n    let { dateProfile } = props\n\n    let splitProps = this.allDaySplitter.splitProps(props)\n    let resourceOrderSpecs = options.resourceOrder || DEFAULT_RESOURCE_ORDER\n    let resources = this.flattenResources(props.resourceStore, resourceOrderSpecs)\n    let resourceDayTableModel = this.buildResourceTimeColsModel(\n      dateProfile,\n      context.dateProfileGenerator,\n      resources,\n      options.datesAboveResources,\n      context\n    )\n\n    let slatMetas = this.buildSlatMetas(dateProfile.slotMinTime, dateProfile.slotMaxTime, options.slotLabelInterval, options.slotDuration, dateEnv)\n    let { dayMinWidth } = options\n    let hasAttachedAxis = !dayMinWidth\n    let hasDetachedAxis = dayMinWidth\n\n    let headerContent = options.dayHeaders &&\n      <ResourceDayHeader\n        resources={resources}\n        dates={resourceDayTableModel.dayTableModel.headerDates}\n        dateProfile={dateProfile}\n        datesRepDistinctDays={true}\n        renderIntro={hasAttachedAxis ? this.renderHeadAxis : null}\n      />\n\n    let allDayContent = (options.allDaySlot !== false) && ((contentArg: ChunkContentCallbackArgs) => (\n      <ResourceDayTable\n        {...splitProps['allDay']}\n        dateProfile={dateProfile}\n        resourceDayTableModel={resourceDayTableModel}\n        nextDayThreshold={options.nextDayThreshold}\n        tableMinWidth={contentArg.tableMinWidth}\n        colGroupNode={contentArg.tableColGroupNode}\n        renderRowIntro={hasAttachedAxis ? this.renderTableRowAxis : null}\n        showWeekNumbers={false}\n        expandRows={false}\n        headerAlignElRef={this.headerElRef}\n        clientWidth={contentArg.clientWidth}\n        clientHeight={contentArg.clientHeight}\n        forPrint={props.forPrint}\n        {...this.getAllDayMaxEventProps()}\n      />\n    ))\n\n    let timeGridContent = (contentArg: ChunkContentCallbackArgs) => (\n      <ResourceDayTimeCols\n        {...splitProps['timed']}\n        dateProfile={dateProfile}\n        axis={hasAttachedAxis}\n        slotDuration={options.slotDuration}\n        slatMetas={slatMetas}\n        resourceDayTableModel={resourceDayTableModel}\n        tableColGroupNode={contentArg.tableColGroupNode}\n        tableMinWidth={contentArg.tableMinWidth}\n        clientWidth={contentArg.clientWidth}\n        clientHeight={contentArg.clientHeight}\n        onSlatCoords={this.handleSlatCoords}\n        expandRows={contentArg.expandRows}\n        forPrint={props.forPrint}\n        onScrollTopRequest={this.handleScrollTopRequest}\n      />\n    )\n\n    return hasDetachedAxis\n      ? this.renderHScrollLayout(headerContent, allDayContent, timeGridContent, resourceDayTableModel.colCnt, dayMinWidth, slatMetas, this.state.slatCoords)\n      : this.renderSimpleLayout(headerContent, allDayContent, timeGridContent)\n  }\n\n}\n\n\nfunction buildResourceTimeColsModel(\n  dateProfile: DateProfile,\n  dateProfileGenerator: DateProfileGenerator,\n  resources: Resource[],\n  datesAboveResources: boolean,\n  context: CalendarContext\n) {\n  let dayTable = buildTimeColsModel(dateProfile, dateProfileGenerator)\n\n  return datesAboveResources ?\n    new DayResourceTableModel(dayTable, resources, context) :\n    new ResourceDayTableModel(dayTable, resources, context)\n}\n","import { createPlugin } from '@fullcalendar/common'\nimport premiumCommonPlugin from '@fullcalendar/premium-common'\nimport '@fullcalendar/premium-common' // ensure ambient declarations\nimport resourceCommonPlugin from '@fullcalendar/resource-common'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport { ResourceDayTimeColsView } from './ResourceDayTimeColsView'\n\nexport { ResourceDayTimeColsView }\nexport { ResourceDayTimeCols } from './ResourceDayTimeCols'\n\nexport default createPlugin({\n  deps: [\n    premiumCommonPlugin,\n    resourceCommonPlugin,\n    timeGridPlugin\n  ],\n  initialView: 'resourceTimeGridDay',\n  views: {\n\n    resourceTimeGrid: {\n      type: 'timeGrid', // will inherit this configuration\n      component: ResourceDayTimeColsView,\n      needsResourceData: true\n    },\n\n    resourceTimeGridDay: {\n      type: 'resourceTimeGrid',\n      duration: { days: 1 }\n    },\n\n    resourceTimeGridWeek: {\n      type: 'resourceTimeGrid',\n      duration: { weeks: 1 }\n    }\n\n  }\n})\n"]},"metadata":{},"sourceType":"module"}