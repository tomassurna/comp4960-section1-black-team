{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wangm1\\\\comp4960-section1-black-team\\\\comp4960-section1-black-team\\\\src\\\\client\\\\src\\\\pages\\\\calendar\\\\Calendar.js\";\nimport React from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\nimport $ from \"jquery\";\nimport Alert from \"react-s-alert\";\n\nclass CalendarPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getData();\n    this.state = {\n      sessions: [],\n      editMode: false,\n      deletedRows: [],\n      rooms: [],\n      speakers: [],\n      timeSlots: []\n    };\n  }\n\n  getData() {\n    $.ajax({\n      method: \"GET\",\n      url: \"/Session/all\",\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        this.setState({\n          sessions: response\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Unable to load session table data.\", {\n        position: \"top-right\",\n        effect: \"stackslide\",\n        timeout: 2000\n      });\n      this.setState({\n        sessions: []\n      });\n    });\n    $.ajax({\n      method: \"GET\",\n      url: \"/Room/all\",\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        this.setState({\n          rooms: response\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Unable to load room table data.\", {\n        position: \"top-right\",\n        effect: \"stackslide\",\n        timeout: 2000\n      });\n      this.setState({\n        rooms: []\n      });\n    });\n    $.ajax({\n      method: \"GET\",\n      url: \"/Speaker/all\",\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        this.setState({\n          speakers: response\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Unable to load speaker table data.\", {\n        position: \"top-right\",\n        effect: \"stackslide\",\n        timeout: 2000\n      });\n      this.setState({\n        speakers: []\n      });\n    });\n    $.ajax({\n      method: \"GET\",\n      url: \"/TimeSlot/all\",\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        this.setState({\n          timeSlots: response\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Unable to load time slot table data.\", {\n        position: \"top-right\",\n        effect: \"stackslide\",\n        timeout: 2000\n      });\n      this.setState({\n        timeSlots: []\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }, \"Calendar\"))), /*#__PURE__*/React.createElement(FullCalendar, {\n      plugins: [resourceTimeGridPlugin],\n      initialView: \"resourceTimeGridOneDay\",\n      schedulerLicenseKey: \"CC-Attribution-NonCommercial-NoDerivatives\",\n      allDaySlot: false,\n      initialDate: \"2020-09-07\",\n      resources: this.state.rooms.map(room => {\n        return {\n          id: room[\"id\"],\n          title: room[\"name\"]\n        };\n      }),\n      height: \"auto\",\n      slotMinTime: '06:00:00',\n      slotMaxTime: '21:15:00',\n      slotDuration: '00:15:00',\n      validRange: {\n        start: '2020-09-07',\n        end: '2020-09-07'\n      },\n      headerToolbar: {\n        left: '',\n        center: 'title',\n        right: ''\n      },\n      events: this.state.sessions.filter(session => session[\"room\"]).filter(session => session[\"timeSlot\"]).map(session => {\n        return {\n          id: session[\"id\"],\n          resourceId: session[\"room\"][\"id\"],\n          title: session[\"sessionTitle\"],\n          start: \"2020-09-07T\" + session[\"timeSlot\"][\"startTime\"],\n          end: \"2020-09-07T\" + session[\"timeSlot\"][\"endTime\"]\n        };\n      }),\n      views: {\n        resourceTimeGridOneDay: {\n          type: 'resourceTimeGrid',\n          duration: {\n            days: 1\n          },\n          buttonText: '2 days'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default CalendarPage;","map":{"version":3,"sources":["C:/Users/wangm1/comp4960-section1-black-team/comp4960-section1-black-team/src/client/src/pages/calendar/Calendar.js"],"names":["React","FullCalendar","resourceTimeGridPlugin","$","Alert","CalendarPage","Component","constructor","props","getData","state","sessions","editMode","deletedRows","rooms","speakers","timeSlots","ajax","method","url","type","contentType","success","response","setState","catch","xhr","status","error","position","effect","timeout","render","map","room","id","title","start","end","left","center","right","filter","session","resourceId","resourceTimeGridOneDay","duration","days","buttonText"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\r\nimport $ from \"jquery\";\r\nimport Alert from \"react-s-alert\";\r\n\r\nclass CalendarPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getData();\r\n        this.state = {\r\n            sessions: [],\r\n            editMode: false,\r\n            deletedRows: [],\r\n            rooms: [],\r\n            speakers: [],\r\n            timeSlots: [],\r\n        };\r\n    }\r\n\r\n    getData() {\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/Session/all\",\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                this.setState({\r\n                    sessions: response,\r\n                });\r\n            },\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Unable to load session table data.\", {\r\n                position: \"top-right\",\r\n                effect: \"stackslide\",\r\n                timeout: 2000,\r\n            });\r\n\r\n            this.setState({\r\n                sessions: [],\r\n            });\r\n        });\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/Room/all\",\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                this.setState({\r\n                    rooms: response,\r\n                });\r\n            },\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Unable to load room table data.\", {\r\n                position: \"top-right\",\r\n                effect: \"stackslide\",\r\n                timeout: 2000,\r\n            });\r\n\r\n            this.setState({\r\n                rooms: [],\r\n            });\r\n        });\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/Speaker/all\",\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                this.setState({\r\n                    speakers: response,\r\n                });\r\n            },\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Unable to load speaker table data.\", {\r\n                position: \"top-right\",\r\n                effect: \"stackslide\",\r\n                timeout: 2000,\r\n            });\r\n\r\n            this.setState({\r\n                speakers: [],\r\n            });\r\n        });\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/TimeSlot/all\",\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                this.setState({\r\n                    timeSlots: response,\r\n                });\r\n            },\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Unable to load time slot table data.\", {\r\n                position: \"top-right\",\r\n                effect: \"stackslide\",\r\n                timeout: 2000,\r\n            });\r\n\r\n            this.setState({\r\n                timeSlots: [],\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h3>Calendar</h3>\r\n                    </div>\r\n                </div>\r\n\r\n                <FullCalendar\r\n                    plugins={[resourceTimeGridPlugin]}\r\n                    initialView={\"resourceTimeGridOneDay\"}\r\n                    schedulerLicenseKey={\"CC-Attribution-NonCommercial-NoDerivatives\"}\r\n                    allDaySlot={false}\r\n                    initialDate={\"2020-09-07\"}\r\n                    resources={this.state.rooms.map((room) => {\r\n                        return {id: room[\"id\"], title: room[\"name\"]};\r\n                    })}\r\n                    height={\"auto\"}\r\n                    slotMinTime={'06:00:00'}\r\n                    slotMaxTime={'21:15:00'}\r\n                    slotDuration={'00:15:00'}\r\n                    validRange={{\r\n                        start: '2020-09-07',\r\n                        end: '2020-09-07'\r\n                    }}\r\n                     headerToolbar={{\r\n                         left: '',\r\n                         center: 'title',\r\n                         right: ''\r\n                     }}\r\n                    events={this.state.sessions\r\n                        .filter((session) => session[\"room\"])\r\n                        .filter((session) => session[\"timeSlot\"])\r\n                        .map((session) => {\r\n                            return {\r\n                                id: session[\"id\"],\r\n                                resourceId: session[\"room\"][\"id\"],\r\n                                title: session[\"sessionTitle\"],\r\n                                start: \"2020-09-07T\" + session[\"timeSlot\"][\"startTime\"],\r\n                                end: \"2020-09-07T\" + session[\"timeSlot\"][\"endTime\"],\r\n                            };\r\n                        })}\r\n\r\n                    views={{\r\n                        resourceTimeGridOneDay: {\r\n                            type: 'resourceTimeGrid',\r\n                            duration: {days: 1},\r\n                            buttonText: '2 days',\r\n                        }\r\n                    }}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CalendarPage;\r\n"]},"metadata":{},"sourceType":"module"}