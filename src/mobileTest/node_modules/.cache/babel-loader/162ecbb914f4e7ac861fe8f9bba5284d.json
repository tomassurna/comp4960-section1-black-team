{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wangm1\\\\comp4960-section1-black-team\\\\comp4960-section1-black-team\\\\src\\\\client\\\\src\\\\pages\\\\sessions\\\\DropDownEditor.js\";\nimport React from \"react\";\n\nclass DropDownEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateSelectedTimeSlot = this.updateSelectedTimeSlot.bind(this);\n    this.triggerSave = this.triggerSave.bind(this);\n    this.state = {\n      selectedValue: props.defaultValue,\n      data: props.data || [],\n      alreadySaving: false\n    };\n  }\n\n  updateSelectedTimeSlot(event) {\n    this.setState({\n      selectedValue: this.state.data.find(row => row[\"id\"] === event.target.value)\n    });\n  }\n\n  triggerSave() {\n    if (this.state.alreadySaving) {\n      return;\n    }\n\n    this.setState({\n      alreadySaving: true\n    });\n    this.props.onUpdate(this.state.selectedValue);\n  }\n\n  focus() {}\n\n  componentDidMount() {\n    this.nameInput.focus();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control editor edit-text\",\n      value: this.state.selectedValue ? this.state.selectedValue[\"id\"] : \"\",\n      onChange: this.updateSelectedTimeSlot,\n      onBlur: this.triggerSave,\n      onKeyDown: this.triggerSave,\n      ref: input => {\n        this.nameInput = input;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      key: null,\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"Please Choose a value...\"), this.state.data.map(row => /*#__PURE__*/React.createElement(\"option\", {\n      key: row[\"id\"],\n      value: row[\"id\"],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, this.props.getDisplayName(row))));\n  }\n\n}\n\nexport default DropDownEditor;","map":{"version":3,"sources":["C:/Users/wangm1/comp4960-section1-black-team/comp4960-section1-black-team/src/client/src/pages/sessions/DropDownEditor.js"],"names":["React","DropDownEditor","Component","constructor","props","updateSelectedTimeSlot","bind","triggerSave","state","selectedValue","defaultValue","data","alreadySaving","event","setState","find","row","target","value","onUpdate","focus","componentDidMount","nameInput","render","input","map","getDisplayName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAEL,KAAK,CAACM,YADZ;AAETC,MAAAA,IAAI,EAAEP,KAAK,CAACO,IAAN,IAAc,EAFX;AAGTC,MAAAA,aAAa,EAAE;AAHN,KAAb;AAKH;;AAEDP,EAAAA,sBAAsB,CAACQ,KAAD,EAAQ;AAC1B,SAAKC,QAAL,CAAc;AACVL,MAAAA,aAAa,EAAE,KAAKD,KAAL,CAAWG,IAAX,CAAgBI,IAAhB,CACVC,GAAD,IAASA,GAAG,CAAC,IAAD,CAAH,KAAcH,KAAK,CAACI,MAAN,CAAaC,KADzB;AADL,KAAd;AAKH;;AAEDX,EAAAA,WAAW,GAAG;AACV,QAAI,KAAKC,KAAL,CAAWI,aAAf,EAA8B;AAC1B;AACH;;AAED,SAAKE,QAAL,CAAc;AAACF,MAAAA,aAAa,EAAE;AAAhB,KAAd;AACA,SAAKR,KAAL,CAAWe,QAAX,CAAoB,KAAKX,KAAL,CAAWC,aAA/B;AACH;;AAEDW,EAAAA,KAAK,GAAG,CACP;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,SAAL,CAAeF,KAAf;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AACI,MAAA,SAAS,EAAE,+BADf;AAEI,MAAA,KAAK,EAAE,KAAKf,KAAL,CAAWC,aAAX,GAA2B,KAAKD,KAAL,CAAWC,aAAX,CAAyB,IAAzB,CAA3B,GAA4D,EAFvE;AAGI,MAAA,QAAQ,EAAE,KAAKJ,sBAHnB;AAII,MAAA,MAAM,EAAE,KAAKE,WAJjB;AAKI,MAAA,SAAS,EAAE,KAAKA,WALpB;AAMI,MAAA,GAAG,EAAGiB,KAAD,IAAW;AACZ,aAAKF,SAAL,GAAiBE,KAAjB;AACH,OARL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAUI;AAAQ,MAAA,GAAG,EAAE,IAAb;AAAmB,MAAA,KAAK,EAAE,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAVJ,EAaK,KAAKhB,KAAL,CAAWG,IAAX,CAAgBc,GAAhB,CAAqBT,GAAD,iBACjB;AAAQ,MAAA,GAAG,EAAEA,GAAG,CAAC,IAAD,CAAhB;AAAwB,MAAA,KAAK,EAAEA,GAAG,CAAC,IAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKZ,KAAL,CAAWsB,cAAX,CAA0BV,GAA1B,CADL,CADH,CAbL,CADJ;AAqBH;;AA1DwC;;AA6D7C,eAAef,cAAf","sourcesContent":["import React from \"react\";\r\n\r\nclass DropDownEditor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.updateSelectedTimeSlot = this.updateSelectedTimeSlot.bind(this);\r\n        this.triggerSave = this.triggerSave.bind(this);\r\n        this.state = {\r\n            selectedValue: props.defaultValue,\r\n            data: props.data || [],\r\n            alreadySaving: false\r\n        };\r\n    }\r\n\r\n    updateSelectedTimeSlot(event) {\r\n        this.setState({\r\n            selectedValue: this.state.data.find(\r\n                (row) => row[\"id\"] === event.target.value\r\n            ),\r\n        });\r\n    }\r\n\r\n    triggerSave() {\r\n        if (this.state.alreadySaving) {\r\n            return;\r\n        }\r\n\r\n        this.setState({alreadySaving: true});\r\n        this.props.onUpdate(this.state.selectedValue);\r\n    }\r\n\r\n    focus() {\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nameInput.focus();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <select\r\n                className={\"form-control editor edit-text\"}\r\n                value={this.state.selectedValue ? this.state.selectedValue[\"id\"] : \"\"}\r\n                onChange={this.updateSelectedTimeSlot}\r\n                onBlur={this.triggerSave}\r\n                onKeyDown={this.triggerSave}\r\n                ref={(input) => {\r\n                    this.nameInput = input;\r\n                }}\r\n            >\r\n                <option key={null} value={\"\"}>\r\n                    Please Choose a value...\r\n                </option>\r\n                {this.state.data.map((row) => (\r\n                    <option key={row[\"id\"]} value={row[\"id\"]}>\r\n                        {this.props.getDisplayName(row)}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DropDownEditor"]},"metadata":{},"sourceType":"module"}