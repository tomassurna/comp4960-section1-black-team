{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wangm1\\\\comp4960-section1-black-team\\\\comp4960-section1-black-team\\\\src\\\\client\\\\src\\\\pages\\\\speakers\\\\Speakers.js\";\nimport React from 'react';\nimport { BootstrapTable, ButtonGroup, DeleteButton, InsertButton, InsertModalHeader, TableHeaderColumn, SearchField } from 'react-bootstrap-table';\nimport '../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport $ from 'jquery';\nimport Alert from 'react-s-alert';\n\nclass Speakers extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.createCustomInsertButton = () => {\n      return /*#__PURE__*/React.createElement(InsertButton, {\n        btnText: \"Insert Speaker\",\n        btnContextual: \"btn-success\",\n        className: \"add-speaker-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      });\n    };\n\n    this.createCustomDeleteButton = () => {\n      return /*#__PURE__*/React.createElement(DeleteButton, {\n        btnText: \"Delete Speaker\",\n        btnContextual: \"btn-danger\",\n        className: \"delete-speaker-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }\n      });\n    };\n\n    this.createCustomModalHeader = () => {\n      return /*#__PURE__*/React.createElement(InsertModalHeader, {\n        className: \"speaker-modal-header\",\n        title: \"Add Speaker\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 9\n        }\n      });\n    };\n\n    this.createCustomButtonGroup = props => {\n      return /*#__PURE__*/React.createElement(ButtonGroup, {\n        sizeClass: \"btn-group-md\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }, props.showSelectedOnlyBtn, props.insertBtn, props.deleteBtn, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `btn btn-info edit-mode-btn`,\n        onClick: () => this.setState({\n          editMode: !this.state.editMode\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }, this.state.editMode ? \"Exit Edit Mode\" : \"Edit Mode\"), this.state.deletedRows.length > 0 ? /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: `btn btn-warning undo-btn`,\n        onClick: this.onUndo.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }, \"Undo Delete\") : null);\n    };\n\n    this.createCustomSearchField = () => {\n      return /*#__PURE__*/React.createElement(SearchField, {\n        className: \"speaker-search-field\",\n        style: {\n          height: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }\n      });\n    };\n\n    this.tableProps = {\n      onAddRow: this.addRowHook.bind(this),\n      onDeleteRow: this.deleteRowHook.bind(this),\n      insertBtn: this.createCustomInsertButton,\n      deleteBtn: this.createCustomDeleteButton,\n      insertModalHeader: this.createCustomModalHeader,\n      btnGroup: this.createCustomButtonGroup,\n      searchField: this.createCustomSearchField,\n      clearSearch: true,\n      handleConfirmDeleteRow: this.onConfirmDeleteRow.bind(this)\n    };\n    this.cellEditProps = {\n      mode: 'click',\n      blurToSave: true,\n      beforeSaveCell: this.beforeSaveHook.bind(this)\n    };\n    this.getData();\n    this.state = {\n      data: [],\n      editMode: false,\n      deletedRows: []\n    };\n  }\n\n  getData() {\n    return $.ajax({\n      method: \"GET\",\n      url: \"/Speaker/all\",\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        this.setState({\n          data: response\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error('Unable to load table data.', {\n        position: 'top-right',\n        effect: 'stackslide',\n        timeout: 2000\n      });\n      this.setState({\n        data: []\n      });\n    });\n  }\n\n  addRowHook(row) {\n    // Clear our the id field since the backend will auto generate one for us\n    row.id = null;\n    row.isNew = true;\n    this.addRowAjaxCall(row);\n  } // We use this call here when we do not want to delete the row id\n\n\n  addRowAjaxCall(row) {\n    const data = this.state.data;\n    $.ajax({\n      method: \"POST\",\n      url: \"/Speaker/addSpeaker\",\n      data: JSON.stringify(row),\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        data.push(response);\n        this.setState({\n          data: data\n        });\n        Alert.success(\"Speaker added.\", {\n          position: 'top-right',\n          effect: 'stackslide',\n          timeout: 2000\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Error saving row.\", {\n        position: 'top-right',\n        effect: 'stackslide',\n        timeout: 2000\n      });\n    });\n  }\n\n  deleteRowHook(rowIdsToDelete) {\n    const data = this.state.data;\n    const rowsToDelete = data.filter(row => rowIdsToDelete.includes(row.id));\n    const currentDeletedRows = this.state.deletedRows;\n    currentDeletedRows.push(rowsToDelete);\n    this.setState({\n      deletedRows: currentDeletedRows\n    });\n    $.ajax({\n      method: \"POST\",\n      url: \"/Speaker/deleteSpeaker\",\n      data: JSON.stringify(rowIdsToDelete),\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        this.setState({\n          data: data.filter(row => !rowIdsToDelete.includes(row.id))\n        });\n        Alert.success(\"Row(s) deleted.\", {\n          position: 'top-right',\n          effect: 'stackslide',\n          timeout: 2000\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Error deleting row(s).\", {\n        position: 'top-right',\n        effect: 'stackslide',\n        timeout: 2000\n      });\n    });\n  }\n\n  beforeSaveHook(row, cellName, cellValue, done) {\n    let mockRow = { ...row\n    };\n    mockRow[cellName] = cellValue;\n    $.ajax({\n      method: \"POST\",\n      url: \"/Speaker/updateSpeaker\",\n      data: JSON.stringify(mockRow),\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        done(true);\n        Alert.success(\"Row updated.\", {\n          position: 'top-right',\n          effect: 'stackslide',\n          timeout: 2000\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      Alert.error(\"Error saving row.\", {\n        position: 'top-right',\n        effect: 'stackslide',\n        timeout: 2000\n      });\n      done(false);\n    });\n    return 1;\n  }\n\n  onConfirmDeleteRow(next, dropRowKeys) {\n    next();\n  }\n\n  onUndo() {\n    // When we undo, add back the deleted rows\n    const deletedRows = this.state.deletedRows.pop();\n    deletedRows.forEach(row => this.addRowAjaxCall(row));\n  }\n\n  cannotBeEmptyValidator(value, row) {\n    const response = {\n      isValid: true,\n      notification: {\n        type: 'success',\n        msg: '',\n        title: ''\n      }\n    };\n\n    if (!value) {\n      response.isValid = false;\n      response.notification.type = 'error';\n      response.notification.msg = 'Speaker name must be inserted';\n      response.notification.title = 'Requested Value';\n    }\n\n    return response;\n  }\n\n  emailValidator(value, row) {\n    const response = {\n      isValid: true,\n      notification: {\n        type: 'success',\n        msg: '',\n        title: ''\n      }\n    };\n    const re = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n    if (!String(value).match(re) && !!value) {\n      response.isValid = false;\n      response.notification.type = 'error';\n      response.notification.msg = 'Email entered was not valid';\n      response.notification.title = 'Invalid Entry';\n    }\n\n    return response;\n  }\n\n  phoneNumberValidator(value, row) {\n    const response = {\n      isValid: true,\n      notification: {\n        type: 'success',\n        msg: '',\n        title: ''\n      }\n    };\n    const re = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\n\n    if (!String(value).match(re) && !!value) {\n      response.isValid = false;\n      response.notification.type = 'error';\n      response.notification.msg = 'Number entered was not valid';\n      response.notification.title = 'Invalid Entry';\n    }\n\n    return response;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 25\n      }\n    }, \"Speakers\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, {\n      striped: true,\n      hover: true,\n      condensed: true,\n      data: this.state.data,\n      search: true,\n      version: \"4\",\n      insertRow: true,\n      deleteRow: true,\n      selectRow: {\n        mode: 'checkbox'\n      },\n      options: this.tableProps,\n      cellEdit: this.state.editMode ? this.cellEditProps : {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      hidden: true,\n      hiddenOninsert: true,\n      autoValue: true,\n      isKey: true,\n      dataField: \"id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 25\n      }\n    }, \"id\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"speakerName\",\n      editable: {\n        validator: this.cannotBeEmptyValidator\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 25\n      }\n    }, \"Speaker Name\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"email\",\n      editable: {\n        validator: this.emailValidator\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"everydayNumber\",\n      editable: {\n        validator: this.phoneNumberValidator\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, \"Everyday Number\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"dayOfNumber\",\n      editable: {\n        validator: this.phoneNumberValidator\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 25\n      }\n    }, \"Day Of Number\"))));\n  }\n\n}\n\nexport default Speakers;","map":{"version":3,"sources":["C:/Users/wangm1/comp4960-section1-black-team/comp4960-section1-black-team/src/client/src/pages/speakers/Speakers.js"],"names":["React","BootstrapTable","ButtonGroup","DeleteButton","InsertButton","InsertModalHeader","TableHeaderColumn","SearchField","$","Alert","Speakers","Component","constructor","props","createCustomInsertButton","createCustomDeleteButton","createCustomModalHeader","createCustomButtonGroup","showSelectedOnlyBtn","insertBtn","deleteBtn","setState","editMode","state","deletedRows","length","onUndo","bind","createCustomSearchField","height","tableProps","onAddRow","addRowHook","onDeleteRow","deleteRowHook","insertModalHeader","btnGroup","searchField","clearSearch","handleConfirmDeleteRow","onConfirmDeleteRow","cellEditProps","mode","blurToSave","beforeSaveCell","beforeSaveHook","getData","data","ajax","method","url","type","contentType","success","response","catch","xhr","status","error","position","effect","timeout","row","id","isNew","addRowAjaxCall","JSON","stringify","push","rowIdsToDelete","rowsToDelete","filter","includes","currentDeletedRows","cellName","cellValue","done","mockRow","next","dropRowKeys","pop","forEach","cannotBeEmptyValidator","value","isValid","notification","msg","title","emailValidator","re","String","match","phoneNumberValidator","render","validator"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {\r\n    BootstrapTable,\r\n    ButtonGroup,\r\n    DeleteButton,\r\n    InsertButton,\r\n    InsertModalHeader,\r\n    TableHeaderColumn,\r\n    SearchField\r\n} from 'react-bootstrap-table';\r\nimport '../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport $ from 'jquery';\r\nimport Alert from 'react-s-alert';\r\n\r\nclass Speakers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getData();\r\n        this.state = {\r\n            data: [],\r\n            editMode: false,\r\n            deletedRows: []\r\n        };\r\n    }\r\n\r\n    getData() {\r\n        return $.ajax({\r\n            method: \"GET\",\r\n            url: \"/Speaker/all\",\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                this.setState({\r\n                    data: response\r\n                });\r\n            }\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error('Unable to load table data.', {\r\n                position: 'top-right',\r\n                effect: 'stackslide',\r\n                timeout: 2000\r\n            });\r\n\r\n            this.setState({\r\n                data: []\r\n            });\r\n        });\r\n    }\r\n\r\n    addRowHook(row) {\r\n        // Clear our the id field since the backend will auto generate one for us\r\n        row.id = null;\r\n        row.isNew = true;\r\n        this.addRowAjaxCall(row);\r\n    }\r\n\r\n    // We use this call here when we do not want to delete the row id\r\n    addRowAjaxCall(row) {\r\n        const data = this.state.data;\r\n\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/Speaker/addSpeaker\",\r\n            data: JSON.stringify(row),\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                data.push(response);\r\n                this.setState({\r\n                    data: data\r\n                });\r\n                Alert.success(\"Speaker added.\", {\r\n                    position: 'top-right',\r\n                    effect: 'stackslide',\r\n                    timeout: 2000\r\n                });\r\n            }\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Error saving row.\", {\r\n                position: 'top-right',\r\n                effect: 'stackslide',\r\n                timeout: 2000\r\n            });\r\n        });\r\n    }\r\n\r\n    deleteRowHook(rowIdsToDelete) {\r\n        const data = this.state.data;\r\n        const rowsToDelete = data.filter((row) => rowIdsToDelete.includes(row.id));\r\n\r\n        const currentDeletedRows = this.state.deletedRows;\r\n        currentDeletedRows.push(rowsToDelete);\r\n\r\n        this.setState({deletedRows: currentDeletedRows});\r\n\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/Speaker/deleteSpeaker\",\r\n            data: JSON.stringify(rowIdsToDelete),\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                this.setState({data: data.filter((row) => !rowIdsToDelete.includes(row.id))});\r\n\r\n                Alert.success(\"Row(s) deleted.\", {\r\n                    position: 'top-right',\r\n                    effect: 'stackslide',\r\n                    timeout: 2000\r\n                });\r\n            }\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Error deleting row(s).\", {\r\n                position: 'top-right',\r\n                effect: 'stackslide',\r\n                timeout: 2000\r\n            });\r\n        });\r\n    }\r\n\r\n    beforeSaveHook(row, cellName, cellValue, done) {\r\n        let mockRow = {...row};\r\n        mockRow[cellName] = cellValue;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/Speaker/updateSpeaker\",\r\n            data: JSON.stringify(mockRow),\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                done(true);\r\n                Alert.success(\"Row updated.\", {\r\n                    position: 'top-right',\r\n                    effect: 'stackslide',\r\n                    timeout: 2000\r\n                });\r\n            }\r\n        }).catch(function (xhr, status, error) {\r\n            Alert.error(\"Error saving row.\", {\r\n                position: 'top-right',\r\n                effect: 'stackslide',\r\n                timeout: 2000\r\n            });\r\n            done(false);\r\n        });\r\n\r\n        return 1;\r\n    }\r\n\r\n    onConfirmDeleteRow(next, dropRowKeys) {\r\n        next();\r\n    }\r\n\r\n    onUndo() {\r\n        // When we undo, add back the deleted rows\r\n        const deletedRows = this.state.deletedRows.pop();\r\n        deletedRows.forEach((row) => this.addRowAjaxCall(row));\r\n    }\r\n\r\n    cannotBeEmptyValidator(value, row) {\r\n        const response = {isValid: true, notification: {type: 'success', msg: '', title: ''}};\r\n        if (!value) {\r\n            response.isValid = false;\r\n            response.notification.type = 'error';\r\n            response.notification.msg = 'Speaker name must be inserted';\r\n            response.notification.title = 'Requested Value';\r\n        }\r\n        return response;\r\n    }\r\n\r\n    emailValidator(value, row) {\r\n        const response = {isValid: true, notification: {type: 'success', msg: '', title: ''}};\r\n        const re = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n        if (!(String(value).match(re)) && !!value) {\r\n            response.isValid = false;\r\n            response.notification.type = 'error';\r\n            response.notification.msg = 'Email entered was not valid';\r\n            response.notification.title = 'Invalid Entry';\r\n        }\r\n        return response;\r\n    }\r\n\r\n    phoneNumberValidator(value, row) {\r\n        const response = {isValid: true, notification: {type: 'success', msg: '', title: ''}};\r\n        const re = /^\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;\r\n        if (!(String(value).match(re)) && !!value) {\r\n            response.isValid = false;\r\n            response.notification.type = 'error';\r\n            response.notification.msg = 'Number entered was not valid';\r\n            response.notification.title = 'Invalid Entry';\r\n        }\r\n        return response;\r\n    }\r\n\r\n    createCustomInsertButton = () => {\r\n      return (\r\n        <InsertButton\r\n          btnText='Insert Speaker'\r\n          btnContextual='btn-success'\r\n          className='add-speaker-btn'/>\r\n      );\r\n    };\r\n\r\n    createCustomDeleteButton = () =>{\r\n      return (\r\n        <DeleteButton\r\n          btnText='Delete Speaker'\r\n          btnContextual='btn-danger'\r\n          className='delete-speaker-btn'/>\r\n      );\r\n    };\r\n\r\n    createCustomModalHeader = () => {\r\n      return (\r\n        <InsertModalHeader\r\n          className='speaker-modal-header'\r\n          title='Add Speaker'/>\r\n      );\r\n    };\r\n\r\n    createCustomButtonGroup = props => {\r\n        return (\r\n            <ButtonGroup sizeClass='btn-group-md'>\r\n                {props.showSelectedOnlyBtn}\r\n                {props.insertBtn}\r\n                {props.deleteBtn}\r\n                <button type='button'\r\n                        className={`btn btn-info edit-mode-btn`}\r\n                        onClick={() => this.setState({editMode: !this.state.editMode})}>\r\n                    {this.state.editMode ? \"Exit Edit Mode\" : \"Edit Mode\"}\r\n                </button>\r\n                {this.state.deletedRows.length > 0 ?\r\n                    <button type='button'\r\n                            className={`btn btn-warning undo-btn`}\r\n                            onClick={this.onUndo.bind(this)}>\r\n                        Undo Delete\r\n                    </button> : null}\r\n            </ButtonGroup>\r\n        );\r\n    };\r\n\r\n    createCustomSearchField = () => {\r\n        return (\r\n          <SearchField\r\n              className='speaker-search-field'\r\n              style={ { height: 40 } }/>\r\n        );\r\n      }\r\n\r\n    tableProps = {\r\n        onAddRow: this.addRowHook.bind(this),\r\n        onDeleteRow: this.deleteRowHook.bind(this),\r\n        insertBtn: this.createCustomInsertButton,\r\n        deleteBtn: this.createCustomDeleteButton,\r\n        insertModalHeader: this.createCustomModalHeader,\r\n        btnGroup: this.createCustomButtonGroup,\r\n        searchField: this.createCustomSearchField,\r\n        clearSearch: true,\r\n        handleConfirmDeleteRow: this.onConfirmDeleteRow.bind(this)\r\n    };\r\n\r\n    cellEditProps = {\r\n        mode: 'click',\r\n        blurToSave: true,\r\n        beforeSaveCell: this.beforeSaveHook.bind(this)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h3>Speakers</h3>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <BootstrapTable striped\r\n                                    hover\r\n                                    condensed\r\n                                    data={this.state.data}\r\n                                    search\r\n                                    version='4'\r\n                                    insertRow\r\n                                    deleteRow\r\n                                    selectRow={{mode: 'checkbox'}}\r\n                                    options={this.tableProps}\r\n                                    cellEdit={this.state.editMode ? this.cellEditProps : {}}>\r\n                        <TableHeaderColumn hidden\r\n                                           hiddenOninsert\r\n                                           autoValue\r\n                                           isKey\r\n                                           dataField='id'>id</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='speakerName'\r\n                                           editable={{validator: this.cannotBeEmptyValidator}}>Speaker Name</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='email'\r\n                                           editable={{validator: this.emailValidator}}>Email</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='everydayNumber'\r\n                                           editable={{validator: this.phoneNumberValidator}}>Everyday Number</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='dayOfNumber'\r\n                                           editable={{validator: this.phoneNumberValidator}}>Day Of Number</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Speakers\r\n"]},"metadata":{},"sourceType":"module"}