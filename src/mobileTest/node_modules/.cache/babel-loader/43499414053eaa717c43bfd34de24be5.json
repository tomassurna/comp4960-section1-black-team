{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wangm1\\\\comp4960-section1-black-team\\\\comp4960-section1-black-team\\\\src\\\\client\\\\src\\\\pages\\\\speakers\\\\Speakers.js\";\nimport React from 'react';\nimport { BootstrapTable, TableHeaderColumn, InsertButton } from 'react-bootstrap-table';\nimport '../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\nimport $ from 'jquery'; //...\n\nconst options = {\n  insertBtn: this.createCustomInsertButton\n};\n\nclass Speakers extends React.Component {\n  constructor(props) {\n    super(props);\n    this.tableProps = {\n      onAddRow: this.addRowHook.bind(this),\n      afterDeleteRow: this.deleteRowHook.bind(this)\n    };\n    this.cellEditProps = {\n      mode: 'click',\n      blurToSave: true,\n      beforeSaveCell: this.beforeSaveHook.bind(this)\n    };\n    this.getData();\n    this.state = {\n      data: this.data\n    };\n    this.CustomInsertButton();\n  }\n\n  getData() {\n    return $.ajax({\n      method: \"GET\",\n      url: \"/Speaker/all\",\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        this.setState({\n          data: response\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      // TODO: Some form of error handling.\n      console.log(error);\n      this.setState({\n        data: []\n      });\n    });\n  }\n\n  addRowHook(row) {\n    const data = this.state.data || []; // Clear our the id field since the backend will auto generate one for us\n\n    row.id = null;\n    $.ajax({\n      method: \"POST\",\n      url: \"/Speaker/addSpeaker\",\n      data: JSON.stringify(row),\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        data.push(response);\n        this.setState({\n          data: data\n        });\n      }\n    }).catch(function (xhr, status, error) {\n      // TODO: Some form of error handling.\n      console.log(error);\n    });\n  }\n\n  deleteRowHook(rowIdsToDelete) {\n    $.ajax({\n      method: \"POST\",\n      url: \"/Speaker/deleteSpeaker\",\n      data: JSON.stringify(rowIdsToDelete),\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {// TODO: Implement some undo function\n      }\n    }).catch(function (xhr, status, error) {\n      // TODO: Some form of error handling.\n      console.log(error);\n    });\n  }\n\n  beforeSaveHook(row, cellName, cellValue, done) {\n    let mockRow = { ...row\n    };\n    mockRow[cellName] = cellValue;\n    $.ajax({\n      method: \"POST\",\n      url: \"/Speaker/updateSpeaker\",\n      data: JSON.stringify(mockRow),\n      type: \"json\",\n      contentType: \"application/json\",\n      success: response => {\n        // TODO: Implement some undo function\n        done(true);\n      }\n    }).catch(function (xhr, status, error) {\n      // TODO: Some form of error handling.\n      console.log(error);\n      done(false);\n    });\n    return 1;\n  }\n\n  cannotBeEmptyValidator(value, row) {\n    const response = {\n      isValid: true,\n      notification: {\n        type: 'success',\n        msg: '',\n        title: ''\n      }\n    };\n\n    if (!value) {\n      response.isValid = false;\n      response.notification.type = 'error';\n      response.notification.msg = 'Value must be inserted';\n      response.notification.title = 'Requested Value';\n    }\n\n    return response;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, \"Speakers\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BootstrapTable, {\n      striped: true,\n      hover: true,\n      condensed: true,\n      data: this.state.data // pagination\n      ,\n      exportCSV: true,\n      version: \"4\",\n      insertRow: true,\n      deleteRow: true,\n      selectRow: {\n        mode: 'checkbox'\n      },\n      options: this.tableProps,\n      options: options,\n      cellEdit: this.cellEditProps,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      hidden: true,\n      hiddenOninsert: true,\n      autoValue: true,\n      isKey: true,\n      dataField: \"id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, \"id\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"speakerName\",\n      editable: {\n        validator: this.cannotBeEmptyValidator\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, \"Speaker Name\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"everydayNumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, \"Everyday Number\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n      dataField: \"dayOfNumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, \"Day Of Number\"))));\n  }\n\n}\n\nexport default Speakers;","map":{"version":3,"sources":["C:/Users/wangm1/comp4960-section1-black-team/comp4960-section1-black-team/src/client/src/pages/speakers/Speakers.js"],"names":["React","BootstrapTable","TableHeaderColumn","InsertButton","$","options","insertBtn","createCustomInsertButton","Speakers","Component","constructor","props","tableProps","onAddRow","addRowHook","bind","afterDeleteRow","deleteRowHook","cellEditProps","mode","blurToSave","beforeSaveCell","beforeSaveHook","getData","state","data","CustomInsertButton","ajax","method","url","type","contentType","success","response","setState","catch","xhr","status","error","console","log","row","id","JSON","stringify","push","rowIdsToDelete","cellName","cellValue","done","mockRow","cannotBeEmptyValidator","value","isValid","notification","msg","title","render","validator"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {BootstrapTable, TableHeaderColumn, InsertButton } from 'react-bootstrap-table';\r\nimport '../../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min.css';\r\nimport $ from 'jquery';\r\n\r\n\r\n//...\r\nconst options = {\r\n  insertBtn: this.createCustomInsertButton\r\n};\r\n\r\nclass Speakers extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.getData();\r\n        this.state = {\r\n            data: this.data\r\n        };\r\n        this.CustomInsertButton();\r\n    }\r\n\r\n    getData() {\r\n        return $.ajax({\r\n            method: \"GET\",\r\n            url: \"/Speaker/all\",    \r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                this.setState({\r\n                    data: response\r\n                });\r\n            }\r\n        }).catch(function (xhr, status, error) {\r\n            // TODO: Some form of error handling.\r\n            console.log(error);\r\n            this.setState({\r\n                data: []\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    addRowHook(row) {\r\n        const data = this.state.data || [];\r\n\r\n        // Clear our the id field since the backend will auto generate one for us\r\n        row.id = null;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/Speaker/addSpeaker\",\r\n            data: JSON.stringify(row),\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                data.push(response);\r\n                this.setState({\r\n                    data: data\r\n                });\r\n            }\r\n        }).catch(function (xhr, status, error) {\r\n            // TODO: Some form of error handling.\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    deleteRowHook(rowIdsToDelete) {\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/Speaker/deleteSpeaker\",\r\n            data: JSON.stringify(rowIdsToDelete),\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                // TODO: Implement some undo function\r\n            }\r\n        }).catch(function (xhr, status, error) {\r\n            // TODO: Some form of error handling.\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    beforeSaveHook(row, cellName, cellValue, done) {\r\n        let mockRow = {...row};\r\n        mockRow[cellName] = cellValue;\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/Speaker/updateSpeaker\",\r\n            data: JSON.stringify(mockRow),\r\n            type: \"json\",\r\n            contentType: \"application/json\",\r\n            success: (response) => {\r\n                // TODO: Implement some undo function\r\n                done(true);\r\n            }\r\n        }).catch(function (xhr, status, error) {\r\n            // TODO: Some form of error handling.\r\n            console.log(error);\r\n            done(false);\r\n        });\r\n\r\n        return 1;\r\n    }\r\n\r\n    cannotBeEmptyValidator(value, row) {\r\n        const response = {isValid: true, notification: {type: 'success', msg: '', title: ''}};\r\n        if (!value) {\r\n            response.isValid = false;\r\n            response.notification.type = 'error';\r\n            response.notification.msg = 'Value must be inserted';\r\n            response.notification.title = 'Requested Value';\r\n        }\r\n        return response;\r\n    }\r\n\r\n    tableProps = {\r\n        onAddRow: this.addRowHook.bind(this),\r\n        afterDeleteRow: this.deleteRowHook.bind(this)\r\n    };\r\n\r\n    cellEditProps = {\r\n        mode: 'click',\r\n        blurToSave: true,\r\n        beforeSaveCell: this.beforeSaveHook.bind(this)\r\n    };\r\n\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                        <h3>Speakers</h3>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <BootstrapTable striped hover condensed\r\n                                    data={this.state.data}\r\n                        // pagination\r\n                                    exportCSV\r\n                                    version='4'\r\n                                    insertRow\r\n                                    deleteRow\r\n                                    selectRow={{mode: 'checkbox'}}\r\n                                    options={this.tableProps}\r\n                                    options={options}\r\n                                    cellEdit={this.cellEditProps}>\r\n                        <TableHeaderColumn hidden hiddenOninsert autoValue isKey dataField='id'>id</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='speakerName' editable={{validator: this.cannotBeEmptyValidator}}>Speaker\r\n                            Name</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='email'>Email</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='everydayNumber'>Everyday Number</TableHeaderColumn>\r\n                        <TableHeaderColumn dataField='dayOfNumber'>Day Of Number</TableHeaderColumn>\r\n                    </BootstrapTable>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Speakers\r\n"]},"metadata":{},"sourceType":"module"}